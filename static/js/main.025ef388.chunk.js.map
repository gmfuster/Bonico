{"version":3,"sources":["Components/MainImage.jsx","Components/DescriptionSections.jsx","Components/LandingPageCardComponent.jsx","Components/GamesAndPDFs.jsx","Components/Footer.jsx","LandingPage.js","Components/NavBar.js","Views/KidsActivities/bdpq.jsx","Components/LetterCircle.component.jsx","Components/ModelWindowWithText.jsx","Components/LetterCircleList.component.jsx","Views/KidsActivities/bdpqCircles.jsx","Views/KidsActivities/mnwCircles.jsx","Components/TextFieldWithButton.jsx","Views/KidsActivities/CanvasTrace.jsx","Components/ShuffleCardsAndShow.jsx","Views/KidsActivities/greaterLessEqual.jsx","Views/KidsActivities/NumberBonds.jsx","Views/KidsActivities/FillSquares.jsx","Views/KidsActivities/PlusOrMinus.jsx","commonJS.js","Views/KidsActivities/SortingNoDnD.jsx","Views/KidsActivities/Prefixsuffix.jsx","Views/KidsActivities/3LetterWordSounds.jsx","Views/KidsActivities/PlusOnePlusZero.jsx","Components/CanvasComponent.jsx","Views/KidsActivities/Subtraction.jsx","Views/KidsActivities/Counting.jsx","Views/KidsActivities/minorPrintables.jsx","Views/KidsActivities/ModelingTens.jsx","Views/KidsActivities/NextNumber.jsx","Components/ShufflePicsandShow.jsx","Views/Games/SpinStarWarsCars.jsx","Views/Games/SpinShapes.jsx","Views/Games/MemoryCards.jsx","Components/MathOperationComponent.jsx","Views/Games/AdditionMaze.jsx","Views/SoftwareNotes/cssanimations.jsx","Views/SoftwareNotes/csspositioning.jsx","Views/SoftwareNotes/reactnotes1.jsx","Views/PersonalInterests/ReadBackwards.jsx","Views/PersonalInterests/RemoveDupPics.jsx","Views/PersonalInterests/Chinese.jsx","Components/KindergartenMath.jsx","Components/KindergartenLang.jsx","Components/PersonalInterestsSections.jsx","index.js"],"names":["MainImage","Fragment","className","style","position","width","height","opacity","src","process","alt","top","left","right","DescriptionSections","background","margin","padding","border","display","flexDirection","justifyContent","href","target","heigth","bottom","to","LandingPageCardComponentForHref","props","fullPath","classN","undefined","borderColorClass","textDecoration","alignItems","fontSize","text","LandingPageCardComponent","topic","imgSrc","imageSrc","GamesAndPDFs","window","scroll","Container","fluid","Row","Col","sm","FoorterInfo","marginBottom","pathPic","LandingPage","Footer","Component","NavBar","reactLinkSt","color","paddingLeft","paddingRight","reactLinkSt2","Object","assign","Navbar","fixed","expand","Toggle","aria-controls","Collapse","id","Nav","Link","bdpq","generateRandomNumber","Math","floor","random","state","words","length","getAWordFromArray","refToCorrectImage","current","visibility","refToIncorrectImage","index","word","selectedWord","setState","forceUpdate","clickLetter","l","React","createRef","title","onClick","this","ref","substr","LetterCircle","setColor","letter","targetLetter","backgroundColor","functionToCallBack","button","ModelWindowWithText","modalStyle","posTop","posLeft","borderRadius","callbackFunction","LetterCircleList","removeModal","containerForModal","checkIfAllHaveBeenFound","numberOfLettersFound","numberPerLetter","theList","newList","letterGroup","i","push","value","allDone","theListCopy","newItem","find","it","splice","map","circle","key","bdpqCircles","checkedLetter","s","selectedLetter","type","name","onChange","htmlFor","mnwCircles","forceUpdateNow","TextFieldWithButton","sendTheText","functionToCall","refToInput","sendTheTextBlank","marginLeft","marginRight","placeholder","textForInput","textForButton","CanvasTrace","canvasX","canvasY","touchX","touchY","handleResize","getCanvasPosition","refToCanvas","clientWidth","clientHeight","GetOffset","object","offset","x","offsetLeft","y","offsetTop","offsetParent","GetScrolled","scrolled","scrollLeft","scrollTop","tagName","toLowerCase","parentNode","getTouchPosition","e","canvas","touches","touch","pageX","pageY","drawDot","ctx","fillStyle","beginPath","fillRect","closePath","fill","updateCanvas","txt","textForCanvas","setCanvasText","getContext","clearRect","fonts","round","font","measureText","strokeText","canvasTouchStart","preventDefault","canvasTouchMove","printTheText","newWindow","open","linkF","document","createElement","rel","body","appendChild","sheet","innerHTML","sheet2","desc","p","brp","br","console","log","addEventListener","passive","ShuffleCardsAndShow","componentDidMount","refToDiv","animationEnded","roll","maxNumber","elementsForCard","animationAndDisplay","numberSelected","cardStyle","myColor","fontFamily","myFont","myWidth","myHeight","userSelect","GreaterLessEqual","getNewResults","childPlayer1Ref","childPlayer2Ref","childComparisonRef","elementsForCardNumbersPlayers","textAlign","marginTop","NumberBonds","goClick","random1","numbersToUse","randomTotal","signs","dots","items1","items2","total","el1","el2","correction","resetClick","numberClick","n","divHorContainer","divHorEq","square","borderTop","FillSquares","squareClick","sqr","newColorClass","getNextColorClass","currentClasses","squareClasses","currentPink","currentBlue","number1P","number2B","sliderMin","sliderMax","defaultClass","colorClass","containerStyle","flexWrap","currentTarget","PLusOrMinus","setUpArrayOfQuestions","theArray","obj","equation","getNextQuestion","arrayOfQuestionObjects","arrayInd","drop1","drop2","dropSign","dropSol","message","resetEq","showEquation","num","clickEl","cursor","generateRandomNumberForXNumberOfValues","SortingNoDnD","switchSortBy","sortingBychosen","sortingBy","greatestToLeast","leastToGreatest","sortBy","textToDisplay","textSortedByComputer","getThingsToSort","option","optionChosen","randomNum","textArray","stringToSet","options","items","totalNumberToSort","j","sourceElements","textSortedByKid","showSolution","sortedArray","slice","sort","a","b","parseInt","goDown","arrAux","aux","goUp","numbers","divVertContainer","disabled","Prefixsuffix","next","currentWord","rootWords","findIndex","item","toUpperCase","prefix","suffix","prefixsuffix","ps","scrollTo","buttonStylesPre","buttonStylesSuf","wordStylesPre","borderBottom","wordStylesClick","wordStylesSuf","ThreeLetterWordSounds","getLetter0","getLetter","getLetter1","getLetter2","getNextDifferentLetter","letterPositionInWord","currentLetter","newLetter","newIndex","foundDifferentLetter","currentRowIndex","letter0Index","letter1Index","letter2Index","arrayOfWordsAsLettersInterChange","letterNumber","nextLetter","letter0","letter1","letter2","cardStyles","PlusOnePlusZero","setOption","optionString","elementsForWhatToAdd","elementsForWhatToAddTo","checked1","checked2","result","numberWeAddToRef","numberBeingAddedRef","storeResultNumberWeAddTo","number","numberWeAddTo","storeResultNumberBeingAdded","numberBeingAdded","showResult","checked","CanvasComponent","setCanvasDefault","IsThisText","DefaultDisplay","IsThisAnImage","img","Image","imgW","imgH","onload","ev","drawImage","resetCanvas","defaultDisplay","canvasStyle","canvasWidth","canvasHeight","Subtraction","getNewNumbers","random2","numberOne","numberTwo","abs","imgPath","Counting","nextDigit","d","digit1","digit2","mainDiv","disableBodyScroll","clearAllBodyScrollLocks","buttons","outline","blueButtons","pinkButtons","MinorPrintables","ModelingTens","addLine","imgSize","sizeOfLine","arrayOfImages","numberBuilt","addOne","sizeOfOne","reset","overflow","marging","NextNumber","rollNumber","showOptionsForSelectedNumber","plus1","plus2","plus10_1","plus10_2","positionFirst","selectedNumber","plusOption1","plusOption2","tenOption1","tenOption2","border2","border1","clickPlus1","clickPlus10","group1Contents","groupForPlus1","group2Contents","groupForPlus10","myBorder","ShufflePicsAndShow","refToContainingDiv","arrayOfPicPaths","repeatItems","elementsForPics","refToImg","picStyle","myIMageWidth","myImageHeight","SpinStarWarsCars","starwarscars","pathForCarsPics","myPicsPath","parthToPics","SpinShapes","shapes","pathForShapePics","useEffect","MemoryCards","questionPic","elementsForPicsBeforeSorting","useState","shownPics","setShownPics","playerScores","setPlayerScores","useRef","openCards","needToUpdateCountersAndReset","playerScoresRef","currentPlayer","imageClicked","auxArr","setTimeout","itemStyle","gridTemplateColumns","gridTemplateRows","MathOperationComponent","initColor","size","checkForColor","operator","number1","number2","AdditionMaze","mat","valuesMatrix","getTrueResult","first","second","getFalseResult","fillMatrix","path","whatByWhat","loops","generatePathForMatrixFromStartToEnd","some","row1","setRow1","row2","setRow2","row3","setRow3","row4","setRow4","row5","setRow5","idkey","setIdKey","itemStyleFixed","itemFont","CSSAnimations","transform","CSSPositioning","ReactNotes1","ReadBackwards","url","titleDesc","getRssFeed","fetch","response","xmlText","xmlDoc","parser","DOMParser","parseFromString","arrayOfNews","getElementsByTagName","childNodes","nodeValue","revStyleTitle","revStyleDesc","revStyleOrig","RemoveDupPics","Chinese","styleSymbol","styleSymTrans","sym","trans","read","fontWeight","kindergartenMath","kindergartenLang","PersonalInterestsSections","routing","baseline","exact","component","PersonalInterestsSection","PlusOrMinus","Sorting","ReactDOM","render","getElementById"],"mappings":"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,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KACjJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAChJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAChJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAChJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAChJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KACjI,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAA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AC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAChJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAChJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAChJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAChJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAChJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAChJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,K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","file":"static/js/main.025ef388.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction MainImage () {       \r\n   \r\n      const pathPicSrc = process.env.REACT_APP_FOR_PATH_FOR_PICS +  \"/images/boyplaybeach.png\";\r\n      const learningPic = process.env.REACT_APP_FOR_PATH_FOR_PICS +  \"/images/learning.svg\";\r\n      const isPic = process.env.REACT_APP_FOR_PATH_FOR_PICS +  \"/images/is.svg\";\r\n      const funPic = process.env.REACT_APP_FOR_PATH_FOR_PICS +  \"/images/fun.svg\";\r\n\r\n      var imageStyle = {        \r\n        height: \"100%\",\r\n        width:\"100%\",    \r\n        opacity:\"100%\"    \r\n      }      \r\n\r\n      let divStyle ={\r\n        position:\"relative\",\r\n        width:\"100%\",\r\n        height: \"55vh\",\r\n      }\r\n\r\n      \r\n\r\n     return(\r\n        \r\n        <React.Fragment>                \r\n            <div className=\"imageContainer TopMarginToDealWithNavBarImg\" style={divStyle}>\r\n              <img style = {imageStyle} src = {pathPicSrc} alt=\"boy at beach\"/>  \r\n              {/*<div className=\"bottomImageText\">Learning is Fun!</div>*/}\r\n              <img className=\"mainImageAnimation\" style = {{position:\"absolute\",  width:\"45%\", height:\"45%\", top:\"20%\", left:\"0%\", opacity:\"75%\"}} src = {learningPic} alt=\"LEARNING\"/>  \r\n              <img className=\"mainImageAnimation\" style = {{position:\"absolute\",  width:\"45%\", height:\"45%\",top:\"45%\", left:\"25%\",opacity:\"90%\"}} src = {isPic} alt=\"IS\"/>  \r\n              <img className=\"mainImageAnimation\" style = {{position:\"absolute\",  width:\"45%\", height:\"45%\", top:\"35%\", right:\"2%\",opacity:\"75%\"}} src = {funPic} alt=\"FUN\"/>  \r\n            </div>        \r\n        </React.Fragment>\r\n      )\r\n  }\r\n\r\nexport default MainImage;","import React from \"react\";\r\nimport {Link as ReactLink} from 'react-router-dom';\r\n\r\nfunction DescriptionSections () {\r\n    \r\n    const path = process.env.REACT_APP_FOR_PATH ;\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"DescriptionSectionText\">  \r\n                    <br/>                  \r\n                    <img style = {{ height:\"30Vh\", width:\"90vw\"}} src={process.env.REACT_APP_FOR_PATH_FOR_PICS + '/images/validdevices.svg'}  alt=\"valid devices computer tablet\"  />     <br/>                                                         \r\n                    <br/><br/>\r\n                    <img style = {{ height:\"30Vh\", width:\"85vw\"}} src={process.env.REACT_APP_FOR_PATH_FOR_PICS + '/images/someactivities.svg'}  alt=\"some activities require grown uptouch screen\"  />                                                              \r\n                </div>\r\n                <br/>\r\n                \r\n                <div style={{position:\"relative\"}}>\r\n                    \r\n                    <div style={{background:\"teal\", margin:\"5vw\", padding:\"4vh\", border:\"5px double salmon\", height:\"400px\" }}>    \r\n                        <div style={{ display:\"flex\", flexDirection:\"row\", justifyContent:\"flex-end\"}} >\r\n                            <a href=\"https://www.amazon.com/dp/B092V2CRNF/ref=cm_sw_em_r_mt_dp_5VRHWY06VPRX9RT2QNZ2\" target=\"_new\" >\r\n                                <img  style={{border:\"3px solid navy\", margin:\"3px\"}}  width=\"175px\" heigth=\"175px\" src={process.env.REACT_APP_FOR_PATH_FOR_PICS + \"/images/howdidyougetme.jpg\"} alt=\"Jon and his mom talk about - Amazon\"/>\r\n                                <br/>\r\n                                <img style = {{ height:\"50px\", width:\"50px\"}} src={process.env.REACT_APP_FOR_PATH_FOR_PICS + '/images/clickme.svg'}  alt=\"some activities require grown uptouch screen\"  />                                                              \r\n                            </a>\r\n                            \r\n                            <a  margin=\"10px\" href=\"https://www.amazon.com/dp/B08JF5KNK8/ref=cm_sw_em_r_mt_dp_KJKC4PN7CP3HR4Z33DJR\" target=\"_new\">\r\n                                <img style={{border:\"3px solid navy\", margin:\"3px\"}} width=\"175px\" heigth=\"175px\" src={process.env.REACT_APP_FOR_PATH_FOR_PICS + \"/images/jonandhismomtalkabout.jpg\"} alt=\"Jon and his mom talk about - Amazon\"/>\r\n                                <br/>\r\n                                <img style = {{ height:\"50px\", width:\"50px\"}} src={process.env.REACT_APP_FOR_PATH_FOR_PICS + '/images/clickme.svg'}  alt=\"some activities require grown uptouch screen\"  />                                                              \r\n                            </a>\r\n                        </div>                                                                                        \r\n                    </div>\r\n\r\n                    <br/>\r\n\r\n                    <div style = {{position:\"absolute\", bottom:\"0%\"}} >\r\n                        <img style = {{ height:\"325px\", width:\"85vw\"}} src={process.env.REACT_APP_FOR_PATH_FOR_PICS + '/images/wewrote.svg'}  alt=\"what we wrote\"  />                                                              \r\n                    </div>\r\n                    <br/>\r\n                    \r\n                </div>\r\n        \r\n                <br/><br/><br/><br/><br/>\r\n                <div>\r\n                    <ReactLink to= {path + \"/MinorPrintables\"}>\r\n                        <img style = {{ height:\"250px\", width:\"85vw\"}} src={process.env.REACT_APP_FOR_PATH_FOR_PICS + '/images/getPDFs.svg'}  alt=\"PDFs to print\"  />                                                              \r\n                    </ReactLink>  \r\n                </div>\r\n\r\n                <div className=\"DescriptionSectionText\"> \r\n                <br/><br/>\r\n                Go to the top menu to see what you can learn and practice.\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n};\r\n        \r\n\r\nexport default DescriptionSections;","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction LandingPageCardComponent (props) {\r\n\r\n    const path = process.env.REACT_APP_FOR_PATH;   \r\n    const pathPic = process.env.REACT_APP_FOR_PATH_FOR_PICS;\r\n    const topic = props.topic\r\n    const imgSrc = props.imageSrc;\r\n    \r\n    var classN = \"\";//this used to be cardDiv but not used anymore, leave here in case I change it back\r\n    \r\n    if (props.borderColorClass !== undefined){\r\n        classN = classN + props.borderColorClass;\r\n    }\r\n    \r\n    //classN += \" forHoverEffect\"; do not use this effect anymore\r\n\r\n    var st =  {\r\n        display:\"flex\",\r\n        flexDirection: \"row\",           \r\n    }\r\n        \r\n    return(\r\n        <div className= {classN}  style={{margin:\"1vw\"}}>\r\n\r\n            <Link to= {path  + topic } style={{ textDecoration:\"none\"}}  >     \r\n                <div style={st}>\r\n                    <div className=\"cardDivNoHover\">                                                                   \r\n                            <img src= {pathPic + imgSrc} className=\"MainSectionItemImage\" alt={topic}></img>                                      \r\n                    </div >\r\n                    <div className=\"cardDiv2\" style={{display: \"flex\", justifyContent: \"center\", alignItems:\"center\", margin:\"2px\", fontSize:\"2.5vh\"}}>\r\n                        <div >\r\n                            {props.text}\r\n                        </div>\r\n                    </div>\r\n                </div>   \r\n            </Link>    \r\n            {/*}\r\n            <div style={st}>\r\n                <div className={classN}>\r\n                    <Link to= {path  + topic } className= \"CardTextLink\" >                                                    \r\n                        <img src= {pathPic + imgSrc} className=\"MainSectionItemImage\" alt={topic}></img>   \r\n                    </Link>                   \r\n                </div >\r\n                <div className=\"cardDiv2\" style={{display: \"flex\", justifyContent: \"center\", alignItems:\"center\", margin:\"2px\", fontSize:\"2.5vh\"}}>\r\n                    <div >\r\n                        {props.text}\r\n                    </div>\r\n                </div>\r\n            </div>       \r\n            {*/}\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n//TODO change this to reuse the code\r\nfunction LandingPageCardComponentForHref(props){\r\n    \r\n    const href = props.href\r\n    const fullPath = props.fullPath;\r\n    \r\n    var classN = \"\";//this used to be cardDiv but not used anymore, leave here in case I change it back\r\n    \r\n    if (props.borderColorClass !== undefined){\r\n        classN = classN + props.borderColorClass;\r\n    }\r\n    \r\n    //classN += \" forHoverEffect\";\r\n\r\n    var st =  {\r\n        display:\"flex\",\r\n        flexDirection: \"row\",           \r\n    }\r\n        \r\n    return(\r\n        <div className= {classN}  style={{margin:\"1vw\"}}>\r\n\r\n            <a href= {href } style={{ textDecoration:\"none\"}} target=\"_new\" >     \r\n                <div style={st}>\r\n                    <div className=\"cardDivNoHover\" >                                                                   \r\n                            <img src= {fullPath} className=\"MainSectionItemImage\" alt={href} ></img>                                      \r\n                    </div >\r\n                    <div className=\"cardDiv2\" style={{display: \"flex\", justifyContent: \"center\", alignItems:\"center\", margin:\"3px\", fontSize:\"2.5vh\"}}>\r\n                        <div >\r\n                            {props.text}\r\n                        </div>\r\n                    </div>\r\n                </div>   \r\n            </a>                \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {LandingPageCardComponentForHref};\r\nexport default LandingPageCardComponent;\r\n","import React from \"react\";\r\nimport LandingPageCardComponent from \"./LandingPageCardComponent\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col'\r\n\r\n\r\nfunction GamesAndPDFs () {\r\n               \r\n        window.scroll(0,0);\r\n        \r\n        return(\r\n    \r\n        <React.Fragment>            \r\n            \r\n            <Container fluid className=\"TopMarginToDealWithNavBarAll\" style={{background:\"radial-gradient(cyan, white)\" }}>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <LandingPageCardComponent topic = \"/SpinStarWarsCars\" imageSrc = \"/images/MainItemCardImages/SpinStarWarsCars.svg\" borderColorClass= \"cardDivAll\"\r\n                        text=\"Spin, wait, get a star wars car, be the first to find it.\"/>  \r\n                    </Col>\r\n                    <Col sm={6}>\r\n                        <LandingPageCardComponent topic = \"/SpinShapes\" imageSrc = \"/images/MainItemCardImages/shapes.svg\" borderColorClass= \"cardDivAll\"\r\n                        text=\"Spin, wait, get a shape to find, find it.\"/>  \r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <LandingPageCardComponent topic = \"/MemoryCards\" imageSrc = \"/images/MainItemCardImages/MemoryCards.svg\" borderColorClass= \"cardDivAll\"\r\n                        text=\"Can you remember where the cards are? 1 player or 2.\"/>  \r\n                    </Col>\r\n                    <Col sm={6}>\r\n                        <LandingPageCardComponent topic = \"/AdditionMaze\" imageSrc = \"/images/MainItemCardImages/AdditionMaze.svg\" borderColorClass= \"cardDivAll\"\r\n                        text=\"Solve the maze by chosing the right additions\"/>  \r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            {/*}<div className=\"container-fluid TopMarginToDealWithNavBarAll\">\r\n                <h1 className=\"sectionHeaderPink\" id=\"GamesAndPDFs\">Games!!!</h1><br/>\r\n                <div className=\"MainSectionContainerActivities\">                     \r\n\r\n                    <LandingPageCardComponent topic = \"/SpinStarWarsCars\" imageSrc = \"/images/MainItemCardImages/SpinStarWarsCars.svg\" borderColorClass= \"cardDivAll\"\r\n                    text=\"Spin, wait, get a star wars car, be the first to find it.\"/>    \r\n\r\n                     <LandingPageCardComponent topic = \"/SpinShapes\" imageSrc = \"/images/MainItemCardImages/shapes.svg\" borderColorClass= \"cardDivAll\"\r\n                    text=\"Spin, wait, get a shape to find, find it.\"/>  \r\n\r\n                    <LandingPageCardComponent topic = \"/MemoryCards\" imageSrc = \"/images/MainItemCardImages/MemoryCards.svg\" borderColorClass= \"cardDivAll\"\r\n                    text=\"Can you remember where the cards are? 1 player or 2.\"/>  \r\n\r\n                     <LandingPageCardComponent topic = \"/AdditionMaze\" imageSrc = \"/images/MainItemCardImages/AdditionMaze.svg\" borderColorClass= \"cardDivAll\"\r\n                    text=\"Solve the maze by chosing the right additions\"/>  \r\n\r\n                     <LandingPageCardComponent topic = \"/Freeze\" imageSrc = \"/images/MainItemCardImages/Freeze.svg\" borderColorClass= \"cardDivAll\"\r\n                    text=\"Listen and stop when the sound stops, Freeze!\"/>                                         \r\n                    \r\n                                                                                            \r\n                </div>\r\n                </div>               \r\n            <br/>\r\n        {*/}\r\n        </React.Fragment>\r\n        )\r\n};\r\n\r\n\r\nexport default GamesAndPDFs;","import React from 'react';\r\nimport {Link as ReactLink} from 'react-router-dom';\r\n\r\nfunction FoorterInfo(props) {\r\n\r\n    const pathPic = process.env.REACT_APP_FOR_PATH_FOR_PICS;\r\n    const path = process.env.REACT_APP_FOR_PATH ;\r\n\r\n    return (<div className=\"CenterMe\">\r\n\r\n            <div style={{width:\"100vw\", background:\"skyblue\", marginBottom:\"5vh\"}}>\r\n                {/*}\r\n                <a href=\"https://twitter.com/GMFuster\" target=\"_new\"><img alt=\"Twitter\"\r\n                                src= {pathPic + \"/images/Twitter_Logo_Blue.svg\"}\r\n                                width=\"60px\"\r\n                                height=\"60px\"\r\n                                margin=\"5px\"\r\n                                className=\"rounded-circle d-inline-block align-top\"\r\n                            /> \r\n                </a>\r\n\r\n                <a href=\"https://gmfuster.medium.com/\" target=\"_new\">\r\n                    <img alt=\"Medium\"\r\n                                src= {pathPic + \"/images/mediumLogo.png\"}\r\n                                width=\"60px\"\r\n                                height=\"60px\"\r\n                                margin=\"5px\"\r\n                                className=\"rounded-circle d-inline-block align-top\"\r\n                            /> \r\n                </a>\r\n       {*/}         \r\n\r\n                <a href=\"https://www.youtube.com/channel/UCRzxDsd0WvJza0BxaIRiQnA\" target=\"_new\">\r\n                            <img alt=\"YouTube\"\r\n                                src= {pathPic + \"/images/youtube_social_icon_red.png\"}\r\n                                width=\"60px\"\r\n                                height=\"60px\"\r\n                                margin=\"5px\"\r\n                                className=\"d-inline-block align-top\"\r\n                            /> \r\n                </a>\r\n                 &nbsp;\r\n                 {/*}\r\n                <ReactLink to= {path + \"/PersonalInterestsSection\"} >\r\n                    <img alt=\"About Me\"\r\n                                src= {pathPic + \"/images/AboutMe.svg\"}\r\n                                width=\"60px\"\r\n                                height=\"60px\"\r\n                                margin=\"5px\"\r\n                                className=\"d-inline-block align-top\"\r\n                            /> </ReactLink>     \r\n{*/}\r\n            </div>\r\n\r\n        </div>);\r\n }\r\n\r\n export default FoorterInfo;\r\n","import React, {Component} from \"react\";\r\nimport  MainImage from \"./Components/MainImage\";\r\nimport DescriptionSections from \"./Components/DescriptionSections\";\r\n\r\n//import KindergartenMath from \"./Components/KindergartenMath\";\r\n//import KindergartenLang from \"./Components/KindergartenLang\";\r\nimport GamesAndPDFs from \"./Components/GamesAndPDFs\";\r\n\r\nimport FooterInfo from './Components/Footer';\r\n\r\nclass LandingPage extends Component {\r\n  \r\n  render() {\r\n\r\n    return(\r\n\r\n    <React.Fragment>               \r\n\r\n        <MainImage/>      \r\n\r\n        <DescriptionSections/>           \r\n      \r\n        <FooterInfo/>       \r\n\r\n    </React.Fragment>)\r\n};\r\n}\r\n\r\nexport default LandingPage;\r\n","import React from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport {Link as ReactLink} from 'react-router-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction NavBar () {   \r\n\r\n    const path = process.env.REACT_APP_FOR_PATH ;\r\n    const pathPic = process.env.REACT_APP_FOR_PATH_FOR_PICS;\r\n\r\n    const reactLinkSt = {\r\n        color:\"white\",\r\n        paddingLeft:\"4px\",\r\n        paddingRight:\"4px\",\r\n        textDecoration: \"none\",\r\n                    \r\n        fontSize:\"3vh\" ,\r\n        margin:\"2px\" ,\r\n        display: \"flex\", \r\n        justifyContent: \"center\", \r\n        alignItems:\"center\",\r\n        color:\"deeppink\"\r\n    }\r\n    var reactLinkSt2 = Object.assign({}, reactLinkSt, {color:\"navy\"}); \r\n\r\n    const reactLinkStDDItem = {\r\n        color:\"navy\",\r\n        padding:\"px\",\r\n        textDecoration: \"none\",        \r\n        fontSize:\"2vh\"         \r\n    }\r\n    \r\n      return(\r\n          \r\n        <React.Fragment>       \r\n                \r\n            <Navbar  fixed=\"top\" expand=\"sm\" style={{background:\"skyblue\"}}>\r\n                {/*}\r\n                <Navbar.Brand>\r\n                    <img\r\n                        alt=\"Home\"\r\n                        src= {pathPic + \"/images/jandmlaughingblue.svg\"}\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        className=\"rounded-circle d-inline-block align-top\"\r\n                    />                 \r\n                </Navbar.Brand>   \r\n                {*/}\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">       \r\n\r\n                        \r\n                        <ReactLink style={reactLinkSt2} to= {path + \"/\"}>\r\n                            <img\r\n                            alt=\"Home\"\r\n                            src= {pathPic + \"/images/jandmlaughingblue.svg\"}\r\n                            width=\"50\"\r\n                            height=\"50\"\r\n                            className=\"rounded-circle d-inline-block align-top\"\r\n                            />    \r\n                        </ReactLink>\r\n                        <ReactLink style={reactLinkSt} to= {path + \"/GamesAndPDFs\"} >Games</ReactLink>    \r\n\r\n                        <ReactLink style={reactLinkSt2} to= {path + \"/kindergartenMath\"} >Math-K</ReactLink>     \r\n\r\n                         <ReactLink style={reactLinkSt} to= {path + \"/kindergartenLang\"} >Lang-K</ReactLink>                                                        \r\n                        {/*<NavDropdown title=\"Kindergarten\" id=\"basic-nav-dropdown\" style={reactLinkSt} active>   \r\n                        <NavDropdown title=\"Math\" id=\"basic-nav-dropdown\" style={reactLinkSt} active>                         \r\n                            {/*<NavDropdown.Item >*/}\r\n                                {/*<ReactLink style={reactLinkStDDItem} to= {path + \"/kindergartenMath\"} >Kindergarten</ReactLink>{*/}\r\n                            {/*</NavDropdown.Item>       \r\n                                          */}                            \r\n                    {/*}            <br/>\r\n                                                            \r\n                                        </NavDropdown> {*/}\r\n                    \r\n{/*}\r\n                        <NavDropdown title=\"Language\" id=\"basic-nav-dropdown\" style={reactLinkSt} active>                         \r\n                            <ReactLink style={reactLinkStDDItem} to= {path + \"/kindergartenLang\"} >Kindergarten</ReactLink>                         \r\n                        </NavDropdown>  \r\n                                    {*/}\r\n\r\n                       \r\n                                          \r\n                    </Nav>\r\n\r\n                            \r\n                            \r\n                    <Nav>  \r\n                        {/*}                     \r\n                        <Nav.Link href=\"https://twitter.com/GMFuster\" target=\"_new\">\r\n                            <img alt=\"Twitter\"\r\n                                src= {pathPic + \"/images/Twitter_Logo_Blue.svg\"}\r\n                                width=\"35px\"\r\n                                height=\"35px\"\r\n                                className=\" align-top\"\r\n                            /> \r\n                        </Nav.Link>\r\n                                       \r\n                        <Nav.Link href=\"https://gmfuster.medium.com/\" target=\"_new\">\r\n                        <img alt=\"Medium\"\r\n                                src= {pathPic + \"/images/mediumLogo.png\"}\r\n                                width=\"35px\"\r\n                                height=\"35px\"\r\n                                className=\"align-top\"\r\n                            /> \r\n                        </Nav.Link>  \r\n                         {*/}\r\n                        <Nav.Link href=\"https://www.youtube.com/channel/UCRzxDsd0WvJza0BxaIRiQnA\" target=\"_new\">\r\n                            <img alt=\"YouTube\"\r\n                                src= {pathPic + \"/images/youtube_social_icon_red.png\"}\r\n                                width=\"35px\"\r\n                                height=\"35px\"\r\n                                className=\"align-top\"\r\n                            /> \r\n                        </Nav.Link>     \r\n                        {/*}     \r\n                        <ReactLink style={reactLinkSt2} to= {path + \"/PersonalInterestsSection\"} >\r\n                        <img alt=\"Medium\"\r\n                                src= {pathPic + \"/images/AboutMe.svg\"}\r\n                                width=\"35px\"\r\n                                height=\"35px\"\r\n                                className=\"align-top\"\r\n                            /> </ReactLink>                   \r\n                             {*/}\r\n                    </Nav>\r\n                </Navbar.Collapse>                    \r\n\r\n            </Navbar>                                       \r\n            \r\n      </React.Fragment>);\r\n\r\n  }\r\n  \r\n  export default NavBar;","\r\nimport React, {Component} from \"react\";\r\n\r\nclass bdpq extends Component {\r\n    \r\n  constructor(){\r\n    super();    \r\n    this.state = { selectedWord:\"dog\", \r\n                    words : [\"dog\", \"pig\", \"pot\", \"dice\", \"dad\", \"dean\", \"done\", \"dare\", \"dunes\", \"pay\", \"put\", \"pie\", \"plant\", \"boy\", \"ball\", \"bed\", \"big\", \"queen\",\r\n                    \"quiet\", \"question\", \"double\", \"distance\", \"delay\", \"dinner\", \"doer\", \"digital\", \"demo\", \"diamond\", \"decide\", \"document\", \"desert\",\r\n                    \"put\", \"prison\", \"purse\", \"protest\", \"private\", \"puppy\", \"pondering\", \"peptide\", \"primal\", \"profession\", \"pirate\", \"post\", \"prototype\",\r\n                    \"bribe\", \"baby\", \"bottle\", \"battle\", \"binary\", \"best\", \"boost\", \"bilingual\", \"border\", \"quest\", \"quarantine\", \"quarter\"]};    \r\n    this.refToCorrectImage = React.createRef();   \r\n    this.refToIncorrectImage = React.createRef();       \r\n    }\r\n  \r\n    generateRandomNumber = () => {\r\n      return Math.floor(Math.random() * this.state.words.length);      \r\n    }\r\n    getAWordFromArray = () => {\r\n\r\n      this.refToCorrectImage.current.style.visibility=\"hidden\" \r\n      this.refToIncorrectImage.current.style.visibility=\"hidden\" \r\n        var index = this.generateRandomNumber();\r\n        var word = this.state.words[index];                \r\n        if (word === this.state.selectedWord)\r\n        {\r\n          word = (index < this.state.words.length - 1)? this.state.words[index+1] : this.state.words[0];          \r\n        }\r\n        this.setState({selectedWord:word});     \r\n        this.forceUpdate();                   \r\n    }\r\n\r\n    clickLetter = (l) => {\r\n      var correctLetter = this.state.selectedWord[0];\r\n      if (correctLetter === l){\r\n        this.refToCorrectImage.current.style.visibility=\"visible\"  \r\n        this.refToIncorrectImage.current.style.visibility=\"hidden\"  \r\n      }\r\n      else{\r\n        this.refToCorrectImage.current.style.visibility=\"hidden\"  \r\n        this.refToIncorrectImage.current.style.visibility=\"visible\"  \r\n      }\r\n    }\r\n\r\n    render() {\r\n      \r\n      const pathPic = process.env.REACT_APP_FOR_PATH_FOR_PICS;\r\n\r\n      return(\r\n  \r\n      <React.Fragment>\r\n         <div className=\"TopMarginToDealWithNavBarAll\">\r\n            <div className=\"CenterMe\">\r\n\r\n              <button title=\"Get Word\" onClick={this.getAWordFromArray} className=\"buttonGeneral\">Get Word</button><br/>\r\n              <br/>Choose the letter that matches the beginning of the word shown.<br/>\r\n              <img src= {pathPic + \"/images/Language/correct.svg\"} className=\"pbdqImages\" ref={this.refToCorrectImage} style={{visibility: 'hidden'}}  alt=\"\"/> \r\n              {/*<button className=\"pbdqButton\"><img src=\"../images/Language/P.svg\" onClick={() => this.clickLetter(\"p\")} className=\"pbdqImages\"></img></button>*/}\r\n              <button className=\"pbdqButton\" onClick={() => this.clickLetter(\"p\")} >p</button>\r\n              <button className=\"pbdqButton\" onClick={() => this.clickLetter(\"b\")} >b</button>\r\n              <button className=\"pbdqButton\" onClick={() => this.clickLetter(\"q\")} >q</button>\r\n              <button className=\"pbdqButton\" onClick={() => this.clickLetter(\"d\")} >d</button>\r\n              {/*}\r\n              <button className=\"pbdqButton\"><img src=\"../images/Language/b.svg\" onClick={() => this.clickLetter(\"b\")} className=\"pbdqImages\"></img></button>\r\n              <button className=\"pbdqButton\"><img src=\"../images/Language/q.svg\" onClick={() => this.clickLetter(\"q\")} className=\"pbdqImages\"></img></button>\r\n              <button className=\"pbdqButton\"><img src=\"../images/Language/d.svg\" onClick={() => this.clickLetter(\"d\")} className=\"pbdqImages\"></img></button>\r\n            */}\r\n              <img src= {pathPic + \"/images/Language/incorrect.svg\"} className=\"pbdqImages\" ref={this.refToIncorrectImage} style={{visibility:'hidden'}} alt=\"\"/> \r\n              <br/>               \r\n              <label className=\"correctLetterLabel\">{this.state.selectedWord[0]}</label>\r\n              <label className=\"LabelBDPQ\">{this.state.selectedWord.substr(1,this.state.selectedWord.length-1)}</label>              \r\n            </div>\r\n        \r\n        </div>\r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default bdpq;","import React, {Component} from \"react\";\r\n\r\nclass LetterCircle extends Component {     \r\n    \r\n    constructor(props){   \r\n        super(props);               \r\n        this.state = {backgroundColor:\"w\"};                \r\n    }\r\n    \r\n\r\n    setColor = () => {            \r\n        //(this.props.letter == this.props.targetLetter)? this.setState({backgroundColor:\"g\"}) : this.setState({backgroundColor:\"r\"}); \r\n        if (this.props.letter === this.props.targetLetter)\r\n        {\r\n            this.setState({backgroundColor:\"g\"})\r\n            this.props.functionToCallBack();\r\n        }\r\n        else{\r\n            this.setState({backgroundColor:\"r\"}); \r\n        }\r\n    }\r\n    \r\n    render() {\r\n        \r\n        let button = \"\";\r\n        switch (this.state.backgroundColor) {\r\n            case 'w':\r\n                button = <div className= \"circleWhite\" onClick={this.setColor}  >{this.props.letter}</div>;\r\n                break;\r\n            case 'g':\r\n                button = <div className= \"circleGreen\" onClick={this.setColor}  >{this.props.letter}</div>;\r\n                break;\r\n            case 'r':\r\n                button = <div className= \"circleRed\" onClick={this.setColor}  >{this.props.letter}</div>;\r\n                break;\r\n            default:\r\n                button = <div className= \"circleWhite\" onClick={this.setColor}  >{this.props.letter}</div>;\r\n        }\r\n    \r\n        return(\r\n        <React.Fragment>            \r\n            {button}            \r\n        </React.Fragment>\r\n        )\r\n    };\r\n}\r\n\r\nexport default LetterCircle;","import React from \"react\";\r\n\r\n\r\nfunction ModelWindowWithText (props) {\r\n    \r\n    let posTop = ( 100/2 - (30/2)); //leaving like this to show the thinking\r\n    let posLeft = ( 100/2 - (30/2)); //leaving like this to show the thinking\r\n    \r\n    let modalStyle = {\r\n        width:\"30vw\",\r\n        height:\"30vh\",\r\n        position:\"absolute\",\r\n        top:posTop+\"vh\",\r\n        left:posLeft+\"vw\",\r\n        background:\"lightblue\",\r\n        border:\"solid navy 5px\",\r\n        borderRadius:\"4%\" ,\r\n        display:\"flex\",\r\n        flexDirection:\"column\"        \r\n    }\r\n\r\n\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            <div style={modalStyle}>\r\n                <div style={{ position:\"absolute\", right:\"0px\"}}><button onClick={ () => { props.callbackFunction();} }>X</button></div>\r\n                <div style={{ margin:\"8%\"}}>{props.text}</div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ModelWindowWithText;\r\n\r\n","import React, {Component} from \"react\";\r\nimport LetterCircle from \"./LetterCircle.component\";\r\nimport ModelWindowWithText from \"./ModelWindowWithText\";\r\n\r\nclass LetterCircleList extends Component {     \r\n     /*TODO change so we can show message when they have all been found*/   \r\n    constructor(props){     \r\n        super(props);        \r\n        this.state = {theList:[], newList:[], numberPerLetter:5, containerForModal : null};\r\n        this.numberOfLettersFound = 0;\r\n                \r\n        if (this.props.targetLetter === \"undefined\" || this.props.targetLetter === null || this.props.targetLetter === \"\")\r\n            return;\r\n        //todo add check for letterGroup being undefined and set default for it        \r\n        if (this.props.letterGroup === \"bdpq\"){\r\n            for (var i=0; i<this.state.numberPerLetter; i++){\r\n                this.state.theList.push({id:i, value:\"b\"})\r\n            }\r\n            for (i=this.state.numberPerLetter; i< (this.state.numberPerLetter * 2); i++){\r\n                this.state.theList.push({id:i, value:\"d\"})\r\n            }\r\n            for (i=this.state.numberPerLetter * 2; i<this.state.numberPerLetter * 3; i++){\r\n                this.state.theList.push({id:i, value:\"q\"})\r\n            }\r\n            for (i=this.state.numberPerLetter * 3; i<this.state.numberPerLetter *4; i++){\r\n                this.state.theList.push({id:i, value:\"p\"})\r\n            }\r\n        }else if (this.props.letterGroup === \"mnw\"){\r\n            for (i=0; i<this.state.numberPerLetter; i++){\r\n                this.state.theList.push({id:i, value:\"M\"})\r\n            }\r\n            for (i=this.state.numberPerLetter; i<this.state.numberPerLetter * 2; i++){\r\n                this.state.theList.push({id:i, value:\"N\"})\r\n            }\r\n            for (i=this.state.numberPerLetter * 2; i<this.state.numberPerLetter * 3; i++){\r\n                this.state.theList.push({id:i, value:\"W\"})\r\n            }\r\n        }\r\n               \r\n        let allDone = false;\r\n        let theListCopy = [...this.state.theList];\r\n        while (!allDone && theListCopy.length > 0 ){\r\n            let index = this.generateRandomNumber(theListCopy.length);\r\n            let newItem = {...theListCopy[index]};           \r\n            if (!this.state.newList.find(it => it.id === newItem.id && it.value === newItem.value)){\r\n                this.state.newList.push(newItem);  \r\n                theListCopy.splice(index, 1)              ;\r\n            }\r\n            else{\r\n                if (this.state.theList.length === this.state.newList.length){\r\n                    allDone = true;\r\n                }\r\n            }\r\n        }               \r\n    }\r\n       \r\n    generateRandomNumber = (length) => {\r\n        return Math.floor(Math.random() * length);      \r\n    }\r\n    \r\n    removeModal = () => {\r\n        this.setState( {containerForModal :null});\r\n    }\r\n\r\n    checkIfAllHaveBeenFound = () => {\r\n\r\n        this.numberOfLettersFound++;\r\n      \r\n        if (this.numberOfLettersFound === this.state.numberPerLetter){\r\n            this.setState( {containerForModal : <ModelWindowWithText text=\"Awesome! Great Job!\" callbackFunction = {this.removeModal} /> }); \r\n        }\r\n    }\r\n    render() {        \r\n        return(            \r\n        <React.Fragment>         \r\n            Click on one of the letters and find the <strong style={ {color:\"deeppink\"}}>{this.state.numberPerLetter} </strong>letters that match the selected letter. <br/>\r\n            <div className=\"myContentsAreGrid1\">                \r\n                {this.state.newList.map( (circle, index) =>                  \r\n                        <LetterCircle key={circle.id} letter={circle.value} targetLetter={this.props.targetLetter} functionToCallBack = {this.checkIfAllHaveBeenFound}/>                   \r\n                )}    \r\n                {this.state.containerForModal}                                                            \r\n            </div>\r\n        </React.Fragment>\r\n        )\r\n    };\r\n}\r\n\r\nexport default LetterCircleList;","import React, {Component} from \"react\";\r\nimport LetterCircleList from \"../../Components/LetterCircleList.component\";\r\n\r\nclass bdpqCircles extends Component {\r\n    \r\n  constructor(){\r\n    super();     \r\n    this.state = {selectedLetter:\"\"}      ;\r\n    }\r\n  \r\n    generateRandomNumber = () => {\r\n      return Math.floor(Math.random() * this.state.words.length);      \r\n    }\r\n    \r\n    checkedLetter = (s) => {      \r\n      //this.setState({selectedLetter:s}, () => {this.forceUpdateNow()});           \r\n      this.setState({selectedLetter:s});           \r\n    }    \r\n\r\n\r\n    render() {\r\n      return(\r\n  \r\n      <React.Fragment>\r\n         <div className=\"TopMarginToDealWithNavBarAll\">\r\n            <div className=\"CenterMe\">\r\n\r\n            <div className=\"radio-toolbar\">          \r\n                    <input type=\"radio\" id=\"b\" name=\"letter\" value=\"b\" onChange = { () => this.checkedLetter(\"b\")}/>\r\n                    <label htmlFor=\"b\">b</label>\r\n\r\n                    <input type=\"radio\" id=\"p\" name=\"letter\" value=\"p\" onChange = { () => this.checkedLetter(\"p\")}/>\r\n                    <label htmlFor=\"p\">p</label>\r\n\r\n                    <input type=\"radio\" id=\"d\" name=\"letter\" value=\"d\" onChange = { () => this.checkedLetter(\"d\")}/>\r\n                    <label htmlFor=\"d\">d</label> \r\n\r\n                    <input type=\"radio\" id=\"q\" name=\"letter\" value=\"q\" onChange = { () => this.checkedLetter(\"q\")}/>\r\n                    <label htmlFor=\"q\">q</label> \r\n                </div>\r\n\r\n                <LetterCircleList targetLetter = {this.state.selectedLetter} key={this.state.selectedLetter} letterGroup=\"bdpq\"/> {/*give a key so it calls constructor also on rerendering*/}             \r\n            </div>\r\n        \r\n        </div>\r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default bdpqCircles;","import React, {Component} from \"react\";\r\nimport LetterCircleList from \"../../Components/LetterCircleList.component\";\r\n\r\nclass mnwCircles extends Component {\r\n    \r\n  constructor(){\r\n    super();     \r\n    this.state = {selectedLetter:\"\"}      ;\r\n    }\r\n  \r\n    generateRandomNumber = () => {\r\n      return Math.floor(Math.random() * this.state.words.length);      \r\n    }\r\n    \r\n    checkedLetter = (s) => {      \r\n      this.setState({selectedLetter:s}, this.forceUpdateNow);           \r\n    }\r\n\r\n    forceUpdateNow(){\r\n      this.forceUpdate();\r\n    }\r\n    \r\n\r\n    render() {\r\n      return(\r\n  \r\n      <React.Fragment>\r\n         <div className=\"TopMarginToDealWithNavBarAll\">\r\n            <div className=\"CenterMe\">\r\n\r\n            <div className=\"radio-toolbar\">          \r\n                    <input type=\"radio\" id=\"M\" name=\"letter\" value=\"M\" onChange = { () => this.checkedLetter(\"M\")}/>\r\n                    <label htmlFor=\"M\">M</label>\r\n\r\n                    <input type=\"radio\" id=\"N\" name=\"letter\" value=\"N\" onChange = { () => this.checkedLetter(\"N\")}/>\r\n                    <label htmlFor=\"N\">N</label>\r\n\r\n                    <input type=\"radio\" id=\"W\" name=\"letter\" value=\"W\" onChange = { () => this.checkedLetter(\"W\")}/>\r\n                    <label htmlFor=\"W\">W</label>                    \r\n                </div>\r\n\r\n                <LetterCircleList targetLetter = {this.state.selectedLetter} key={this.state.selectedLetter} letterGroup=\"mnw\"/>    {/*give a key so it calls constructor also on rerendering*/}             \r\n            </div>\r\n        \r\n        </div>\r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default mnwCircles;","import React,  {Component}  from 'react';\r\n\r\nclass TextFieldWithButton extends Component {        \r\n    constructor(props)\r\n    {\r\n        super(props);    \r\n        this.refToInput = React.createRef();    \r\n    }\r\n\r\n    sendTheText = () => {                \r\n        this.props.functionToCall(this.refToInput.current.value);\r\n    }\r\n    sendTheTextBlank = () => {    \r\n        this.refToInput.current.value = \"\";            \r\n        this.props.functionToCall(\"\");\r\n    }\r\n\r\n    render() {\r\n      return(\r\n  \r\n      <React.Fragment>      \r\n            <div style ={{ border:\"3px solid navy\", borderRadius:\"5px\", marginLeft:\"5%\", marginRight:\"5%\"}}>\r\n                <input type=\"search\" placeholder={this.props.textForInput} className=\"inputText\" ref={this.refToInput}/>                                    \r\n                <button onClick={this.sendTheText} className=\"buttonInputWithButtons\">{this.props.textForButton}</button>\r\n                <button onClick={this.sendTheTextBlank} className=\"buttonInputWithButtons\">Reset</button>                                        \r\n            </div>                          \r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default TextFieldWithButton;","import React, {Component} from \"react\";\r\nimport ModelWindowWithText from \"../../Components/ModelWindowWithText\";\r\nimport TextFieldWithButton from \"../../Components/TextFieldWithButton\";\r\n\r\nclass CanvasTrace extends Component {\r\n        \r\n    canvasX = 0;\r\n    canvasY = 0;\r\n    touchX=0;\r\n    touchY=0;\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {textForCanvas : \"\", containerForModal : null};\r\n        this.refToCanvas = React.createRef();                             \r\n        window.addEventListener('resize', this.handleResize);\r\n    }\r\n    componentDidMount(){\r\n        this.getCanvasPosition();\r\n        //need to reset this to get the accurate touch points\r\n        this.refToCanvas.current.width = this.refToCanvas.current.clientWidth;\r\n        this.refToCanvas.current.height = this.refToCanvas.current.clientHeight;    \r\n        this.refToCanvas.current.addEventListener('touchstart', this.canvasTouchStart, {passive:false})    ;\r\n        this.refToCanvas.current.addEventListener('touchmove', this.canvasTouchMove, {passive:false})    ;\r\n    }\r\n          \r\n    handleResize = () => {        \r\n        this.getCanvasPosition();\r\n        //need to reset this to get the accurate touch points\r\n        //changing the following resets the canvas contents\r\n        this.refToCanvas.current.width = this.refToCanvas.current.clientWidth;\r\n        this.refToCanvas.current.height = this.refToCanvas.current.clientHeight;        \r\n    }\r\n    //make sure there is no scrolling or can't use the canvas\r\n\r\n    /*POSITIONING START*/\r\n    GetOffset = (object, offset) => {\r\n        \r\n        if (!object)\r\n            return;\r\n        offset.x += object.offsetLeft;\r\n        offset.y += object.offsetTop;\r\n                \r\n        this.GetOffset(object.offsetParent, offset);\r\n    }\r\n    GetScrolled = (object, scrolled) => {\r\n        if (!object)\r\n            return;\r\n        scrolled.x += object.scrollLeft;\r\n        scrolled.y += object.scrollTop;\r\n        \r\n        if (object.tagName.toLowerCase() !== \"html\") {\r\n            this.GetScrolled(object.parentNode, scrolled);\r\n        }        \r\n    }\r\n    getCanvasPosition = () => {    \r\n        \r\n        if (this.refToCanvas != null && this.refToCanvas.current != null)    \r\n        {            \r\n            var offset = { x: 0, y: 0 };            \r\n            this.GetOffset(this.refToCanvas.current, offset);\r\n        \r\n            var scrolled = { x: 0, y: 0 };            \r\n            this.GetScrolled(this.refToCanvas.current.parentNode, scrolled);            \r\n        \r\n            this.canvasX = offset.x - scrolled.x ;                        \r\n            this.canvasY = offset.y - scrolled.y ;            \r\n        }\r\n    }\r\n    getTouchPosition = (e, canvas) => {\r\n        \r\n        if (!e)\r\n            return;\r\n    \r\n        if (e.touches) {    \r\n            if (e.touches.length === 1) {                        \r\n                var touch = e.touches[0];\r\n                this.touchX = touch.pageX - this.canvasX;\r\n                this.touchY = touch.pageY - this.canvasY;                  \r\n            }    \r\n        }\r\n    }\r\n    drawDot = (ctx) => {\r\n            \r\n        ctx.fillStyle = \"red\";\r\n        ctx.beginPath();            \r\n        ctx.fillRect(this.touchX,this.touchY, 10, 10);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    \r\n    } \r\n    /*POSITIONING END*/\r\n\r\n    /*UPDATE CANVAS START*/\r\n    updateCanvas = (txt) => {                   \r\n        this.setState( {textForCanvas: txt}, this.setCanvasText);  \r\n    }\r\n\r\n    setCanvasText = () => {        \r\n                \r\n        var ctx = this.refToCanvas.current.getContext(\"2d\");                 \r\n        ctx.clearRect(0, 0, this.refToCanvas.current.width, this.refToCanvas.current.height);                \r\n        //set size to biggest possible that will fit\r\n        //using ratio of 150c/110f=> c => 150/110 => 1.36 => 0.73 ==> just a bit smaller\r\n        var fonts = this.refToCanvas.current.height * 0.63;//default size\r\n        //var fonts = this.refToCanvas.current.width * 0.40;        \r\n        fonts = Math.round(fonts);        \r\n        ctx.font = `${fonts}px Arial`;         \r\n        // lower the font size until the text fits the canvas\r\n        while(ctx.measureText(this.state.textForCanvas).width>this.refToCanvas.current.width){\r\n            fonts--;\r\n            ctx.font=`${fonts}px Arial`; \r\n        }      \r\n        //once size is reduced to fit, make a bit smaller so it's not all the way to the edge\r\n        fonts = fonts -25;\r\n        ctx.font=`${fonts}px Arial`; \r\n        ctx.strokeText(this.state.textForCanvas, 50 , fonts); //50 so J and similar are not cut off.\r\n                \r\n    }\r\n    /*UPDATE CANVAS END*/\r\n\r\n    /*LISTENER EVENTS START*/\r\n    canvasTouchStart = (e) =>{            \r\n                \r\n        var ctx = this.refToCanvas.current.getContext(\"2d\");            \r\n        this.getTouchPosition(e, this.refToCanvas.current);               \r\n        this.drawDot(ctx);                \r\n        e.preventDefault();\r\n    }\r\n    canvasTouchMove = (e) => {\r\n        \r\n        var ctx = this.refToCanvas.current.getContext(\"2d\");            \r\n        //todo reorganize the code so I don't have to get the canvas and ctx each time\r\n        this.getTouchPosition(e, this.refToCanvas.current);      \r\n        this.drawDot(ctx, this.touchX, this.touchY, 12);        \r\n        e.preventDefault();         \r\n    }\r\n    /*LISTENER EVENTS END*/\r\n\r\n    removeModal = () => {\r\n        this.setState( {containerForModal :null});\r\n    }\r\n    printTheText=() =>{                          \r\n\r\n        if (this.state.textForCanvas.length === 0 ){\r\n            this.setState( {containerForModal : <ModelWindowWithText text=\"To print, enter something in the canvas.\" callbackFunction = {this.removeModal} /> });           \r\n            return;\r\n        }          \r\n        try {\r\n            //let doc = document.implementation.createHTMLDocument(\"New Document\");\r\n            \r\n            var newWindow = window.open();\r\n            \r\n            var linkF = newWindow.document.createElement(\"link\");\r\n            linkF.href = \"https://fonts.googleapis.com/css2?family=Raleway+Dots&display=swap\";\r\n            linkF.rel = \"stylesheet\";\r\n            newWindow.document.body.appendChild(linkF);\r\n\r\n            var sheet = newWindow.document.createElement(\"style\");\r\n            //sheet.innerHTML = \"p {color:lightblue; text-decoration: underline overline ; font-size: 45px; margin:15px; width:100vw}\";\r\n            sheet.innerHTML = \"p {color:gray;  font-size: 50px; margin:15px; width:100vw; border-top-style: solid; border-bottom-style:solid; color-adjust: exact; font-family: 'Raleway Dots'}\";\r\n            newWindow.document.body.appendChild(sheet);\r\n\r\n            var sheet2 = newWindow.document.createElement(\"style\");\r\n            //sheet.innerHTML = \"p {color:lightblue; text-decoration: underline overline ; font-size: 45px; margin:15px; width:100vw}\";\r\n            sheet2.innerHTML = \"span {color:deeppink;  font-size: 25px; margin:15px; width:100vw;  color-adjust: exact;}\";\r\n            newWindow.document.body.appendChild(sheet2);\r\n            \r\n            var desc = newWindow.document.createElement(\"span\");            \r\n            desc.innerHTML = \"Print this page from your browser.\";\r\n            newWindow.document.body.appendChild(desc);\r\n\r\n            var br = newWindow.document.createElement(\"br\");                        \r\n            newWindow.document.body.appendChild(br);            \r\n            \r\n            \r\n\r\n            var p, brp;\r\n            for (var i = 0; i<8; i++){\r\n                p = newWindow.document.createElement(\"p\"); \r\n                p.innerHTML = this.state.textForCanvas;\r\n                newWindow.document.body.appendChild(p);    \r\n                brp = newWindow.document.createElement(\"br\");                        \r\n                newWindow.document.body.appendChild(brp);\r\n            }\r\n            \r\n\r\n           // body.innerHTML = '<p style=\"color:lightblue,text-decoration: line-through underline overline;\">' + this.state.textForCanvas + \"</p>\";\r\n\r\n        } catch(e) {\r\n            console.log(e);\r\n        }        \r\n    \r\n    }\r\n\r\n    render() {\r\n      return(\r\n  \r\n        //todo printable with middle line too, TODO use canvas element instead of having canvas code here.\r\n      <React.Fragment>\r\n         \r\n         <div className=\"TopMarginToDealWithNavBarAll CenterMe\">            \r\n            Resizing will clear the contents. (Canvas has no scrolling).  Enter your text and click the button to put it on the canvas. <br/> \r\n            <img style = {{ height:\"15%\", width:\"15%\", position:\"absolute\", top:\"35%\", left:\"0px\"}} src={process.env.REACT_APP_FOR_PATH_FOR_PICS + '/images/requirestouch.svg'}  alt=\"cRequires touch screen\"  />             \r\n                        \r\n            <TextFieldWithButton   textForInput = \"Enter you text\" textForButton=\"To canvas!\" functionToCall= {this.updateCanvas}/>                                    \r\n            <br/>\r\n            <div style={{position:\"relative\"}}>\r\n                <canvas className =\"traceLetterCanvas\"  ref={this.refToCanvas} />                \r\n                <button style={{position:\"absolute\", right:\"10%\", top:\"0px\"}} onClick={this.printTheText} className=\"buttonGeneral\">Print</button>\r\n            </div>\r\n\r\n           {this.state.containerForModal}\r\n        </div>\r\n  \r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default CanvasTrace;\r\n","import React, {Component} from \"react\";\r\n\r\nclass ShuffleCardsAndShow extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);        \r\n        this.refToDiv = React.createRef();   \r\n        this.state = {value:\"?\"}        \r\n        this.numberSelected = null;        \r\n    } \r\n  \r\n    componentDidMount = () => {\r\n        this.refToDiv.current.addEventListener('animationend', this.animationEnded) ; \r\n    }\r\n    generateRandomNumber = (length) => {\r\n        return Math.floor(Math.random() * length);      \r\n    }\r\n\r\n   roll= () => {                                                                \r\n        var maxNumber = this.props.elementsForCard.length;\r\n        this.animationAndDisplay(maxNumber);        \r\n   }    \r\n\r\n   animationAndDisplay = (maxNumber) => {\r\n\r\n       this.numberSelected = this.generateRandomNumber(maxNumber);        \r\n       this.setState( {value:\"?\"});    \r\n       if (this.refToDiv.current !== undefined)   {\r\n        this.refToDiv.current.className = \"cardsAnimation\";              \r\n       }\r\n   }\r\n   animationEnded = () => {\r\n        this.setState( {value:this.props.elementsForCard[this.numberSelected]});\r\n        this.refToDiv.current.className = null;   \r\n        if (this.props.callbackFunction !== undefined) {\r\n            this.props.callbackFunction(this.props.elementsForCard[this.numberSelected]);        \r\n        }\r\n   }\r\n\r\n\r\n    render() {      \r\n          var cardStyle = {                          \r\n            background:this.props.myColor,\r\n            fontFamily:\"Times New Roman\",   \r\n            fontSize:this.props.myFont,\r\n            width: this.props.myWidth,            \r\n            height:this.props.myHeight ,\r\n            userSelect:\"none\"            \r\n          };\r\n      return(  \r\n            \r\n      <React.Fragment>                                                                      \r\n           <div style={cardStyle}>\r\n                <div ref={this.refToDiv}>{this.state.value}</div>\r\n            </div>        \r\n  \r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default ShuffleCardsAndShow;\r\n","import React, {Component} from \"react\";\r\nimport ShuffleCardsAndShow from \"../../Components/ShuffleCardsAndShow\";\r\n\r\nclass GreaterLessEqual extends Component {\r\n\r\n    constructor()\r\n    {\r\n        super();                \r\n        this.elementsForCard = [\"<\", \">\", \" = \"]  ;\r\n        this.elementsForCardNumbersPlayers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]  ;\r\n        this.childPlayer1Ref = React.createRef();    \r\n        this.childPlayer2Ref = React.createRef();    \r\n        this.childComparisonRef = React.createRef();    \r\n    }     \r\n\r\n    getNewResults = () => {        \r\n                \r\n        this.childPlayer1Ref.current.roll();\r\n        this.childPlayer2Ref.current.roll();\r\n        this.childComparisonRef.current.roll();\r\n                \r\n    }\r\n    /*UPDATE CANVAS END*/    \r\n\r\n\r\n    render() {\r\n        var cardStyles = {\r\n            width:\"100%\",            \r\n            textAlign: \"center\",\r\n            display:\"flex\",\r\n            flexDirection:\"row\",\r\n            justifyContent:\"center\",\r\n            fontSize:\"3vw\",            \r\n            alignItems:\"flex-start\"\r\n        }\r\n      return(\r\n  \r\n      \r\n      <React.Fragment>\r\n         \r\n         <div className=\"TopMarginToDealWithNavBarAll CenterMe\">                        \r\n            2 players: Player 1 and Player 2 get a number, whoever has the number that satisfies what the center card says wins.  <br/>\r\n            1 player: Play against the computer/tablet.  If what comes up is true, it wins, if not, you win.<br/>\r\n            <button className= \"buttonGeneral\" onClick={this.getNewResults}>Show Numbers</button>   <br/><br/>            \r\n            <div style={cardStyles}>                \r\n                <div style={{border:\"solid navy 2px\",  marginRight:20, marginTop:120}}>        \r\n                    PLAYER 1 <br/>\r\n                    <ShuffleCardsAndShow  ref={this.childPlayer1Ref}\r\n                        elementsForCard = {this.elementsForCardNumbersPlayers} myWidth=\"20vw\" myHeight = \"30vh\" myFont=\"10vw\" myColor=\"lightblue\"\r\n                    />  \r\n                </div>\r\n\r\n                <div>\r\n                    SATISFY THIS! <br/>\r\n                    <ShuffleCardsAndShow  ref={this.childComparisonRef}\r\n                    elementsForCard = {this.elementsForCard}     myWidth=\"20vw\" myHeight = \"25vh\" myFont=\"10vw\" myColor=\"lightpink\"\r\n                 />   \r\n                </div>                \r\n                <div style={{border:\"solid navy 2px\", marginLeft:20, marginTop:120} }>                \r\n                    PLAYER 2<br/>\r\n                    <ShuffleCardsAndShow  ref={this.childPlayer2Ref}\r\n                        elementsForCard = {this.elementsForCardNumbersPlayers}     myWidth=\"20vw\" myHeight = \"30vh\" myFont=\"10vw\" myColor=\"lightblue\"\r\n                    />  \r\n                </div>        \r\n            </div>       \r\n            \r\n            \r\n        </div>\r\n  \r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default GreaterLessEqual;\r\n","import React, {Component} from \"react\";\r\n\r\nclass NumberBonds extends Component {\r\n\r\n    constructor()\r\n    {\r\n        super();           \r\n        this.state = { total:\"?\", el1:\"?\", el2:\"?\", correction:\"☻\", signs:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"], dots:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"], items1:\"\", items2:\"\"}       \r\n                  \r\n        this.numbersToUse = [1,2,3,4,5,6,7,8,9];    \r\n        this.random1 = \"?\";\r\n        this.randomTotal =\"?\";\r\n        this.signs=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"];\r\n        this.dots=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"];\r\n    }         \r\n   \r\n    generateRandomNumber = (length) => {\r\n        return Math.floor(Math.random() * length);      \r\n    }\r\n    \r\n    goClick = () => {\r\n\r\n        this.random1 = this.generateRandomNumber(this.numbersToUse.length);\r\n        this.randomTotal = this.generateRandomNumber(this.numbersToUse.length);        \r\n\r\n        if (this.random1 > this.randomTotal){            \r\n            [this.random1, this.randomTotal] = [this.randomTotal, this.random1];\r\n        }               \r\n\r\n        this.signs=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]  ;\r\n        this.dots=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]  ;\r\n        this.signs[this.random1] = \">>>\";\r\n        this.signs[this.randomTotal] = \">>>\";        \r\n        this.dots[this.random1] = \"☻\";        \r\n\r\n        let items1 = \"\"; let items2=\"\";\r\n        for (let i = 1; i <= this.random1; i++)\r\n        {\r\n            items1 += \" o \";\r\n        }\r\n        for (let i = 1; i <= (this.randomTotal - this.random1); i++)\r\n        {\r\n            items2 += \" o \";\r\n        }\r\n\r\n        this.setState( { total: this.randomTotal, el1: this.random1, el2:\"?\", signs:this.signs, dots:this.dots, correction:\"☻\", items1:items1, items2:items2});                             \r\n        this.forceUpdate();\r\n    }\r\n    resetClick = () => {\r\n        this.setState( {el2:\"?\", correction:\"☻\"});\r\n        this.forceUpdate();\r\n    }\r\n\r\n    numberClick = (n) => {\r\n                \r\n        (this.random1 + n === this.randomTotal)? this.setState( { correction:\"👍\", el2: n}): this.setState( { correction: \"👎\", el2: n})\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        /*maybe move all styles to vars*/\r\n        var divHorContainer = {\r\n            display:\"flex\",\r\n            flexDirection:\"row\",\r\n            justifyContent:\"center\",\r\n            userSelect:\"none\",     \r\n            fontSize:\"2vw\"    ,           \r\n            marginLeft:\"10%\",\r\n            marginRight:\"10%\",\r\n        }\r\n\r\n        var divHorEq =  Object.assign({}, divHorContainer, {height:\"65vh\" });   \r\n\r\n        var divVertContainer = {\r\n            display:\"flex\",            \r\n            flexDirection:\"column\",            \r\n            userSelect:\"none\",                                    \r\n        }\r\n\r\n        var square =   Object.assign({}, divVertContainer, {width:\"25%\", height:\"95%\",border:\"salmon solid 5px\", fontSize:\"6vw\"});       \r\n\r\n      return(\r\n  \r\n      \r\n      <React.Fragment>\r\n         \r\n         <div className=\"TopMarginToDealWithNavBarAll CenterMe\">             \r\n            GO to start. Click on the number that completes the bond.  <br/> \r\n            \r\n            {/*buttons */}\r\n            <div style = {divHorContainer}>\r\n                <button style = {{color:\"white\", backgroundColor:\"deeppink\", width:\"8vw\" }} onClick={this.goClick}>GO!</button>\r\n                <button style = {{color:\"white\", backgroundColor:\"navy\", width:\"6vw\" }} onClick={() => this.numberClick(0)}>0</button>\r\n                <button style = {{color:\"white\", backgroundColor:\"navy\", width:\"6vw\" }} onClick={() => this.numberClick(1)}>1</button>\r\n                <button style = {{color:\"white\", backgroundColor:\"navy\", width:\"6vw\" }} onClick={() => this.numberClick(2)}>2</button>\r\n                <button style = {{color:\"white\", backgroundColor:\"navy\", width:\"6vw\" }} onClick={() => this.numberClick(3)}>3</button>\r\n                <button style = {{color:\"white\", backgroundColor:\"navy\", width:\"6vw\" }} onClick={() => this.numberClick(4)}>4</button>\r\n                <button style = {{color:\"white\", backgroundColor:\"navy\", width:\"6vw\" }} onClick={() => this.numberClick(5)}>5</button>\r\n                <button style = {{color:\"white\", backgroundColor:\"navy\", width:\"6vw\" }} onClick={() => this.numberClick(6)}>6</button>\r\n                <button style = {{color:\"white\", backgroundColor:\"navy\", width:\"6vw\" }} onClick={() => this.numberClick(7)}>7</button>\r\n                <button style = {{color:\"white\", backgroundColor:\"navy\", width:\"6vw\" }} onClick={() => this.numberClick(8)}>8</button>\r\n                <button style = {{color:\"white\", backgroundColor:\"navy\", width:\"6vw\"}} onClick={() => this.numberClick(9)}>9</button>\r\n                <button style = {{color:\"white\", backgroundColor:\"deeppink\", width:\"8vw\" }} onClick={this.resetClick}>Undo</button>\r\n            </div>   \r\n                                                    \r\n            \r\n            <br/>\r\n\r\n            {/*Equation*/}\r\n            <div >                             \r\n                <div style = {divHorEq}>\r\n\r\n                    <div style={square}>\r\n                        <label>{this.state.el1}</label>                        \r\n                        <span style = {{margin:\"5%\", fontSize:\"5vw\", color:\"darkblue\", borderTop:\"2px solid lightblue\"}}>{this.state.items1} </span>\r\n                    </div>                    \r\n                    \r\n                    <span style = {{fontSize:\"6vw\"}}>+</span>\r\n                    \r\n                    <div style={square}>\r\n                        <label >{this.state.el2}</label>                        \r\n                        <span style = {{margin:\"5%\", fontSize:\"5vw\", color:\"deeppink\", borderTop:\"2px solid lightblue\"}}>{this.state.items2} </span>\r\n                    </div>                    \r\n                        \r\n                    <label style = {{fontSize:\"6vw\"}}>=</label>\r\n                    \r\n                    <div style={square}>\r\n                        <label >{this.state.total}</label>\r\n                    </div>\r\n\r\n                    <label style = {{fontSize:\"10vw\", width:\"100px\",marginLeft:\"5px\", color:\"salmon\" }}>{this.state.correction}</label>\r\n                </div>                                                    \r\n            </div>                                 \r\n\r\n            \r\n                                            \r\n\r\n                \r\n            \r\n            \r\n            \r\n        </div>\r\n  \r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default NumberBonds;\r\n","import React, {Component} from \"react\";\r\n\r\nclass FillSquares extends Component {\r\n\r\n    constructor()\r\n    {\r\n        super();          \r\n        this.sliderMin = 0;\r\n        this.sliderMax =10;     \r\n        this.currentPink = 0;\r\n        this.currentBlue = 10;    \r\n        this.defaultClass = \"MathSquareBlue\";    \r\n        this.state = {number1P:this.currentPink, number2B:this.currentBlue, squareClasses: [this.defaultClass, this.defaultClass,this.defaultClass,this.defaultClass,\r\n            this.defaultClass,this.defaultClass,this.defaultClass,this.defaultClass,this.defaultClass,this.defaultClass]};\r\n    }      \r\n\r\n    getNextColorClass(colorClass){\r\n\r\n        switch(colorClass){\r\n            case \"MathSquarePink\":\r\n                return \"MathSquareBlue\";                \r\n            case \"MathSquareBlue\":\r\n                return \"MathSquarePink\";\r\n            case \"MathSquareBlank\": /*not used now*/\r\n                return \"MathSquarePink\";\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    squareClick = (sqr, index) => {        \r\n                \r\n        //sqr is the div\r\n        let newColorClass = this.getNextColorClass(sqr.className)       ;        \r\n        let currentClasses = this.state.squareClasses;\r\n        switch(newColorClass){\r\n            case \"MathSquarePink\":\r\n                this.currentPink++;\r\n                this.currentBlue--;\r\n                break;\r\n            case \"MathSquareBlue\":\r\n                this.currentPink--;\r\n                this.currentBlue++;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState ({number1P:this.currentPink});\r\n        this.setState ({number2B:this.currentBlue});\r\n        currentClasses[index-1] = newColorClass;\r\n        this.setState ({squareClasses: currentClasses});\r\n        \r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {                  \r\n        var containerStyle = {\r\n            display:\"flex\",\r\n            flexDirection: \"row\",\r\n            textAlign: \"center\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent:\"center\",\r\n            alignItems: \"center\"        \r\n        }\r\n        \r\n      return(  \r\n          \r\n     \r\n      <React.Fragment>\r\n         \r\n         <div className=\"TopMarginToDealWithNavBarAll CenterMe\">             \r\n           Click on each square to change its color and see how it affects the equation.\r\n           <div style={containerStyle}>\r\n               <span style={{fontSize:\"6vw\"}}> \r\n                    <span style={{color:\"deeppink\"}}>{this.state.number1P} </span>+ <span style={{color:\"skyblue\"}}>{this.state.number2B}</span> = 10 \r\n                </span>\r\n\r\n               \r\n           </div>\r\n           <div style={containerStyle}>\r\n                <div className={this.state.squareClasses[0]} onClick={ (e) => this.squareClick(e.currentTarget,1) }></div>\r\n                <div className={this.state.squareClasses[1]} onClick={ (e) => this.squareClick(e.currentTarget,2)}></div>\r\n                <div className={this.state.squareClasses[2]} onClick={ (e) => this.squareClick(e.currentTarget,3)}></div>\r\n                <div className={this.state.squareClasses[3]} onClick={ (e) => this.squareClick(e.currentTarget,4)}></div>\r\n                <div className={this.state.squareClasses[4]} onClick={ (e) => this.squareClick(e.currentTarget,5)}></div>\r\n                <div className={this.state.squareClasses[5]} onClick={ (e) => this.squareClick(e.currentTarget,6)}></div>\r\n                <div className={this.state.squareClasses[6]} onClick={ (e) => this.squareClick(e.currentTarget,7)}></div>\r\n                <div className={this.state.squareClasses[7]} onClick={ (e) => this.squareClick(e.currentTarget,8)}></div>\r\n                <div className={this.state.squareClasses[8]} onClick={ (e) => this.squareClick(e.currentTarget,9)}></div>\r\n                <div className={this.state.squareClasses[9]} onClick={ (e) => this.squareClick(e.currentTarget,10)}></div>\r\n           </div>\r\n        </div>\r\n  \r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default FillSquares;\r\n","import React, {Component} from \"react\";\r\n\r\nclass PLusOrMinus extends Component {\r\n\r\n    constructor()\r\n    {\r\n        super();          \r\n        this.arrayOfQuestionObjects = this.setUpArrayOfQuestions();\r\n        this.state = {text:\"You question will be here\", equation:\"Show equation\",\r\n                        drop1:\"?\", drop2:\"?\", dropSign:\"?\", dropSol:\"?\", message:\"You Got This!\"};\r\n        this.arrayInd = 0;\r\n        this.equation=\"Show equation\";//todo change this so if clicking when no question shows message.\r\n    }      \r\n\r\n    setUpArrayOfQuestions = () => {\r\n\r\n        let theArray = [];  \r\n\r\n       //questions so there is no need for duplicate numbers on the drag and drop section\r\n       let obj = {\r\n            text:\"Maria has 5 apples and eats 2. How many does she have left?\",\r\n            equation:\"5-2=3\"\r\n        };\r\n        theArray.push(obj);\r\n        obj = {\r\n            text:\"John has 5 cars and his friend gives him 1 for his birthday. How many does he have now in all?\",\r\n            equation:\"5+1=6\"\r\n        };\r\n        theArray.push(obj);\r\n        obj = {            \r\n            text:\"The horse ate 6 apples and later he ate 2 more apples. How many did he eat in all?\",\r\n            equation:\"6+2=8\"\r\n        };\r\n        theArray.push(obj);\r\n        obj = {            \r\n            text:\"Amy found 2 shells but she broke 1.  How many does she have now?\",\r\n            equation:\"2-1=1\"\r\n        };\r\n        obj = {           \r\n            text:\"The snowman had 2 branches as arms and all 2 fell off. How many does he have now?\",\r\n            equation:\"2-2=0\"\r\n        };\r\n        theArray.push(obj);\r\n        theArray.push(obj);\r\n        obj = {           \r\n            text:\"There were 7 students on the bus and 1 got out.  How many are still on the bus?\",\r\n            equation:\"7-1=6\"\r\n        };\r\n        theArray.push(obj);\r\n        obj = {\r\n            text:\"There were 3 birds on the nest and then 2 bird left the nest.  How many birds are still on the nest?\",\r\n            equation:\"3-2=1\"\r\n        };\r\n        theArray.push(obj);\r\n        obj = {\r\n            text:\"I had 3 soccer balls and then I got 1 more as a present.  How many do I have now?\",\r\n            equation:\"3+1=4\"\r\n        };\r\n        theArray.push(obj);\r\n        obj = {           \r\n            text:\"I had 9 crayons and I broke 1. How many do I have now?\",\r\n            equation:\"9-1=8\"\r\n        };\r\n        theArray.push(obj);\r\n        obj = {           \r\n            text:\"I had 4 cookies and I ate 4 cookies. How many do I have now?\",\r\n            equation:\"4-4=0\"\r\n        };\r\n        theArray.push(obj);\r\n        return theArray;\r\n    }\r\n\r\n    getNextQuestion = () => {\r\n\r\n        this.equation = this.arrayOfQuestionObjects[this.arrayInd].equation;\r\n        this.setState( {text:this.arrayOfQuestionObjects[this.arrayInd].text, equation:\"Show equation\", drop1:\"?\", drop2:\"?\",dropSign:\"?\", dropSol:\"?\", message:\"You Got This!\"} );        \r\n        //set the index for the next time    \r\n        (this.arrayInd === this.arrayOfQuestionObjects.length -1 ) ? this.arrayInd = 0 : this.arrayInd++;\r\n    }\r\n\r\n    clickEl(e, num){\r\n        if (num === \"+\" || num === \"-\"){\r\n            this.setState({dropSign: num});\r\n        }else{            \r\n            if (this.state.drop1 === \"?\"){\r\n                this.setState({drop1:num});\r\n            }else if (this.state.drop2 === \"?\"){\r\n                this.setState({drop2:num});\r\n            }else if (this.state.dropSol === \"?\"){\r\n                this.setState({dropSol:num});\r\n            }else{\r\n                this.setState({message:\"reset equation to try again\"});\r\n            }\r\n        }\r\n    }\r\n    resetEq = () => {\r\n        this.setState({drop1:\"?\", drop2:\"?\", dropSol:\"?\", dropSign:\"?\"})\r\n    }    \r\n\r\n    showEquation = () =>{\r\n        this.setState({equation:this.equation});\r\n    }\r\n    \r\n\r\n    render() {   \r\n\r\n        var containerStyle = {\r\n            display:\"flex\",\r\n            flexDirection: \"row\",\r\n            textAlign: \"center\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent:\"center\",\r\n            alignItems: \"center\"       ,\r\n            fontSize:\"5vh\" \r\n        }\r\n        \r\n\r\n      return(  \r\n          \r\n     \r\n      <React.Fragment>\r\n         \r\n         <div className=\"TopMarginToDealWithNavBarAll CenterMe\" style={{ position:\"relative\"}}>               \r\n            <img alt=\"Requires grownup\" style = {{ height:\"45%\", width:\"45%\", position:\"absolute\", top:\"2%\", left:\"2px\"}} src={process.env.REACT_APP_FOR_PATH_FOR_PICS + '/images/requiresgrownup.svg'}/>       \r\n           <button className=\"buttonGeneral\" onClick={this.getNextQuestion}>Get Question</button><br/>\r\n\r\n           <div style={{fontSize:\"3vw\", background:\"lightpink\", padding:\"5px\", border:\"2px solid navy\"}}>{this.state.text}</div><br/>\r\n\r\n           <div style={containerStyle}>               \r\n                <button className=\"buttonOptions\"  onClick={(e) => this.clickEl(e,0)}>0</button>\r\n                <button className=\"buttonOptions\"  onClick={(e) => this.clickEl(e,1)}>1</button>\r\n                <button className=\"buttonOptions\"  onClick={(e) => this.clickEl(e,2)}>2</button>\r\n                <button className=\"buttonOptions\" onClick={(e) => this.clickEl(e,3)}>3</button>\r\n                <button className=\"buttonOptions\"  onClick={(e) => this.clickEl(e,4)}>4</button>\r\n                <button className=\"buttonOptions\"  onClick={(e) => this.clickEl(e,5)}>5</button>\r\n                <button className=\"buttonOptions\"  onClick={(e) => this.clickEl(e,6)}>6</button>\r\n                <button className=\"buttonOptions\"  onClick={(e) => this.clickEl(e,7)}>7</button>\r\n                <button className=\"buttonOptions\"  onClick={(e) => this.clickEl(e,8)}>8</button>\r\n                <button className=\"buttonOptions\"  onClick={(e) => this.clickEl(e,9)}>9</button>\r\n                <button className=\"buttonOptions\"  onClick={(e) => this.clickEl(e,\"+\")}>+</button>\r\n                <button className=\"buttonOptions\"  onClick={(e) => this.clickEl(e,\"-\")}>-</button> \r\n                <button onClick={this.resetEq}>Reset</button> \r\n            </div>\r\n            <br/>\r\n            <div style={{background:\"lightblue\"}}>\r\n                <div style={containerStyle}>\r\n                    {/*}\r\n                    <div style={optionsSt} onDragOver={(e) => e.preventDefault()} onDrop={(e) => this.handleDrop(e, \"1\")}>{this.state.drop1}</div>\r\n                    <div style={optionsSt} onDragOver={(e) => e.preventDefault()} onDrop={(e) => this.handleDrop(e, \"sign\")}>{this.state.dropSign}</div>\r\n                    <div style={optionsSt} onDragOver={(e) => e.preventDefault()} onDrop={(e) => this.handleDrop(e, \"2\")}>{this.state.drop2}</div>\r\n                    <div style={optionsSt}>=</div>\r\n                    <div style={optionsSt} onDragOver={(e) => e.preventDefault()} onDrop={(e) => this.handleDrop(e,\"sol\" )}>{this.state.dropSol}</div>\r\n        */}\r\n                    <div >{this.state.drop1}</div>&nbsp;&nbsp;\r\n                    <div >{this.state.dropSign}</div>&nbsp;&nbsp;\r\n                    <div >{this.state.drop2}</div>&nbsp;&nbsp;\r\n                    <div >=</div>&nbsp;&nbsp;\r\n                    <div >{this.state.dropSol}</div>&nbsp;&nbsp;\r\n                    &nbsp; &nbsp;<div >{this.state.message}</div>\r\n                </div>\r\n            </div>\r\n            <div style={containerStyle}>\r\n                <span style={{fontSize:\"2vw\", border:\"2px solid navy\",width:\"40vw\", height:\"4vw\", cursor:\"pointer\", background:\"lightblue\", margin:\"5px\"}}  \r\n                onClick={this.showEquation}>{this.state.equation}</span>\r\n            </div>\r\n        </div>\r\n  \r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default PLusOrMinus;\r\n","\r\n//TODO change the other pages to use this function instead of their own\r\n//\r\nfunction generateRandomNumber (length) {\r\n    if (length === 0){\r\n        return -1;\r\n    }\r\n    else{\r\n        return Math.floor(Math.random() * length);      \r\n    }\r\n}\r\n\r\nfunction generateRandomNumberForXNumberOfValues(length) {\r\n    if (length === 0){\r\n        return -1;\r\n    }\r\n    else{\r\n        return Math.floor(Math.random() * length) + 1;      \r\n    }\r\n}\r\n\r\n//take as argument as base 1,\r\n//take the max for the square matrix and return an array with the coordenates of the cells for the path\r\n//ex\r\n//c c c\r\n//c c c\r\n//c c c\r\n//start will be on the top left and end on the bottom right\r\n//the path will aways go right or down so no need to check other directions\r\nfunction generatePathForMatrixFromStartToEnd (whatByWhat) {\r\n    let path = [];\r\n    let obj = null;\r\n\r\n    if (whatByWhat < 3)\r\n        return null;\r\n\r\n    //do first cell\r\n    path.push({i:0, j:0});\r\n\r\n    //get whether we start on column or row\r\n    let number = generateRandomNumberForXNumberOfValues(2);  \r\n\r\n    if (number === 1){\r\n        obj ={i:0, j:1};\r\n    } else{\r\n        obj ={i:1, j:0};\r\n    }       \r\n     \r\n    path.push(obj);\r\n\r\n    let loops = 0;\r\n    while (obj.i !== (whatByWhat-1) || obj.j !== (whatByWhat-1)){\r\n\r\n        loops ++;\r\n        if (loops === 100){\r\n            return [];\r\n        }\r\n        number = generateRandomNumberForXNumberOfValues(2);\r\n        if (number === 1 && obj.j !== (whatByWhat-1)){\r\n            obj = {i:obj.i, j: (obj.j + 1)}\r\n        }else{            \r\n            if (obj.i !== (whatByWhat-1)){ //if got random 2 or cannot go to the right, come down if possible                \r\n                obj = {i:(obj.i + 1), j:obj.j}\r\n            }else{ //before trying again if we got here with the random number and can't keep going, try moving to the right instead\r\n                if (obj.j !== (whatByWhat-1)){ //if got random 2 or cannot go to the right, come down if possible                \r\n                    obj = {i:obj.i, j: (obj.j + 1)}\r\n                }\r\n            }\r\n        }       \r\n        path.push(obj);      \r\n    }\r\n    //add the last one\r\n    path.push({i:whatByWhat-1, j:whatByWhat-1});    \r\n    return path;\r\n}\r\nexport {generateRandomNumber, generatePathForMatrixFromStartToEnd};","import React, {Component} from \"react\";\r\nimport { generateRandomNumber } from \"../../commonJS\";\r\n\r\nclass SortingNoDnD extends Component {\r\n\r\n    constructor()\r\n    {\r\n        super();          \r\n        this.options= {\r\n            items: 'item',\r\n            numbers: 'number'\r\n        }\r\n        this.sortingBy= {\r\n            greatestToLeast: 'Greatest To Least ↘ ',\r\n            leastToGreatest: 'Least To Greatest ↗ '\r\n        }\r\n        this.totalNumberToSort = 4; //if more, add more divs and els to state array\r\n        this.optionChosen = this.options.numbers;  \r\n        this.sortingBychosen = this.sortingBy.leastToGreatest;\r\n        this.sourceElements = [];\r\n        this.state = {sortBy:this.sortingBychosen, textToDisplay:[], textSortedByComputer:[\"\",\"\",\"\",\"\"]};\r\n        \r\n    }      \r\n\r\n    switchSortBy = () => {\r\n        (this.sortingBychosen === this.sortingBy.greatestToLeast)? \r\n        this.sortingBychosen = this.sortingBy.leastToGreatest: this.sortingBychosen = this.sortingBy.greatestToLeast;\r\n        //set variable and then set state to make setStates easier to read.\r\n        this.setState({sortBy:this.sortingBychosen, textToDisplay:[],  textSortedByComputer:[]});\r\n    }\r\n    \r\n\r\n    //OK to get double numbers\r\n    getThingsToSort = (option) => {\r\n        //TODO to clean up and rename\r\n        this.optionChosen = option;\r\n        let randomNum = 0;\r\n        let textArray = [];\r\n        let stringToSet = \"\";\r\n        if (this.optionChosen === this.options.items){\r\n            for (let i = 1; i< this.totalNumberToSort+1; i++){\r\n                randomNum = generateRandomNumber(10);                    \r\n                if (randomNum === 0 ){ randomNum = 1};\r\n                stringToSet = \"\";                                \r\n                for (let j = 1; j < randomNum+1; j++){\r\n                    stringToSet += \" * \";\r\n                }\r\n                \r\n                textArray.push(stringToSet);\r\n            }\r\n        }else{\r\n            for (let i = 1; i< this.totalNumberToSort+1; i++){\r\n                randomNum = generateRandomNumber(75);    //OK to use zero on this one            \r\n                textArray.push(randomNum);\r\n            }\r\n        }\r\n        this.sourceElements = textArray;\r\n        this.setState({textToDisplay:textArray, textSortedByComputer:[], textSortedByKid:[]});   \r\n\r\n    }\r\n    showSolution = () => {\r\n\r\n        let sortedArray =this.sourceElements.slice();         \r\n\r\n        if (this.optionChosen === this.options.items){            \r\n            if (this.sortingBychosen === this.sortingBy.leastToGreatest){\r\n                sortedArray.sort((a,b) => a.length - b.length);\r\n            }\r\n            else{\r\n                sortedArray.sort((a,b) => b.length - a.length);\r\n            }\r\n        }\r\n        else{            \r\n            if (this.sortingBychosen === this.sortingBy.leastToGreatest){\r\n                sortedArray.sort( (a,b) => parseInt(a)  - parseInt(b));\r\n            }\r\n            else{\r\n                sortedArray.sort((a,b) => parseInt(b) - parseInt(a));\r\n            }\r\n        }\r\n        this.setState({textSortedByComputer: sortedArray});              \r\n\r\n    }    \r\n\r\n    goDown = (n) =>{\r\n\r\n        let arrAux = this.state.textToDisplay.slice();\r\n\r\n        if (n < (this.state.textToDisplay.length -1 )){\r\n            let aux = this.state.textToDisplay[n+1];\r\n            arrAux[n+1]  = this.state.textToDisplay[n];\r\n            arrAux[n]= aux;\r\n\r\n            this.setState({textToDisplay:arrAux});\r\n            this.forceUpdate();\r\n        }        \r\n    }\r\n    goUp = (n) =>{\r\n        let arrAux = this.state.textToDisplay.slice();\r\n\r\n        if (n > 0){\r\n            let aux = this.state.textToDisplay[n-1];\r\n            arrAux[n-1]  = this.state.textToDisplay[n];\r\n            arrAux[n]= aux;\r\n\r\n            this.setState({textToDisplay:arrAux});\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    render() {           \r\n\r\n        var divHorContainer = {\r\n            display:\"flex\",\r\n            flexDirection:\"row\",\r\n            justifyContent:\"center\",\r\n            userSelect:\"none\"\r\n        }\r\n        var divVertContainer = {\r\n            display:\"flex\",\r\n            flexDirection:\"Column\",\r\n            justifyContent:\"center\",            \r\n            userSelect:\"none\",\r\n            width:\"30vw\",\r\n            height:\"60vh\",\r\n            alignItems:\"center\",\r\n            padding:\"2vh\"\r\n        }\r\n      return(  \r\n               \r\n      <React.Fragment>\r\n         \r\n        <div className=\"TopMarginToDealWithNavBarAll CenterMe\">  \r\n            Choose an options to sort by number of elements or by numbers.  Click the button to get things to sort and how.<br/>  \r\n            <button className=\"buttonGeneral\" onClick={ () => this.getThingsToSort(this.options.numbers)}>Get Numbers to sort!</button> \r\n            <button className=\"buttonGeneral\" onClick={ () => this.getThingsToSort(this.options.items)}>Get *s to sort!</button>  \r\n            &nbsp; &nbsp;  <button className=\"buttonGeneral\" onClick={ this.switchSortBy}>Switch Sort By</button>   \r\n            <br/>                        \r\n           \r\n            <span style={{ fontSize:\"2vw\"}}> Sort by <strong>{this.state.sortBy}</strong></span>  \r\n            <button onClick={this.showSolution} style={{margin:\"5px\"}}>Show Answer!</button>                                   \r\n            <br/>\r\n\r\n            {/*TODO if going to use something similar again, do a component instead*/}\r\n            <div style={divHorContainer}>\r\n                <div style={{border:\"2px solid deeppink\", fontSize:\"2vw\", color:\"navy\"}}>\r\n\r\n                    <div style={divVertContainer}>  \r\n                        <div style={{width:\"80%\", height:\"15%\", textAlign:\"center\", display:\"flex\", flexDirection:\"row\", justifyContent:\"center\" }}>\r\n                            <button disabled ={true} >+</button>\r\n                            <div style={{width:\"80%\", height:\"100%\", textAlign:\"center\",border:\"2px darkblue solid\"}}>                                \r\n                                {this.state.textToDisplay[0]}\r\n                            </div>\r\n                            <button onClick={ () => this.goDown(0)}>-</button>\r\n                        </div>\r\n                        <br/>\r\n                        <div style={{width:\"80%\", height:\"15%\", textAlign:\"center\", display:\"flex\", flexDirection:\"row\",justifyContent:\"center\" }}>\r\n                            <button onClick={ () => this.goUp(1)}>+</button>\r\n                            <div style={{width:\"80%\", height:\"100%\", textAlign:\"center\",border:\"2px darkblue solid\"}}>\r\n                                {this.state.textToDisplay[1]}\r\n                            </div>\r\n                            <button onClick={ () => this.goDown(1)}>-</button>\r\n                        </div>\r\n                        <br/>\r\n                        <div style={{width:\"80%\", height:\"15%\", textAlign:\"center\", display:\"flex\", flexDirection:\"row\",justifyContent:\"center\" }}>\r\n                            <button onClick={ () => this.goUp(2)}>+</button>\r\n                            <div style={{width:\"80%\", height:\"100%\", textAlign:\"center\",border:\"2px darkblue solid\"}}>\r\n                                {this.state.textToDisplay[2]}\r\n                            </div>\r\n                            <button onClick={ () => this.goDown(2)}>-</button>\r\n                        </div>\r\n                        <br/>\r\n                        <div style={{width:\"80%\", height:\"15%\", textAlign:\"center\",display:\"flex\", flexDirection:\"row\", justifyContent:\"center\" }}>                            \r\n                            <button onClick={ () => this.goUp(3)}>+</button>\r\n                            <div style={{width:\"80%\", height:\"100%\", textAlign:\"center\",border:\"2px darkblue solid\"}}>\r\n                                {this.state.textToDisplay[3]}\r\n                            </div>  \r\n                            <button disabled ={true}>-</button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n\r\n                <div style={{border:\"2px solid deeppink\", fontSize:\"2vw\", color:\"teal\"}}>\r\n                    <div style={divVertContainer}>                        \r\n                        <div style={{border:\"2px teal solid\", width:\"80%\", height:\"15%\",textAlign:\"center\"}}>\r\n                            {this.state.textSortedByComputer[0]}\r\n                        </div>\r\n                        <br/>\r\n                        <div style={{border:\"2px teal solid\", width:\"80%\", height:\"15%\",textAlign:\"center\"}}>\r\n                            {this.state.textSortedByComputer[1]}\r\n                        </div>\r\n                        <br/>\r\n                        <div style={{border:\"2px teal solid\", width:\"80%\", height:\"15%\",textAlign:\"center\"}}>\r\n                            {this.state.textSortedByComputer[2]}\r\n                        </div>\r\n                        <br/>\r\n                        <div style={{border:\"2px teal solid\", width:\"80%\", height:\"15%\",textAlign:\"center\"}}>\r\n                            {this.state.textSortedByComputer[3]}\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>        \r\n  \r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default SortingNoDnD;\r\n","import React, {Component} from \"react\";\r\n\r\nclass Prefixsuffix extends Component {\r\n    \r\n    constructor(){\r\n        super();            \r\n        //should be hardcoded with all lowercase but code is checking anwaway\r\n        this.rootWords = [\"build\", \"view\",\"friendly\", \"fear\", \"color\", \"welcome\", \"try\", \"like\", \"paint\",\"school\", \"do\", \"buy\", \"order\", \"odor\", \"play\", \"walk\"];\r\n        this.state = {currentWord:this.rootWords[0].toUpperCase(), prefix:\"\", suffix:\"\"};                \r\n    }        \r\n\r\n    componentDidMount () {\r\n        window.scrollTo(0, 0)\r\n    }\r\n    next = () => {\r\n        \r\n        let word = this.state.currentWord.toLowerCase();\r\n        let i = this.rootWords.findIndex( item => item.toLowerCase() === word.toLowerCase());        \r\n\r\n        \r\n        this.setState({currentWord:this.rootWords[i+1].toUpperCase(), prefix:\"\", suffix:\"\"})\r\n        \r\n    }        \r\n\r\n    prefixsuffix = (text, ps) => {\r\n        let prefix = \"\";\r\n        let suffix = \"\";\r\n        (ps.toUpperCase() === \"P\")? prefix = text : suffix=text;            \r\n        this.setState({suffix:suffix, prefix:prefix});        \r\n    }\r\n    render() {\r\n                                         \r\n        var buttonStylesPre = {\r\n            width:\"8vw\",\r\n            heigth:\"8vh\",\r\n            fontSize:\"3vw\" ,\r\n            background:\"lightgreen\"           \r\n        }\r\n        var buttonStylesSuf = Object.assign({}, buttonStylesPre, {background:\"yellow\"});          \r\n\r\n        var wordStylesPre = {                       \r\n            fontSize:\"12vh\",                                             \r\n            borderTop:\"5px solid navy\",\r\n            borderBottom:\"5px solid navy\",\r\n            background:\"lightgreen\"\r\n        }\r\n        var wordStylesClick = Object.assign({}, wordStylesPre, {cursor:\"pointer\", background:\"lightblue\"});    \r\n        var wordStylesSuf = Object.assign({}, wordStylesPre, {background:\"yellow\"});    \r\n\r\n      return(          \r\n        \r\n      <React.Fragment>\r\n         <div className=\"TopMarginToDealWithNavBarAll\">\r\n            <div className=\"CenterMe\">\r\n                Click on each prefix or sufix to see how they change the root word.  Click on the root to get a new word.              \r\n                <div className=\"myContentsAreFlex\">\r\n                    <button className=\"buttonOptions\" style={buttonStylesPre} onClick= { () => this.prefixsuffix(\"RE\", \"P\")}>RE</button>\r\n                    <button className=\"buttonOptions\" style={buttonStylesPre} onClick= { () => this.prefixsuffix(\"PRE\", \"P\")}>PRE</button>\r\n                    <button className=\"buttonOptions\" style={buttonStylesPre} onClick= {() => this.prefixsuffix(\"DIS\", \"P\")}>DIS</button>\r\n                    <button className=\"buttonOptions\" style={buttonStylesPre} onClick= {() => this.prefixsuffix(\"UN\", \"P\")}>UN</button>\r\n\r\n                    <button className=\"buttonOptions\" style={buttonStylesSuf} onClick= {() => this.prefixsuffix(\"FUL\", \"S\")}>FUL</button>\r\n                    <button className=\"buttonOptions\" style={buttonStylesSuf} onClick= {() => this.prefixsuffix(\"LESS\", \"S\")}>LESS</button>\r\n                    <button className=\"buttonOptions\" style={buttonStylesSuf} onClick= {() => this.prefixsuffix(\"ED\", \"S\")}>ED</button>\r\n                </div>\r\n                \r\n            <div className=\"CenterMe\">\r\n                <span style={wordStylesPre}>{this.state.prefix}</span>\r\n                <span style={wordStylesClick} onClick={this.next}>{this.state.currentWord}</span>\r\n                <span style={wordStylesSuf}>{this.state.suffix}</span>\r\n                    \r\n            </div>   \r\n               \r\n                \r\n\r\n                \r\n            </div>        \r\n        </div>\r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default Prefixsuffix;","import React, {Component} from \"react\";\r\n\r\nclass ThreeLetterWordSounds extends Component {\r\n    \r\n    constructor(){\r\n        super();            \r\n        this.state = { letter0:\"\", letter1:\"\", letter2:\"\"}  ;\r\n        this.letter0Index=0;  \r\n        this.letter1Index=0;  \r\n        this.letter2Index=0;        \r\n\r\n        this.arrayOfWordsAsLettersInterChange =  [ [\"B\",\"E\",\"D\"], [\"B\", \"A\", \"N\"] , [\"B\",\"E\",\"G\"], [\"B\",\"E\",\"T\"], [\"B\",\"O\",\"X\"], [\"C\",\"A\",\"P\"], [\"D\",\"I\",\"D\"],  \r\n        [\"F\",\"A\",\"N\"], [\"F\",\"O\",\"R\"], [\"F\",\"U\",\"N\"], [\"G\",\"U\",\"M\"], [\"H\",\"A\",\"M\"], [\"H\",\"I\",\"M\"], [\"H\",\"O\",\"P\"], [\"J\",\"O\",\"G\"], [\"L\",\"E\",\"T\"], [\"L\",\"O\",\"G\"], \r\n        [\"M\",\"A\",\"C\"], [\"M\",\"A\",\"N\"], [\"M\",\"E\",\"N\"], [\"N\",\"A\",\"P\"], [\"P\",\"A\",\"D\"], [\"P\",\"A\",\"N\"], [\"P\",\"E\",\"N\"], [\"P\",\"E\",\"T\"], [\"P\",\"I\",\"C\"], [\"P\",\"I\",\"N\"], \r\n        [\"P\",\"O\",\"P\"], [\"R\",\"O\",\"T\"], [\"R\",\"U\",\"N\"], [\"S\",\"A\",\"G\"], [\"S\",\"A\",\"T\"], [\"S\",\"I\",\"P\"], [\"S\",\"I\",\"T\"], [\"S\",\"U\",\"N\"], [\"T\",\"A\",\"N\"], [\"Y\",\"E\",\"S\"] , \r\n        [\"Y\",\"E\",\"T\"], [\"W\",\"I\",\"G\"], [\"W\",\"E\",\"T\"], [\"W\",\"E\",\"B\"], [\"W\",\"A\",\"S\"], [\"V\",\"E\",\"T\"], [\"T\",\"U\",\"B\"], [\"T\",\"O\",\"P\"], [\"T\",\"A\",\"X\"], [\"T\",\"A\",\"P\"], \r\n        [\"T\",\"A\",\"G\"], [\"S\",\"O\",\"N\"], [\"S\",\"I\",\"X\"], [\"S\",\"E\",\"T\"], [\"S\",\"E\",\"C\"], [\"S\",\"A\",\"D\"], [\"R\",\"E\",\"D\"], [\"R\",\"A\",\"T\"], [\"R\",\"A\",\"M\"], \r\n        [\"P\",\"O\",\"T\"], [\"P\",\"O\",\"D\"], [\"P\",\"A\",\"T\"], [\"P\",\"A\",\"L\"], [\"N\",\"E\",\"T\"], [\"M\",\"I\",\"X\"], [\"M\",\"E\",\"T\"], [\"M\",\"E\",\"D\"], [\"M\",\"A\",\"T\"], \r\n        [\"M\",\"A\",\"P\"], [\"M\",\"A\",\"D\"], [\"L\",\"O\",\"T\"], [\"L\",\"I\",\"P\"], [\"K\",\"I\",\"D\"], [\"J\",\"O\",\"B\"], [\"H\",\"O\",\"T\"], [\"H\",\"I\",\"P\"], [\"H\",\"A\",\"S\"], [\"G\",\"O\",\"D\"], \r\n        [\"F\",\"O\",\"X\"], [\"F\",\"I\",\"X\"], [\"F\",\"A\",\"R\"], [\"D\",\"O\",\"C\"], [\"C\",\"A\",\"R\"],  [\"B\",\"A\",\"D\"],  \r\n        [\"B\",\"A\",\"G\"], [\"B\",\"A\",\"T\"], [\"B\",\"I\",\"G\"], [\"B\",\"O\",\"B\"], [\"B\",\"U\",\"T\"], [\"C\",\"A\",\"B\"], [\"B\",\"I\",\"T\"], \r\n        [\"C\",\"A\",\"N\"], [\"C\",\"A\",\"T\"], [\"C\",\"O\",\"D\"], [\"C\",\"U\",\"B\"], [\"C\",\"U\",\"P\"], [\"D\",\"A\",\"D\"], [\"D\",\"O\",\"G\"], [\"D\",\"I\",\"G\"], [\"D\",\"O\",\"T\"], \r\n        [\"F\",\"A\",\"T\"], [\"F\",\"E\",\"D\"], [\"F\",\"O\",\"G\"], [\"G\",\"A\",\"S\"], [\"G\",\"O\", \"T\"], [\"H\",\"A\",\"D\"], [\"H\",\"A\",\"T\"], [\"H\",\"E\",\"N\"], [\"H\",\"I\",\"D\"], \r\n        [\"H\",\"I\",\"S\"], [\"H\",\"U\",\"G\"], [\"J\",\"A\",\"R\"], [\"J\",\"E\",\"T\"], [\"L\",\"I\",\"D\"], [\"L\",\"O\",\"W\"], [\"M\",\"A\",\"X\"], [\"M\",\"O\",\"M\"], [\"N\",\"O\",\"D\"],  [\"N\",\"O\",\"T\"], \r\n        [\"P\",\"I\",\"G\"], [\"P\",\"U\",\"P\"], [\"R\",\"U\",\"B\"], [\"S\",\"U\",\"M\"], [\"T\",\"O\",\"N\"], [\"V\",\"A\",\"N\"], [\"W\",\"I\",\"N\"], [\"W\",\"O\",\"N\"] ];       \r\n    }        \r\n\r\n    componentDidMount () {\r\n        window.scrollTo(0, 0)\r\n    }\r\n    \r\n    getLetter0 = () => {\r\n        this.getLetter(0);\r\n    }\r\n    getLetter1 = () => {\r\n        this.getLetter(1);\r\n    }\r\n    getLetter2 = () => {\r\n        this.getLetter(2);\r\n    }\r\n\r\n    getNextDifferentLetter = (letterPositionInWord) => {\r\n                \r\n        let currentLetter = \"\";     \r\n        let newLetter = \"\";  \r\n        let newIndex = 0; \r\n        let foundDifferentLetter =  false;        \r\n        let currentRowIndex = null;\r\n        \r\n        switch(letterPositionInWord){\r\n            case 0:\r\n                currentRowIndex = this.letter0Index;\r\n                break;\r\n            case 1:\r\n                currentRowIndex = this.letter1Index;\r\n                break;\r\n            case 2:                \r\n                currentRowIndex = this.letter2Index;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        currentLetter =  this.arrayOfWordsAsLettersInterChange[currentRowIndex][letterPositionInWord];\r\n        while (!foundDifferentLetter){\r\n            (currentRowIndex === this.arrayOfWordsAsLettersInterChange.length -1 )? newIndex =0 : newIndex = currentRowIndex++; \r\n            newLetter =  this.arrayOfWordsAsLettersInterChange[newIndex][letterPositionInWord];\r\n            if (newLetter !== currentLetter){\r\n                foundDifferentLetter = true;\r\n            }\r\n        }  \r\n\r\n        switch(letterPositionInWord){\r\n            case 0:\r\n                this.letter0Index = newIndex;\r\n                break;\r\n            case 1:\r\n                this.letter1Index = newIndex;\r\n                break;\r\n            case 2:                \r\n                this.letter2Index = newIndex;\r\n                break;\r\n            default:\r\n                break;\r\n        }        \r\n        \r\n        return newLetter;\r\n    }\r\n\r\n    getLetter = (letterNumber) => {                                        \r\n\r\n        let nextLetter = \"\";        \r\n        switch(letterNumber){\r\n            case 0:\r\n                {      \r\n                    nextLetter = this.getNextDifferentLetter(0);\r\n                    this.setState({letter0:nextLetter });                                             ;                                      \r\n                    break;\r\n                }\r\n            case 1:\r\n                {                   \r\n                    nextLetter = this.getNextDifferentLetter(1);\r\n                    this.setState({letter1:nextLetter });                                             ;                                      \r\n                    break;\r\n                }\r\n            case 2:\r\n                {                   \r\n                    nextLetter = this.getNextDifferentLetter(2);\r\n                    this.setState({letter2:nextLetter });                                             ;                                      \r\n                    break;\r\n                }\r\n            default:\r\n                break;\r\n        }\r\n                \r\n    }\r\n\r\n    render() {\r\n\r\n        var arrayOfWordsAsLetters  = [ [\"B\",\"E\",\"D\"], [\"B\", \"A\", \"N\"] , [\"B\",\"E\",\"G\"], [\"B\",\"E\",\"T\"], [\"B\",\"O\",\"X\"], [\"C\",\"A\",\"P\"], [\"D\",\"I\",\"D\"], [\"E\",\"G\",\"G\"], \r\n        [\"F\",\"A\",\"N\"], [\"F\",\"O\",\"R\"], [\"F\",\"U\",\"N\"], [\"G\",\"U\",\"M\"], [\"H\",\"A\",\"M\"], [\"H\",\"I\",\"M\"], [\"H\",\"O\",\"P\"], [\"J\",\"O\",\"G\"], [\"L\",\"E\",\"T\"], [\"L\",\"O\",\"G\"], \r\n        [\"M\",\"A\",\"C\"], [\"M\",\"A\",\"N\"], [\"M\",\"E\",\"N\"], [\"N\",\"A\",\"P\"], [\"P\",\"A\",\"D\"], [\"P\",\"A\",\"N\"], [\"P\",\"E\",\"N\"], [\"P\",\"E\",\"T\"], [\"P\",\"I\",\"C\"], [\"P\",\"I\",\"N\"], \r\n        [\"P\",\"O\",\"P\"], [\"R\",\"O\",\"T\"], [\"R\",\"U\",\"N\"], [\"S\",\"A\",\"G\"], [\"S\",\"A\",\"T\"], [\"S\",\"I\",\"P\"], [\"S\",\"I\",\"T\"], [\"S\",\"U\",\"N\"], [\"T\",\"A\",\"N\"], [\"Y\",\"E\",\"S\"] , \r\n        [\"Y\",\"E\",\"T\"], [\"W\",\"I\",\"G\"], [\"W\",\"E\",\"T\"], [\"W\",\"E\",\"B\"], [\"W\",\"A\",\"S\"], [\"V\",\"E\",\"T\"], [\"T\",\"U\",\"B\"], [\"T\",\"O\",\"P\"], [\"T\",\"A\",\"X\"], [\"T\",\"A\",\"P\"], \r\n        [\"T\",\"A\",\"G\"], [\"S\",\"P\",\"A\"], [\"S\",\"O\",\"N\"], [\"S\",\"I\",\"X\"], [\"S\",\"E\",\"T\"], [\"S\",\"E\",\"C\"], [\"S\",\"A\",\"D\"], [\"R\",\"E\",\"D\"], [\"R\",\"A\",\"T\"], [\"R\",\"A\",\"M\"], \r\n        [\"P\",\"O\",\"T\"], [\"P\",\"O\",\"D\"], [\"P\",\"A\",\"T\"], [\"P\",\"A\",\"L\"], [\"O\",\"D\",\"D\"], [\"N\",\"E\",\"T\"], [\"M\",\"I\",\"X\"], [\"M\",\"E\",\"T\"], [\"M\",\"E\",\"D\"], [\"M\",\"A\",\"T\"], \r\n        [\"M\",\"A\",\"P\"], [\"M\",\"A\",\"D\"], [\"L\",\"O\",\"T\"], [\"L\",\"I\",\"P\"], [\"K\",\"I\",\"D\"], [\"J\",\"O\",\"B\"], [\"H\",\"O\",\"T\"], [\"H\",\"I\",\"P\"], [\"H\",\"A\",\"S\"], [\"G\",\"O\",\"D\"], \r\n        [\"F\",\"O\",\"X\"], [\"F\",\"I\",\"X\"], [\"F\",\"A\",\"R\"], [\"D\",\"O\",\"C\"], [\"C\",\"O\",\"W\"], [\"C\",\"A\",\"R\"],  [\"B\",\"A\",\"D\"], [\"A\",\"R\",\"M\"], [\"A\",\"R\",\"C\"], [\"A\",\"R\",\"T\"], \r\n        [\"A\",\"P\",\"P\"], [\"A\",\"R\",\"E\"], [\"A\",\"R\",\"T\"], [\"B\",\"A\",\"G\"], [\"B\",\"A\",\"T\"], [\"B\",\"I\",\"G\"], [\"B\",\"O\",\"B\"], [\"B\",\"U\",\"T\"], [\"C\",\"A\",\"B\"], [\"B\",\"I\",\"T\"], \r\n        [\"C\",\"A\",\"N\"], [\"C\",\"A\",\"T\"], [\"C\",\"O\",\"D\"], [\"C\",\"O\",\"W\"], [\"C\",\"U\",\"B\"], [\"C\",\"U\",\"P\"], [\"D\",\"A\",\"D\"], [\"D\",\"O\",\"G\"], [\"D\",\"I\",\"G\"], [\"D\",\"O\",\"T\"], \r\n        [\"E\",\"N\",\"D\"], [\"F\",\"A\",\"T\"], [\"F\",\"E\",\"D\"], [\"F\",\"O\",\"G\"], [\"G\",\"A\",\"S\"], [\"G\",\"O\", \"T\"], [\"H\",\"A\",\"D\"], [\"H\",\"A\",\"T\"], [\"H\",\"E\",\"N\"], [\"H\",\"I\",\"D\"], \r\n        [\"H\",\"I\",\"S\"], [\"H\",\"U\",\"G\"], [\"J\",\"A\",\"R\"], [\"J\",\"E\",\"T\"], [\"L\",\"I\",\"D\"], [\"L\",\"O\",\"W\"], [\"M\",\"A\",\"X\"], [\"M\",\"O\",\"M\"], [\"N\",\"O\",\"D\"],  [\"N\",\"O\",\"T\"], \r\n        [\"P\",\"I\",\"G\"], [\"P\",\"U\",\"P\"], [\"R\",\"U\",\"B\"], [\"S\",\"U\",\"M\"], [\"T\",\"O\",\"N\"], [\"V\",\"A\",\"N\"], [\"W\",\"I\",\"N\"], [\"W\",\"O\",\"N\"] ];                                \r\n\r\n        var cardStyles = {\r\n            width:\"100%\",            \r\n            textAlign: \"center\",\r\n            display:\"flex\",\r\n            flexDirection:\"row\",\r\n            justifyContent:\"center\",          \r\n            alignItems:\"flex-start\",                            \r\n            userSelect: \"none\"\r\n        }\r\n\r\n      return(\r\n  \r\n        \r\n        \r\n      <React.Fragment>\r\n         <div className=\"TopMarginToDealWithNavBarAll\">\r\n            <div className=\"CenterMe\">\r\n                Scroll down to to see a list of words.<br/><br/>\r\n                Click on the squares to uncover a new letter and read the word by making up the sounds.<br/><br/>\r\n\r\n                <div style={cardStyles}>                \r\n                    <div style={{  background:\"lightpink\", width: \"20vw\", border: \"outset 5px black\", height:\"20vw\", cursor:\"pointer\" }} onClick={this.getLetter0}>\r\n                    <span style={{ fontSize:\"15vw\" }}>{this.state.letter0}</span>                 \r\n                    </div>   \r\n                    <div style={{ background:\"lightblue\", width: \"20vw\", border: \"outset 5px black\", height:\"20vw\", cursor:\"pointer\" }} onClick={this.getLetter1}>\r\n                    <span style={{ fontSize:\"15vw\" }}>{this.state.letter1}</span>                 \r\n                    </div>   \r\n                    <div style={{ background:\"lightblue\", width: \"20vw\", border: \"outset 5px black\", height:\"20vw\", cursor:\"pointer\" }} onClick={this.getLetter2}>\r\n                    <span style={{ fontSize:\"15vw\" }}>{this.state.letter2}</span>                 \r\n                    </div>                                                 \r\n                </div>   \r\n\r\n                <br/><br/>                                                                          \r\n                \r\n                {/*use map, not foreach, map gets a new object that we show}*/}\r\n                {arrayOfWordsAsLetters.map( (item, index) =>\r\n                    <div key={index}>               \r\n                        <div  style={cardStyles}>\r\n                            <span className=\"letterCardsForReadingWords\"> {item[1]}</span>\r\n                            <span  className=\"letterCardsForReadingWords\">{item[2]}</span>\r\n                            <span  style={{color:\"navy\", fontSize:\"10vw\"}}>-</span>\r\n                            <span className=\"letterCardsForReadingWords\" style={{background:\"lightpink\"}}>{item[0]}</span>\r\n                            <span  className=\"letterCardsForReadingWords\">{item[1]}</span>\r\n                            <span  className=\"letterCardsForReadingWords\" >{item[2]}</span>                                                 \r\n                            {/*<hr style={{height:\"5px\", backgroundColor:\"navy\" }}></hr>*/}\r\n                        </div>                        \r\n                        <br/>\r\n                    </div>\r\n                    \r\n                    \r\n                )}\r\n                \r\n\r\n                \r\n            </div>        \r\n        </div>\r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default ThreeLetterWordSounds;","import React, {Component} from \"react\";\r\nimport ShuffleCardsAndShow from \"../../Components/ShuffleCardsAndShow\";\r\n\r\nclass PlusOnePlusZero extends Component {\r\n\r\n    constructor()\r\n    {        \r\n        super();   \r\n        //default is  1 or 0                         \r\n        this.state = { result:\"?\", elementsForWhatToAdd:[0,1], elementsForWhatToAddTo: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], \r\n        checked1:\"checked\", checked2 : \"\" }             \r\n\r\n        this.numberWeAddTo = 0;\r\n        this.numberBeingAdded = 0;\r\n        this.numberWeAddToRef = React.createRef();        \r\n        this.numberBeingAddedRef = React.createRef();        \r\n    }     \r\n\r\n    setOption = (optionString) => {\r\n        if (optionString === \"any\"){\r\n            this.setState({elementsForWhatToAdd:[1,2,3,4,5,6,7,8,9, 10], elementsForWhatToAddTo:[1,2,3,4,5,6,7,8,9, 10,11,12,13,14,15], checked1:\"\", checked2:\"checked\"});            \r\n        }else{\r\n            this.setState({elementsForWhatToAdd:[1,0], elementsForWhatToAddTo : [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], checked2:\"\", checked1:\"checked\"});            \r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    getNewResults = () => {        \r\n        this.setState({result: \"?\"}); \r\n        this.numberWeAddToRef.current.roll();\r\n        this.numberBeingAddedRef.current.roll();                        \r\n    }    \r\n\r\n    storeResultNumberWeAddTo = (number) => {\r\n        this.numberWeAddTo = number;    \r\n    }\r\n    storeResultNumberBeingAdded = (number) => {\r\n        this.numberBeingAdded = number;\r\n    }\r\n\r\n    showResult = () => {\r\n        this.setState({result: this.numberBeingAdded + this.numberWeAddTo});\r\n    }\r\n\r\n    render() {\r\n        var cardStyles = {\r\n            width:\"100%\",            \r\n            textAlign: \"center\",\r\n            display:\"flex\",\r\n            flexDirection:\"row\",\r\n            justifyContent:\"center\",\r\n            fontSize:\"3vw\",            \r\n            alignItems:\"flex-start\"\r\n        }\r\n    var resultSt = {        \r\n        width: \"15vw\",\r\n        border: \"outset 5px black\",\r\n        height:\"25vh\", \r\n        cursor:\"pointer\",        \r\n        position:\"relative\"\r\n    }\r\n\r\n      return(\r\n  \r\n      \r\n      <React.Fragment>\r\n         \r\n         <div className=\"TopMarginToDealWithNavBarAll CenterMe\">             \r\n            <div className=\"radio-toolbar\">    \r\n                <input type=\"radio\" id=\"1or0\" name=\"option\" value=\"1or0\" checked={this.state.checked1} onChange = { () => this.setOption(\"1pr0\")}/>\r\n                <label htmlFor=\"1or0\">Add 1 or 0 to Number</label>\r\n\r\n                <input type=\"radio\" id=\"any\" name=\"option\" value=\"any\" checked={this.state.checked2} onChange = { () => this.setOption(\"any\")}/>\r\n                <label htmlFor=\"any\">Add any Numbers 1-10</label>\r\n            </div>\r\n            <br/>\r\n            <button className= \"buttonGeneral\" style={{ width:\"80%\", marginLeft:\"10%\", marginRight:\"10%\"}} onClick={this.getNewResults}>Get Numbers!</button>   <br/><br/>\r\n                        \r\n            <div style={cardStyles}>                \r\n                <div >                            \r\n                    <ShuffleCardsAndShow  ref={this.numberWeAddToRef}\r\n                        elementsForCard = {this.state.elementsForWhatToAddTo} myWidth=\"15vw\" myHeight = \"25vh\" myFont=\"10vw\" myColor=\"lightblue\" callbackFunction= {this.storeResultNumberWeAddTo}\r\n                    />  \r\n                </div>\r\n                <div style={{  width: \"15vw\" , height:\"25vh\"}}>\r\n                   <span style={{ fontSize:\"10vw\" }}>+</span>                 \r\n                </div>                \r\n                <div >                                   \r\n                    <ShuffleCardsAndShow  ref={this.numberBeingAddedRef}\r\n                        elementsForCard = {this.state.elementsForWhatToAdd} myWidth=\"15vw\" myHeight = \"25vh\" myFont=\"10vw\" myColor=\"lightblue\" callbackFunction= {this.storeResultNumberBeingAdded}\r\n                    />  \r\n                </div>  \r\n\r\n                <div style={{  width: \"10vw\", height:\"25vh\" }}>\r\n                   <span style={{ fontSize:\"10vw\" }}>=</span>                 \r\n                </div>  \r\n\r\n                <div style={resultSt} onClick={this.showResult}>\r\n                   <span style={{ fontSize:\"10vw\"}}  >{this.state.result}</span>   \r\n                   <img style = {{ height:\"35%\", width:\"35%\", position:\"absolute\", bottom:\"0px\", right:\"0px\"}} src={process.env.REACT_APP_FOR_PATH_FOR_PICS + '/images/clickme.svg'}  alt=\"click to see result\"  />          \r\n                </div>   \r\n            </div>       \r\n            \r\n            \r\n        </div>\r\n  \r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default PlusOnePlusZero;\r\n","import React, {Component} from \"react\";\r\n\r\nclass CanvasComponent extends Component {\r\n\r\n    canvasX = 0;\r\n    canvasY = 0;\r\n    touchX=0;\r\n    touchY=0;\r\n\r\n    constructor(props)\r\n    {\r\n        //should get whatever the canvas needs to display by default.\r\n        super(props);        \r\n        this.refToCanvas = React.createRef();          \r\n        window.addEventListener('resize', this.handleResize);        \r\n    }\r\n    componentDidMount(){\r\n        this.getCanvasPosition();\r\n        //need to reset this to get the accurate touch points\r\n        this.refToCanvas.current.width = this.refToCanvas.current.clientWidth;\r\n        this.refToCanvas.current.height = this.refToCanvas.current.clientHeight;    \r\n        this.refToCanvas.current.addEventListener('touchstart', this.canvasTouchStart, {passive:false})    ;\r\n        this.refToCanvas.current.addEventListener('touchmove', this.canvasTouchMove, {passive:false})    ;        \r\n        this.setCanvasDefault(); \r\n    }\r\n          \r\n    handleResize = () => {        \r\n        this.getCanvasPosition();\r\n        //need to reset this to get the accurate touch points\r\n        //changing the following resets the canvas contents\r\n        this.refToCanvas.current.width = this.refToCanvas.current.clientWidth;\r\n        this.refToCanvas.current.height = this.refToCanvas.current.clientHeight;  \r\n        this.setCanvasDefault(); //todo see why not redoing the image on resize\r\n    }    \r\n\r\n    /*POSITIONING START*/\r\n    GetOffset = (object, offset) => {\r\n        \r\n        if (!object)\r\n            return;\r\n        offset.x += object.offsetLeft;\r\n        offset.y += object.offsetTop;\r\n                \r\n        this.GetOffset(object.offsetParent, offset);\r\n    }\r\n    GetScrolled = (object, scrolled) => {\r\n        if (!object)\r\n            return;\r\n        scrolled.x += object.scrollLeft;\r\n        scrolled.y += object.scrollTop;\r\n        \r\n        if (object.tagName.toLowerCase() !== \"html\") {\r\n            this.GetScrolled(object.parentNode, scrolled);\r\n        }        \r\n    }\r\n    getCanvasPosition = () => {    \r\n        \r\n        if (this.refToCanvas != null && this.refToCanvas.current != null)    \r\n        {            \r\n            var offset = { x: 0, y: 0 };            \r\n            this.GetOffset(this.refToCanvas.current, offset);\r\n        \r\n            var scrolled = { x: 0, y: 0 };            \r\n            this.GetScrolled(this.refToCanvas.current.parentNode, scrolled);            \r\n        \r\n            this.canvasX = offset.x - scrolled.x ;                        \r\n            this.canvasY = offset.y - scrolled.y ;            \r\n        }\r\n    }\r\n    getTouchPosition = (e, canvas) => {\r\n        \r\n        if (!e)\r\n            return;\r\n    \r\n        if (e.touches) {    \r\n            if (e.touches.length === 1) {                        \r\n                var touch = e.touches[0];\r\n                this.touchX = touch.pageX - this.canvasX;\r\n                this.touchY = touch.pageY - this.canvasY;                  \r\n            }    \r\n        }\r\n    }\r\n    drawDot = (ctx) => {\r\n            \r\n        ctx.fillStyle = \"green\";\r\n        ctx.beginPath();            \r\n        ctx.fillRect(this.touchX,this.touchY, 10, 10);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    \r\n    } \r\n    /*POSITIONING END*/\r\n\r\n    /*UPDATE CANVAS START*/    \r\n\r\n    setCanvasDefault = () => {\r\n\r\n        var ctx = this.refToCanvas.current.getContext(\"2d\");                 \r\n        ctx.clearRect(0, 0, this.refToCanvas.current.width, this.refToCanvas.current.height);  \r\n        \r\n        if (this.props.IsThisText === \"true\"){                       \r\n            var fonts = this.refToCanvas.current.width * 0.40;        \r\n            fonts = Math.round(fonts);        \r\n            ctx.font = `${fonts}px Arial`;         \r\n            // lower the font size until the text fits the canvas\r\n            while(ctx.measureText(this.props.DefaultDisplay).width>this.refToCanvas.current.width){\r\n                fonts--;\r\n                ctx.font=`${fonts}px Arial`; \r\n            }      \r\n            //once size is reduced to fit, make a bit smaller so it's not all the way to the edge\r\n            fonts = fonts -25;\r\n            ctx.font=`${fonts}px Arial`; \r\n\r\n            ctx.strokeText(this.props.DefaultDisplay, 50 , fonts); //50 so J and similar are not cut off.\r\n        }\r\n        //we are not getting the image but the image path (using string instead of bool)\r\n        //todo do a component or a function to create the images and return it so we can call from other places\r\n        if (this.props.IsThisAnImage === \"true\") {              \r\n            let img = new Image();\r\n            img.src = this.props.DefaultDisplay;\r\n\r\n            let imgW = this.refToCanvas.current.width;\r\n            let imgH = this.refToCanvas.current.height;\r\n            \r\n            img.onload = function(ev) {                                \r\n                ctx.drawImage(img,0,0, imgW, imgH);\r\n            }            \r\n        }\r\n    }\r\n    \r\n    /*UPDATE CANVAS END*/\r\n\r\n    /*LISTENER EVENTS START*/\r\n    canvasTouchStart = (e) =>{            \r\n                \r\n        var ctx = this.refToCanvas.current.getContext(\"2d\");            \r\n        this.getTouchPosition(e, this.refToCanvas.current);               \r\n        this.drawDot(ctx);                \r\n        e.preventDefault();\r\n    }\r\n    canvasTouchMove = (e) => {\r\n        \r\n        var ctx = this.refToCanvas.current.getContext(\"2d\");                    \r\n        this.getTouchPosition(e, this.refToCanvas.current);      \r\n        this.drawDot(ctx, this.touchX, this.touchY, 12);        \r\n        e.preventDefault();         \r\n    }\r\n    /*LISTENER EVENTS END*/    \r\n\r\n    resetCanvas =() =>{\r\n        this.defaultDisplay();\r\n    }\r\n    render() {\r\n        \r\n        var canvasStyle = {           \r\n            width: this.props.canvasWidth,\r\n            height:this.props.canvasHeight,\r\n            border: \"solid 2px navy\",\r\n            padding:\"5px\"\r\n          }\r\n\r\n        return(\r\n            <React.Fragment>                                                                                                            \r\n                    <canvas style ={canvasStyle} ref={this.refToCanvas}       />                                                  \r\n            </React.Fragment>\r\n        )};\r\n}\r\n\r\nexport default CanvasComponent;","import React, {Component} from \"react\";\r\nimport CanvasComponent from \"../../Components/CanvasComponent\";\r\n\r\nclass Subtraction extends Component {\r\n\r\n    constructor()\r\n    {\r\n        super();           \r\n        this.state = { result:\"?\", numberOne:\"?\", numberTwo:\"?\"}       \r\n\r\n        this.result = null;                \r\n        this.numbersToUse = [1,2,3,4,5,6,7,8,9,10];    \r\n\r\n        const pathPic = process.env.REACT_APP_FOR_PATH_FOR_PICS;\r\n        \r\n        this.imgPath = pathPic + \"/images//substractionline.svg\";   \r\n        this.refToCanvas = React.createRef();      \r\n    }         \r\n   \r\n    generateRandomNumber = (length) => {\r\n        return Math.floor(Math.random() * length);      \r\n    }\r\n    \r\n    getNewNumbers = () => {\r\n\r\n        let random1 = this.generateRandomNumber(this.numbersToUse.length);\r\n        let random2 = this.generateRandomNumber(this.numbersToUse.length);\r\n                \r\n        (random1>= random2)? this.setState( { numberOne: random1, numberTwo: random2}) : this.setState( { numberTwo: random1, numberOne: random2});\r\n        this.setState( {result : \"?\"});\r\n\r\n        this.result =  Math.abs(random1 - random2)        \r\n        \r\n        this.refToCanvas.current.setCanvasDefault();\r\n    }\r\n            \r\n    showResult = () => {\r\n        this.setState( {result : this.result});\r\n    }\r\n\r\n    render() {\r\n        var EquationStyle = {\r\n            width:\"100%\",            \r\n            textAlign: \"center\",\r\n            display:\"flex\",\r\n            flexDirection:\"row\",\r\n            justifyContent:\"center\",                     \r\n            alignItems:\"flex-start\",\r\n            fontSize:\"15vh\",            \r\n        }\r\n      return(\r\n  \r\n      \r\n      <React.Fragment>\r\n         \r\n         <div className=\"TopMarginToDealWithNavBarAll CenterMe\">   \r\n            \r\n            \r\n            \r\n                <button className= \"buttonGeneral\" onClick={this.getNewNumbers} style={{width:\"80%\", marginLeft:\"10%\", marginRight:\"10%\"}}>Get New Numbers!</button><br/>                        \r\n                <div style={EquationStyle}>                                                \r\n                                    \r\n                    <span >{this.state.numberOne}</span>                 \r\n                    <span >-</span>                 \r\n                    <span >{this.state.numberTwo}</span>                 \r\n                    <span >=</span>                                 \r\n                    <div style={{ position:\"relative\", cursor:\"pointer\" }} onClick={this.showResult}>\r\n                        <span >{this.state.result}</span>   \r\n                        <img style = {{ height:\"45%\", width:\"45%\", position:\"absolute\", bottom:\"0px\", right:\"0px\"}} src={process.env.REACT_APP_FOR_PATH_FOR_PICS + '/images/clickme.svg'}  alt=\"click to see result\"  />                        \r\n                    </div>   \r\n                </div>\r\n                         \r\n\r\n            <div style={{position:\"relative\"}}>\r\n                <img style = {{ height:\"35%\", width:\"35%\", position:\"absolute\", top:\"5%\", left:\"10px\"}} src={process.env.REACT_APP_FOR_PATH_FOR_PICS + '/images/requirestouch.svg'}  alt=\"cRequires touch screen\"  />                                            \r\n                <CanvasComponent DefaultDisplay={this.imgPath} IsThisAnImage = \"true\" IsThisText = \"false\" canvasWidth =\"90vw\" canvasHeight=\"40vh\" ref={this.refToCanvas}   /> \r\n            </div> \r\n            \r\n        </div>\r\n  \r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default Subtraction;\r\n","import React, {Component} from \"react\";\r\nimport { disableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\r\n\r\nclass Counting extends Component {\r\n\r\n    constructor()\r\n    {\r\n        super();           \r\n        this.state = { digit1:\"0\", digit2:\"0\"}       \r\n\r\n        this.result = null;                         \r\n        this.digit1 = 0; this.digit2 = 0;      \r\n        this.mainDiv = React.createRef();\r\n    }             \r\n    \r\n    nextDigit = (d, s) => {\r\n\r\n        switch(d) {\r\n            case \"1\":\r\n                if (s === \"UP\"){\r\n                    (this.digit1 === 9)? this.digit1 = 0 : this.digit1 ++;\r\n                }else{\r\n                    (this.digit1 === 0)? this.digit1 = 9 : this.digit1 --;\r\n                }                \r\n                this.setState( { digit1: this.digit1})\r\n                break;\r\n            case \"2\":\r\n                if (s === \"UP\"){\r\n                    (this.digit2 === 9)? this.digit2 = 0 : this.digit2 ++;\r\n                }else{\r\n                    (this.digit2 === 0)? this.digit2 = 9 : this.digit2 --;\r\n                }                  \r\n                this.setState( { digit2: this.digit2})\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n    }   \r\n            \r\n    showResult = () => {\r\n        this.setState( {result : this.result});\r\n    }\r\n\r\n    componentDidMount(){\r\n        disableBodyScroll(this.mainDiv.current);\r\n    }\r\n\r\n    componentWillUnmount(){       \r\n        clearAllBodyScrollLocks();       \r\n    }\r\n    render() {      \r\n\r\n       var divHorContainer = {\r\n        display:\"flex\",\r\n        flexDirection:\"row\",\r\n        justifyContent:\"center\",\r\n        userSelect:\"none\"\r\n        }\r\n\r\n        var buttons = {\r\n            color:\"white\", \r\n            width:\"20vw\",\r\n            fontSize:\"5vw\",\r\n            height:\"13vh\",\r\n            textAlign:\"center\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems:\"center\",\r\n            outline:\"none\",\r\n            border:\"white solid 2px\"\r\n        }\r\n\r\n        var blueButtons = Object.assign({}, buttons, { backgroundColor:\"navy\"}); \r\n        var pinkButtons = Object.assign({}, buttons, { backgroundColor:\"deeppink\"});             \r\n       \r\n      return(\r\n  \r\n      \r\n      <React.Fragment>\r\n         \r\n         <div className=\"TopMarginToDealWithNavBarAll CenterMe\" ref={this.mainDiv}>             \r\n           Increase or decrease the number by clicking on the + or - buttons and see what numbers you make.\r\n           <br/><br/>\r\n           \r\n            <div>                   \r\n                <div style = {divHorContainer}>\r\n                    <button style = {blueButtons} onClick={() => this.nextDigit(\"1\", \"UP\")}>+</button>\r\n                    <button style = {pinkButtons} onClick={() => this.nextDigit(\"2\", \"UP\")}> +</button> <br/>\r\n                </div>   \r\n                 \r\n                <div style = {divHorContainer}>\r\n                    <span style = {{ border:\"white solid 2px\", color:\"white\", backgroundColor:\"navy\", width:\"20vw\", height:\"20vw\", fontSize:\"18vw\", textAlign:\"center\"}}>{this.state.digit1 } </span>\r\n                    <span style = {{ border:\"white solid 2px\", color:\"white\", backgroundColor:\"deeppink\", width:\"20vw\", height:\"20vw\",fontSize:\"18vw\", textAlign:\"center\"}}>{this.state.digit2}</span> <br/>\r\n                </div>                              \r\n\r\n                <div style = {divHorContainer}>\r\n                    <button style = {blueButtons} onClick={() => this.nextDigit(\"1\", \"DOWN\")}>-</button>  \r\n                    <button style = {pinkButtons} onClick={() => this.nextDigit(\"2\", \"DOWN\")}>-</button> <br/>\r\n                </div>                 \r\n            </div>\r\n            \r\n            {/*}\r\n            <div style={numberStyle}>      \r\n                <div style={ digitGroupStyle}>\r\n                    <button style={ buttonStylePink}  onClick={() => this.nextDigit(\"1\", \"UP\")}></button> \r\n                    <span style ={digitStyle}>{this.state.digit1 } </span><br/>\r\n                    <button onClick={() => this.nextDigit(\"1\", \"DOWN\")}></button>\r\n                </div>  \r\n\r\n                <div style={ digitGroupStyle}>\r\n                    <button  onClick={() => this.nextDigit(\"2\", \"UP\")}></button>  \r\n                    <span  >{this.state.digit2}</span>     <br/>\r\n                    <button  onClick={() => this.nextDigit(\"2\", \"DOWN\")} > </button>                                        \r\n                </div>\r\n            </div>                  \r\n      */}\r\n            \r\n            \r\n        </div>\r\n  \r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default Counting;\r\n","import React from \"react\";\r\n\r\nfunction MinorPrintables () {\r\n             \r\n\r\n    \r\n      return(        \r\n        \r\n      <React.Fragment>\r\n         <div className=\"TopMarginToDealWithNavBarAll\">     \r\n\r\n            <div className=\"grid-container3\">\r\n                <div className=\"grid-item\">\r\n                    <div style={{margin:\"3vh\"}}>\r\n                        <a className=\"buttonPrintable buttonPrintableLang\" href=\"authorvsillustrator.pdf\" target=\"_new\">Author/Illustrator!</a>\r\n                    </div>      \r\n                    Graphic to indicate what author and illustrator do in a book.\r\n                </div>\r\n                <div className=\"grid-item\">\r\n                    <div style={{margin:\"3vh\"}}>\r\n                        <a className=\"buttonPrintable buttonPrintableLang\" style={{textDecoration:\"none\"}} href=\"rhymes.pdf\" target=\"_new\">Rhyming!</a>\r\n                    </div>  \r\n                    Print these cards and practice finding which ones rhyme.\r\n                </div>\r\n                <div className=\"grid-item\">\r\n                    <div style={{margin:\"3vh\"}}>\r\n                        <a className=\"buttonPrintable buttonPrintableLang\" style={{textDecoration:\"none\"}} href=\"startandendsounds.pdf\" target=\"_new\">Being/End Sounds!</a>                    \r\n                    </div> \r\n                    Cards with letters and some words to use those letters on.  The end sound of one word will be the start sound of another word.\r\n                </div>  \r\n                <div className=\"grid-item\">\r\n                    <div style={{margin:\"3vh\"}}>\r\n                        <a className=\"buttonPrintable buttonPrintableLang\" style={{textDecoration:\"none\"}} href=\"magicewords.pdf\" target=\"_new\">Magic E!</a>                    \r\n                    </div> \r\n                    Read some words with and without the Magic E.\r\n                </div>  \r\n\r\n\r\n                <div className=\"grid-item\">\r\n                    <div style={{margin:\"3vh\"}}>\r\n                        <a className=\"buttonPrintable buttonPrintableMath\" style={{textDecoration:\"none\"}} href=\"CombiningNumbersAddition.pdf\" target=\"_new\">Add!</a>\r\n                    </div> \r\n                    Color the squares and write the addition equation to go with them.\r\n                </div>\r\n                <div className=\"grid-item\">\r\n                    <div style={{margin:\"3vh\"}}>\r\n                        <a className=\"buttonPrintable buttonPrintableMath\"  href=\"patterns.pdf\" target=\"_new\">Patterns!</a>\r\n                    </div> \r\n                    Work on some patterns.\r\n                </div>\r\n                <div className=\"grid-item\">\r\n                    <div style={{margin:\"3vh\"}}>\r\n                        <a className=\"buttonPrintable buttonPrintableMath\"  href=\"equationproblems.pdf\" target=\"_new\">Add/Subtract!</a>\r\n                    </div> \r\n                    Print these cards with numbers and word problems and identify whether we are adding or subtracting, and build the equation.\r\n                </div>              \r\n        </div>       \r\n\r\n            </div>                \r\n      </React.Fragment>)\r\n  };  \r\n  \r\n  export default MinorPrintables;","import React, {Component} from \"react\";\r\n\r\nclass ModelingTens extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);                  \r\n        this.pathPic = process.env.REACT_APP_FOR_PATH_FOR_PICS;\r\n        this.state = {number:10, numberBuilt:0, arrayOfImages:[]}\r\n        this.numberBuilt = 0;\r\n        this.arrayOfImages = [];           \r\n        this.sizeOfLine = \"225px\";\r\n        this.sizeOfOne = \"30px\";\r\n    }      \r\n\r\n    generateRandomNumber = () => {\r\n        return Math.floor(Math.random() * 19);      \r\n    }\r\n    \r\n    /*addToArrayAndNumber = (img, n) => {       \r\n        this.arrayOfImages.push(img);\r\n        this.numberBuilt += n;\r\n        this.setState( {numberBuilt:this.numberBuilt, arrayOfImages: this.arrayOfImages} );        \r\n    }*/\r\n    addLine = () => {        \r\n        //let img = new Image();\r\n        //img.src = this.pathPic + \"images/ModelingTensLine.svg\"        \r\n        //img.addEventListener('onload', this.addToArrayAndNumber(img, 10));                              \r\n        let obj = {\r\n            imgSrc:\"\",\r\n            imgSize:\"\"\r\n        }\r\n        obj.imgSrc =  this.pathPic + \"/images/ModelingTensLine.svg\" ;\r\n        obj.imgSize = this.sizeOfLine;\r\n        this.arrayOfImages.push(obj);        \r\n        this.numberBuilt += 10;\r\n        this.setState( {numberBuilt:this.numberBuilt, arrayOfImages: this.arrayOfImages} ); \r\n        this.forceUpdate();        \r\n    }\r\n    addOne = () => {\r\n        let obj = {\r\n            imgSrc:\"\",\r\n            imgSize:\"\"\r\n        }\r\n        obj.imgSrc =  this.pathPic + \"/images/ModelingTensOne.svg\" ;\r\n        obj.imgSize = this.sizeOfOne;\r\n        this.arrayOfImages.push(obj);        \r\n        this.numberBuilt += 1;\r\n        this.setState( {numberBuilt:this.numberBuilt, arrayOfImages: this.arrayOfImages} ); \r\n        this.forceUpdate();\r\n    }\r\n    next = () =>{\r\n        let num = this.generateRandomNumber();        \r\n        this.setState({number:num});\r\n        this.reset();\r\n    }\r\n    reset = () => {\r\n        this.numberBuilt = 0;\r\n        this.arrayOfImages = [];    \r\n        this.setState({numberBuilt:this.numberBuilt, arrayOfImages:this.arrayOfImages});\r\n    }\r\n    render() {           \r\n\r\n        var divHorContainer = {\r\n            display:\"flex\",\r\n            flexDirection:\"row\",\r\n            justifyContent:\"center\",\r\n            userSelect:\"none\",\r\n            margin:\"15px\"\r\n        }        \r\n      return(  \r\n               \r\n      <React.Fragment>\r\n         \r\n        <div className=\"TopMarginToDealWithNavBarAll CenterMe\">  \r\n            Click on the \"ten line\" button or the \"one\" button to make the blocks for the number shown.  Click Next for another number.<br/>  \r\n            \r\n            <button className=\"buttonGeneral\" onClick={ this.addLine}>\r\n                <img src={this.pathPic + \"/images/ModelingTensLine.svg\"} width={this.sizeOfLine} height=\"25px\" alt=\"line\"/>\r\n            </button> \r\n            <button className=\"buttonGeneral\" onClick={ this.addOne}>\r\n                <img src={this.pathPic + \"/images/ModelingTensOne.svg\"} width={this.sizeOfOne} height=\"25px\" alt=\"one\"/>\r\n            </button> \r\n\r\n            <button className=\"buttonGeneral\" onClick={ this.next}>Next!</button>  \r\n            <button className=\"buttonGeneral\" onClick={ this.reset}>Reset!</button>  \r\n            \r\n            <br/>                                                           \r\n            <br/>\r\n\r\n            <div style={divHorContainer}>\r\n                <div style={{width:\"25vw\", height:\"60vh\", border:\"3px solid navy\", fontSize:\"15vw\"}}>\r\n                    {this.state.number}\r\n                </div>\r\n\r\n                <div style={{width:\"65vw\", height:\"60vh\", border:\"3px solid navy\", padding:\"5px\",  overflow:\"scroll\"}}>\r\n                        {this.state.arrayOfImages.map( (item, index) =>   \r\n                        <div key={index} style={{marging:\"3px\"}}>                            \r\n                            <img src={item.imgSrc} width={item.imgSize} alt={item.imgSrc}/>                                                \r\n                        </div>                                    \r\n                )}\r\n                    \r\n                </div>\r\n                <div style={{width:\"8vw\", height:\"60vh\", border:\"3px solid navy\", fontSize:\"6vw\"}}>\r\n                    {this.state.numberBuilt}\r\n                </div>\r\n            </div>\r\n        </div>        \r\n    </React.Fragment>\r\n      )\r\n  };\r\n}\r\n\r\n\r\nexport default ModelingTens;","import React, {Component} from \"react\";\r\n\r\nimport ShuffleCardsAndShow from \"../../Components/ShuffleCardsAndShow\";\r\nimport { generateRandomNumber } from \"../../commonJS\";\r\n\r\nclass NextNumber extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);   \r\n        this.childPlayer1Ref = React.createRef();  \r\n        this.elementsForCard = [25, 27, 34, 15, 66, 10, 20, 30, 40, 55, 71, 83, 94, 99,53,74,89,61,26,14,11,42];\r\n        this.state = {plusOption1:\"?\", plusOption2:\"?\", tenOption1:\"?\", tenOption2:\"?\", border1:\"\", border2:\"\"}\r\n        this.selectedNumber = null;\r\n    }      \r\n\r\n    rollNumber = () => {\r\n        this.childPlayer1Ref.current.roll();\r\n    }\r\n    \r\n    showOptionsForSelectedNumber = (number) => {\r\n        \r\n        let positionFirst = generateRandomNumber(2);\r\n        let plus1=0;\r\n        let plus2=0;\r\n        let plus10_1=0;\r\n        let plus10_2 = 0;\r\n        \r\n        this.selectedNumber = number;\r\n        plus1= number+1;\r\n        plus2 = generateRandomNumber(90);\r\n        plus10_1 = number + 10;\r\n        plus10_2 = number + 12;        \r\n\r\n        if (positionFirst > 1){            \r\n            this.setState({plusOption1: plus1, plusOption2: plus2, tenOption1:plus10_1, tenOption2:plus10_2});\r\n        }else{            \r\n            this.setState({plusOption1: plus2, plusOption2: plus1, tenOption1:plus10_2, tenOption2:plus10_1});\r\n        }\r\n        this.setState({border2: \"\"}) ;  \r\n        this.setState({border1: \"\"}) ;  \r\n    }\r\n\r\n    clickPlus1 = (value) => {\r\n                \r\n        let border = \"\"\r\n        if (value === this.selectedNumber +1){\r\n            border = \"3px solid lightgreen\";\r\n        }\r\n        else{\r\n            border = \"3px solid red\";\r\n        }           \r\n        this.setState({border1: border}) ;             \r\n    }\r\n    clickPlus10 = (value) => {\r\n                \r\n        let border = \"\"\r\n        if (value === this.selectedNumber +10){\r\n            border = \"3px solid lightgreen\";\r\n        }\r\n        else{\r\n            border = \"3px solid red\";\r\n        }           \r\n        this.setState({border2: border}) ;             \r\n    }\r\n\r\n    render() {           \r\n\r\n        var divHorContainer = {\r\n            display:\"flex\",\r\n            flexDirection:\"row\",\r\n            justifyContent:\"center\",\r\n            userSelect:\"none\",\r\n            margin:\"15px\",\r\n            height:\"40vh\"            \r\n        }   \r\n        var number = {\r\n            background:\"lightgreen\",\r\n            width:\"12vw\",\r\n            height:\"10vw\",\r\n            marginLeft:\"5px\",\r\n            textAlign:\"center\",\r\n            userSelect:\"none\",\r\n            fontSize:\"8vw\",\r\n            cursor:\"pointer\"\r\n        }     \r\n        \r\n        this.group1Contents = <div>\r\n                                What comes next?\r\n                                <div style={divHorContainer}>\r\n                                    <div style={number} onClick={ ()=> this.clickPlus1(this.state.plusOption1)}>{this.state.plusOption1}</div>\r\n                                    <div style={number} onClick={ ()=> this.clickPlus1(this.state.plusOption2)}>{this.state.plusOption2}</div>                \r\n                                </div>\r\n                            </div>;\r\n\r\n        this.groupForPlus1 = <div style ={{border: this.state.border1, marginLeft:\"10px\"}}>\r\n                                {this.group1Contents}\r\n                             </div>   ;             \r\n    \r\n        this.group2Contents = <div >\r\n                                Number + 10?\r\n                                <div style={divHorContainer}>\r\n                                    <div style={number} onClick={ ()=> this.clickPlus10(this.state.tenOption1)}>{this.state.tenOption1}</div>        \r\n                                    <div style={number} onClick={ ()=> this.clickPlus10(this.state.tenOption2)}>{this.state.tenOption2}</div>                         \r\n                                </div> \r\n                            </div>\r\n\r\n        this.groupForPlus10 = <div style ={{border: this.state.border2, marginLeft:\"10px\"}}>\r\n                                    {this.group2Contents}\r\n                                 </div>   ;\r\n\r\n      return(  \r\n               \r\n      <React.Fragment>\r\n         \r\n        <div className=\"TopMarginToDealWithNavBarAll CenterMe\">  \r\n        <br/>\r\n            <span><button className=\"buttonGeneral\" onClick={this.rollNumber} style={{width:\"80%\", marginLeft:\"10%\", marginRight:\"10%\"}}>Get a Number</button></span>\r\n\r\n            <div style={divHorContainer} >  \r\n\r\n                <ShuffleCardsAndShow  ref={this.childPlayer1Ref}\r\n                        elementsForCard = {this.elementsForCard} myWidth=\"12vw\" myHeight = \"100%\" myFont=\"8vw\" myColor=\"lightblue\"\r\n                        callbackFunction= {this.showOptionsForSelectedNumber} myBorder=\"solid 3px lightpink\"/>  \r\n                    {this.groupForPlus1}\r\n                    {this.groupForPlus10}\r\n            </div>\r\n        </div>        \r\n    </React.Fragment>\r\n      )\r\n  };\r\n}\r\n\r\n\r\nexport default NextNumber;","import React, {Component} from \"react\";\r\nimport { generateRandomNumber } from \"../commonJS\";\r\n\r\nclass ShufflePicsAndShow extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);        \r\n        this.refToImg = React.createRef();   \r\n        this.refToContainingDiv = React.createRef();   \r\n        this.arrayOfPicPaths = this.props.elementsForPics.slice();        \r\n        this.pathPic = process.env.REACT_APP_FOR_PATH_FOR_PICS;   \r\n        this.numberSelected = 0;         \r\n        this.repeatItems = this.props.repeatItems;\r\n\r\n        //set original pic, then get random from array passed, with genererate random number function\r\n        this.state = {imageSrc: this.pathPic + \"/images/clickme.svg\" }  ;                \r\n    }       \r\n    \r\n    componentDidMount = () => {       \r\n        this.refToContainingDiv.current.addEventListener('animationend', this.animationEnded) ; \r\n    }   \r\n\r\n   roll= () => {                                                                \r\n        var maxNumber = this.arrayOfPicPaths.length;\r\n        this.animationAndDisplay(maxNumber);        \r\n   }    \r\n\r\n   animationAndDisplay = (maxNumber) => {\r\n\r\n       this.numberSelected = generateRandomNumber(maxNumber);        \r\n\r\n       this.setState( {imageSrc:this.pathPic + \"/images/emptyfill.svg\"}); \r\n\r\n       if (this.refToContainingDiv.current !== undefined)   {           \r\n            this.refToContainingDiv.current.className = \"picsAnimation\";              \r\n       }\r\n   }\r\n\r\n   animationEnded = () => {\r\n       \r\n        if (this.refToContainingDiv.current !== undefined)   {           \r\n            this.refToContainingDiv.current.className = null;                          \r\n        }            \r\n            \r\n        if (this.numberSelected < 0){\r\n            this.setState( {imageSrc:this.pathPic + \"/images/clickme.svg\"});            \r\n        }else{            \r\n            this.setState( { imageSrc: this.arrayOfPicPaths[this.numberSelected]});\r\n            if (this.repeatItems === \"false\"){\r\n                this.arrayOfPicPaths.splice(this.numberSelected, 1);\r\n            }\r\n        }                \r\n   }\r\n\r\n   reset = () => {\r\n        this.arrayOfPicPaths =  this.props.elementsForPics.slice();  \r\n        this.setState( {imageSrc:this.pathPic + \"/images/clickme.svg\"});    \r\n   }\r\n\r\n    render() {      \r\n          var picStyle = {                                                              \r\n            width: this.props.myIMageWidth,            \r\n            height:this.props.myImageHeight ,\r\n            userSelect:\"none\",\r\n            border:\"10px lightblue solid\"   ,\r\n            borderRadius: \"50%\",\r\n            cursor:\"pointer\"\r\n          };\r\n      return(  \r\n            \r\n      <React.Fragment>   \r\n                <div>\r\n                    <div ref={this.refToContainingDiv}>\r\n                        <img style={picStyle} ref={this.refToImg} src={this.state.imageSrc} onClick={this.roll} alt=\"Images for rolling\"/>                           \r\n                    </div>                           \r\n                    <button className=\"buttonGeneral\" onClick={this.reset}>Start Over</button>                                                                  \r\n                </div>  \r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default ShufflePicsAndShow;\r\n","import React, {Component} from \"react\";\r\nimport ShufflePicsAndShowComponent from \"./../../Components/ShufflePicsandShow\";\r\nimport { disableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\r\n\r\nclass SpinStarWarsCars extends Component {\r\n\r\n    constructor()\r\n    {\r\n        super();                                        \r\n        this.starwarscars = React.createRef();   \r\n        this.mainDiv = React.createRef(); \r\n        //name of pics and path to pics - Full name with full path to pics.          \r\n        let pathForCarsPics = process.env.REACT_APP_FOR_PATH_FOR_PICS + \"/images//CarImages/\";\r\n        this.elementsForPics = [pathForCarsPics + \"darthmaul.svg\", pathForCarsPics + \"darthvader.svg\", pathForCarsPics + \"flametrooper.svg\", \r\n        pathForCarsPics + \"jettrooper.svg\", pathForCarsPics + \"lukejedi.svg\", pathForCarsPics + \"lukepilot.svg\", pathForCarsPics + \"stormtrooper.svg\",\r\n        pathForCarsPics + \"bb8.svg\", pathForCarsPics + \"lukearm.svg\", pathForCarsPics + \"falconold.svg\", pathForCarsPics + \"falconnew.svg\",\r\n        pathForCarsPics + \"kyloren.svg\", pathForCarsPics + \"captainphasma.svg\", pathForCarsPics + \"kylotie.svg\", pathForCarsPics + \"finn.svg\",\r\n        pathForCarsPics + \"clone.svg\", pathForCarsPics + \"inquisitor.svg\", pathForCarsPics + \"lando.svg\", pathForCarsPics + \"deathtrooper.svg\",\r\n        pathForCarsPics + \"sithtrooper.svg\", pathForCarsPics + \"kira.svg\", pathForCarsPics + \"pretorian.svg\", pathForCarsPics + \"hansolo.svg\",\r\n        pathForCarsPics + \"ywing.svg\", pathForCarsPics + \"dvtrooper.svg\", pathForCarsPics + \"droid.svg\", pathForCarsPics + \"general.svg\",\r\n        pathForCarsPics + \"impavido.svg\", pathForCarsPics + \"rey.svg\", pathForCarsPics + \"2s0.svg\", pathForCarsPics + \"emperor.svg\", \r\n        pathForCarsPics + \"stormtrooper2.svg\", pathForCarsPics + \"rebel.svg\", pathForCarsPics + \"pilot.svg\", pathForCarsPics + \"stormtrooperex.svg\"];        \r\n    }     \r\n\r\n    getNewResults = () => {        \r\n                                      \r\n        this.starwarscars.current.roll();                \r\n    }    \r\n\r\n    componentDidMount(){\r\n        disableBodyScroll(this.mainDiv.current);\r\n    }\r\n    componentWillUnmount(){       \r\n        clearAllBodyScrollLocks();       \r\n    }\r\n    \r\n    render() {\r\n\r\n        var picStyles = {                         \r\n            display:\"flex\",\r\n            flexDirection:\"row\",\r\n            justifyContent:\"center\"                  \r\n        }\r\n      return(\r\n  \r\n      \r\n      <React.Fragment>\r\n         \r\n         <div className=\"TopMarginToDealWithNavBarAll CenterMe\" ref={this.mainDiv}>            \r\n            Get a random star wars car drawing.<br/>            \r\n            <br/>\r\n            <div style={picStyles}>                     \r\n                        <ShufflePicsAndShowComponent  ref={this.starwarscars}\r\n                        elementsForPics = {this.elementsForPics} myPicsPath = {this.parthToPics} myIMageWidth=\"65vh\" myImageHeight = \"65vh\" repeatItems = \"false\"\r\n                        />   \r\n                                                                                \r\n            </div>                               \r\n        </div>\r\n  \r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default SpinStarWarsCars;\r\n","import React , {useEffect} from \"react\";\r\nimport ShufflePicsAndShowComponent from \"../../Components/ShufflePicsandShow\";\r\nimport { disableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\r\n\r\nfunction SpinShapes () {    \r\n\r\n    let shapes = React.createRef();    \r\n    let mainDiv = React.createRef(); \r\n\r\n    /*function getNewResults (){        \r\n                                      \r\n        shapes.current.roll();                \r\n    } */    \r\n            \r\n    let pathForShapePics = process.env.REACT_APP_FOR_PATH_FOR_PICS + \"/images//ShapeImages/\";\r\n    let elementsForPics = [pathForShapePics + \"circle.svg\", pathForShapePics + \"cone.svg\", \r\n    pathForShapePics + \"cube.svg\", pathForShapePics + \"cylinder.svg\", pathForShapePics + \"diamond.svg\", pathForShapePics + \"heart.svg\",\r\n    pathForShapePics + \"hexagon.svg\", pathForShapePics + \"oval.svg\", pathForShapePics + \"pyramid.svg\", pathForShapePics + \"rectangle.svg\",\r\n    pathForShapePics + \"sphere.svg\", pathForShapePics + \"square.svg\", pathForShapePics + \"star.svg\", pathForShapePics + \"triangle.svg\"];        \r\n   \r\n\r\n    var picStyles = {                         \r\n            display:\"flex\",\r\n            flexDirection:\"row\",\r\n            justifyContent:\"center\"  \r\n    }                \r\n    \r\n    useEffect( () => {\r\n        disableBodyScroll(mainDiv.current);\r\n\r\n        //for cleanup (will unmount)\r\n      return function cleanup () {\r\n        clearAllBodyScrollLocks();\r\n      }  \r\n    })\r\n\r\n    return(\r\n  \r\n      \r\n      <React.Fragment>\r\n         \r\n         <div className=\"TopMarginToDealWithNavBarAll CenterMe\" ref={mainDiv}>            \r\n            Get a random shape and go find it around your home.<br/>            \r\n            <br/>\r\n            <div style={picStyles}>                     \r\n                        <ShufflePicsAndShowComponent  ref={shapes}\r\n                        elementsForPics = {elementsForPics} myPicsPath = {pathForShapePics} myIMageWidth=\"65vh\" myImageHeight = \"65vh\" repeatItems = \"false\"\r\n                        />   \r\n                                                                                \r\n            </div>                               \r\n        </div>\r\n  \r\n      </React.Fragment>)\r\n  };  \r\n  \r\n  export default SpinShapes;\r\n","\r\nimport React, {useState, useEffect} from \"react\";\r\n//import { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\r\nimport { disableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\r\n\r\n\r\n\r\nfunction MemoryCards () {           \r\n                   \r\n    window.scroll(0,0);\r\n    \r\n    let mainDiv = React.createRef();    \r\n\r\n    let pathForCarsPics = process.env.REACT_APP_FOR_PATH_FOR_PICS + \"/images//CarImages/\";\r\n    let questionPic = process.env.REACT_APP_FOR_PATH_FOR_PICS + \"/images//clickme.svg\";\r\n\r\n    let elementsForPicsBeforeSorting = [pathForCarsPics + \"darthmaul.svg\", pathForCarsPics + \"darthvader.svg\", \r\n    pathForCarsPics + \"lukepilot.svg\", pathForCarsPics + \"bb8.svg\", pathForCarsPics + \"falconnew.svg\",\r\n    pathForCarsPics + \"clone.svg\", pathForCarsPics + \"pretorian.svg\", pathForCarsPics + \"hansolo.svg\", \r\n    pathForCarsPics + \"darthmaul.svg\", pathForCarsPics + \"darthvader.svg\",  pathForCarsPics + \"kyloren.svg\", pathForCarsPics + \"kyloren.svg\",\r\n    pathForCarsPics + \"lukepilot.svg\", pathForCarsPics + \"bb8.svg\", pathForCarsPics + \"falconnew.svg\",\r\n    pathForCarsPics + \"clone.svg\", pathForCarsPics + \"pretorian.svg\", pathForCarsPics + \"hansolo.svg\",\r\n    pathForCarsPics + \"sithtrooper.svg\", pathForCarsPics + \"sithtrooper.svg\", pathForCarsPics + \"rebel.svg\", pathForCarsPics + \"rebel.svg\", pathForCarsPics + \"captainphasma.svg\",pathForCarsPics + \"captainphasma.svg\"];    \r\n    \r\n    const [shownPics, setShownPics] = useState([questionPic,questionPic,questionPic,questionPic,questionPic,questionPic\r\n      ,questionPic,questionPic,questionPic,questionPic,questionPic,questionPic,\r\n      questionPic,questionPic,questionPic,questionPic,questionPic,questionPic,questionPic,questionPic,questionPic,questionPic,questionPic,questionPic]);\r\n    const [playerScores, setPlayerScores] = useState([0,0]);\r\n\r\n    //sort by default\r\n    let elementsForPics = React.useRef(elementsForPicsBeforeSorting.sort(function(a, b){return 0.5 - Math.random()}));        \r\n    const openCards = React.useRef([-1,-1]);    \r\n    let needToUpdateCountersAndReset = React.useRef(true);    \r\n    let playerScoresRef = React.useRef([0,0]);\r\n    let currentPlayer = React.useRef(1);\r\n\r\n    \r\n\r\n    function imageClicked(number){\r\n\r\n      if (shownPics[number] === questionPic){\r\n\r\n        let auxArr = [...shownPics];\r\n        needToUpdateCountersAndReset.current = true;\r\n        if (openCards.current[0] === -1){       \r\n\r\n          openCards.current[0] = number;        \r\n          auxArr[number] = elementsForPics.current[number];\r\n          setShownPics([...auxArr]);        \r\n\r\n        }else if (openCards.current[1] === -1){        \r\n          openCards.current[1] = number;\r\n          auxArr[number] = elementsForPics.current[number];        \r\n          setShownPics([...auxArr]);                \r\n        }  \r\n\r\n      }               \r\n    }\r\n\r\n    useEffect( () => {\r\n\r\n      disableBodyScroll(mainDiv.current);\r\n\r\n      if (needToUpdateCountersAndReset.current){\r\n      \r\n        //do not want to do this code again if this triggers the change state\r\n        //not ideal but good for this.\r\n        needToUpdateCountersAndReset.current = false;\r\n\r\n        let auxArr = [...shownPics];\r\n        if (openCards.current[0] !== -1 && openCards.current[1] !== -1){                                    \r\n\r\n          if (shownPics[openCards.current[0]] === shownPics[openCards.current[1]]){\r\n            //update countuers todo  \r\n\r\n            openCards.current[0] = -1;\r\n            openCards.current[1] = -1;\r\n\r\n            if (currentPlayer.current === 1){              \r\n              playerScoresRef.current = [playerScoresRef.current[0] + 1, playerScoresRef.current[1]];              \r\n            }else{              \r\n              playerScoresRef.current = [playerScoresRef.current[0] , playerScoresRef.current[1] + 1 ];    \r\n            }                  \r\n\r\n            setPlayerScores([...playerScoresRef.current]);\r\n          }else{                                           \r\n            auxArr[openCards.current[0]] = questionPic;\r\n            auxArr[openCards.current[1]] = questionPic;          \r\n            openCards.current[0] = -1;\r\n            openCards.current[1] = -1;\r\n            setTimeout( () => {            \r\n              setShownPics([...auxArr]);\r\n            }, 1000);\r\n        \r\n          }\r\n\r\n          if (currentPlayer.current === 1){  \r\n            currentPlayer.current = 2;\r\n          }else {\r\n            currentPlayer.current = 1;\r\n          }\r\n      }                \r\n    \r\n    }\r\n\r\n    //for cleanup (will unmount)\r\n    return function cleanup () {\r\n      clearAllBodyScrollLocks();\r\n    }   \r\n  \r\n  })\r\n  \r\n  function playAgain() {\r\n    setShownPics([questionPic,questionPic,questionPic,questionPic,questionPic,questionPic\r\n      ,questionPic,questionPic,questionPic,questionPic,questionPic,questionPic,\r\n      questionPic,questionPic,questionPic,questionPic,questionPic,questionPic,questionPic,questionPic,questionPic,questionPic,questionPic,questionPic]);\r\n\r\n    setPlayerScores([0,0]) ;\r\n    elementsForPics.current = elementsForPicsBeforeSorting.sort(function(a, b){return 0.5 - Math.random()});  \r\n    openCards.current[0] = -1;\r\n    openCards.current[1] = -1;\r\n    needToUpdateCountersAndReset.current = true;\r\n    playerScoresRef.current = [0,0];    \r\n  }\r\n\r\n  var containerStyle = {                         \r\n    display:\"grid\",        \r\n    gridTemplateColumns: \"repeat(6, 1fr)\",    \r\n    gridTemplateRows: \"20vh 20vh 20vh 20vh\"\r\n}\r\n\r\n  var itemStyle = {\r\n    border:\"2px solid navy\",\r\n    backgroundColor:\"lightblue\",   \r\n  }\r\n  var mainContainerSt = {\r\n    position:\"relative\",\r\n    display:\"grid\",\r\n    width:\"100vw\",\r\n    height:\"85vh\",\r\n    gridTemplateColumns: \"80vw 20vw\"    \r\n  }\r\n\r\n    return(\r\n  \r\n      \r\n      <React.Fragment>\r\n         \r\n         <div className=\"TopMarginToDealWithNavBarAll CenterMe\" ref={mainDiv}>       \r\n          <div style={mainContainerSt} > \r\n              \r\n                <div style={containerStyle}>\r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[0] } onClick= { () =>imageClicked(0) } /></div>\r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[1] } onClick= { () =>imageClicked(1)} /></div>\r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[2] } onClick= { () =>imageClicked(2) }/></div>  \r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[3] } onClick= { () =>imageClicked(3) }/></div>\r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[4] } onClick= { () =>imageClicked(4) }/></div>\r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[5] } onClick= { () =>imageClicked(5) }/></div>   \r\n\r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[6] } onClick= { () =>imageClicked(6) }/></div>  \r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[7] } onClick= { () =>imageClicked(7) }/></div>  \r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[8] } onClick= { () =>imageClicked(8) }/></div>  \r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[9] } onClick= { () =>imageClicked(9) }/></div>  \r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[10] } onClick= { () =>imageClicked(10) }/></div>  \r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[11] } onClick= { () =>imageClicked(11) }/></div>  \r\n\r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[12] } onClick= { () =>imageClicked(12) }/></div>  \r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[13] } onClick= { () =>imageClicked(13) }/></div>  \r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[14] } onClick= { () =>imageClicked(14) }/></div>  \r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[15] } onClick= { () =>imageClicked(15) }/></div>  \r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[16] } onClick= { () =>imageClicked(16) }/></div>  \r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[17] } onClick= { () =>imageClicked(17) }/></div>  \r\n\r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[18] } onClick= { () =>imageClicked(18) }/></div>  \r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[19] } onClick= { () =>imageClicked(19) }/></div>  \r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[20] } onClick= { () =>imageClicked(20) }/></div>  \r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[21] } onClick= { () =>imageClicked(21) }/></div>  \r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\" src={shownPics[22] } onClick= { () =>imageClicked(22) }/></div>  \r\n                  <div style={itemStyle}><img alt=\"car \" width=\"100%\" height=\"100%\"src={shownPics[23] } onClick= { () =>imageClicked(23) }/></div>  \r\n                \r\n              </div>\r\n\r\n              <div style={{margin:\"2px\"}}>\r\n                If 2 players, each player takes 1 turn.<br/>\r\n                {/*<h1 style={{color:\"gold\"}}>Current Player: {currentPlayer.current}</h1><br/>*/}\r\n                <h2 style={{ color:\"blue\"}}>Player 1:</h2>\r\n                 <h2 style={{ color:\"blue\"}}>{playerScores[0]}</h2>\r\n                <h2 style={{ color:\"deeppink\"}}>Player 2:</h2>\r\n                <h2 style={{ color:\"deeppink\"}}>{playerScores[1]}</h2>\r\n                <button className=\"buttonGeneral\" onClick = { () => playAgain()}>Again</button>\r\n              </div>\r\n            </div>\r\n        </div>\r\n  \r\n      </React.Fragment>)\r\n  };  \r\n  \r\n  export default MemoryCards;\r\n","import React, {useState, useEffect} from \"react\";\r\n\r\nfunction MathOperationComponent (props) {     \r\n            \r\n    let initColor =  React.useRef(\"lightblue\");\r\n    const [color, setColor] = useState(initColor);\r\n    let item = React.useRef(\"\");       \r\n    let size = React.useRef(props.size);     \r\n\r\n    item.current =  <div  style={{ width:\"100%\", height:\"100%\", background:color , fontSize:size.current  }} onClick={() => {checkForColor()}}>{props.number1} {props.operator} {props.number2} = {props.result} </div>;        \r\n    function checkForColor ()  {            \r\n               \r\n        if (props.operator === \"+\")\r\n        {\r\n            if (props.number1 + props.number2 === props.result){                \r\n                setColor(\"green\");\r\n            }else{\r\n                setColor(\"red\");                \r\n            }\r\n        }        \r\n        else if (props.operator === \"-\") {\r\n            if (props.number1 - props.number2 === props.result){\r\n                setColor(\"green\");\r\n            }else{\r\n                setColor(\"red\");\r\n            }\r\n        }\r\n        \r\n    }            \r\n\r\n    useEffect( () => {\r\n        \r\n        item.current =  <div  style={{ width:\"100%\", height:\"100%\", background:color , fontSize:size.current  }} onClick={() => {checkForColor()}}>{props.number1} {props.operator} {props.number2} = {props.result} </div>;           \r\n    },[color] )\r\n\r\n    useEffect( () => {\r\n        \r\n        item.current =  <div  style={{ width:\"100%\", height:\"100%\", background:initColor , fontSize:size.current  }} onClick={() => {checkForColor()}}>{props.number1} {props.operator} {props.number2} = {props.result} </div>;           \r\n    },[props.key] )\r\n\r\n\r\n    return(\r\n  \r\n      \r\n        <React.Fragment>\r\n          {item.current}\r\n        </React.Fragment>)\r\n    };  \r\n        \r\n\r\nexport default MathOperationComponent;","\r\nimport React, {useState, useEffect} from \"react\";\r\n//import { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\r\nimport { disableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\r\nimport { generatePathForMatrixFromStartToEnd , generateRandomNumber} from \"../../commonJS\";\r\nimport MathOperationComponent from '../../Components/MathOperationComponent';\r\n\r\n\r\nfunction AdditionMaze () {           \r\n                   \r\n    window.scroll(0,0);\r\n    \r\n    let mainDiv = React.createRef();        \r\n\r\n    //just set something up so it's not undefined.  Always have only 5*5\r\n    let mat = [];\r\n    for(var i=0; i<5; i++) {\r\n        mat[i] = [];\r\n        for(var j=0; j<5; j++) {\r\n          mat[i][j] = 0;\r\n        }\r\n    }\r\n    let valuesMatrix = React.useRef(mat);    \r\n            \r\n    function getTrueResult(){\r\n        let obj = { first : generateRandomNumber(10), second : generateRandomNumber(10),result: 0 }        ;\r\n        obj.result = obj.first + obj.second;\r\n        return obj;\r\n    }\r\n\r\n    function getFalseResult(){\r\n        let obj = { first : generateRandomNumber(10), second : generateRandomNumber(10),result: 0 }        ;\r\n        obj.result = Math.abs(obj.first + obj.second + generateRandomNumber(9)+1 );\r\n        return obj;\r\n    }\r\n\r\n\r\n    function fillMatrix(){\r\n        \r\n        let path = generatePathForMatrixFromStartToEnd(5);   \r\n\r\n        for(var x=0; x<5; x++) {            \r\n            for(var y=0; y<5; y++) {                \r\n                if (path.some( obj => obj.i === x && obj.j === y) ){                                                 \r\n                    valuesMatrix.current[x][y] = getTrueResult();\r\n                }else{                                     \r\n                    valuesMatrix.current[x][y] = getFalseResult();                    \r\n                }               \r\n            }\r\n        }                  \r\n    }    \r\n\r\n    fillMatrix();\r\n\r\n    //don't forget to include slice so the refresh works\r\n    const [row1, setRow1] = useState(valuesMatrix.current[0].slice());\r\n    const [row2, setRow2] = useState(valuesMatrix.current[1].slice());\r\n    const [row3, setRow3] = useState(valuesMatrix.current[2].slice());\r\n    const [row4, setRow4] = useState(valuesMatrix.current[3].slice());\r\n    const [row5, setRow5] = useState(valuesMatrix.current[4].slice());          \r\n\r\n    const [idkey, setIdKey] = useState(\"1\");     \r\n    \r\n   \r\n    function goAgain(){\r\n      \r\n      fillMatrix();      \r\n\r\n      setRow1(valuesMatrix.current[0].slice());\r\n      setRow2(valuesMatrix.current[1].slice());\r\n      setRow3(valuesMatrix.current[2].slice());\r\n      setRow4(valuesMatrix.current[3].slice());\r\n      setRow5(valuesMatrix.current[4].slice());\r\n\r\n     setIdKey(idkey+1);//just used to update the background on resetting\r\n      \r\n      \r\n    }\r\n\r\n    useEffect( () => {\r\n        \r\n        disableBodyScroll(mainDiv.current);\r\n        //setPlayerScores([...playerScoresRef.current]);    \r\n\r\n        //for cleanup (will unmount)\r\n        return function cleanup () {\r\n            clearAllBodyScrollLocks();\r\n        }     \r\n    })\r\n  \r\n\r\n  var containerStyle = {                         \r\n    display:\"grid\",        \r\n    gridTemplateColumns: \"repeat(5, 1fr)\",    \r\n    gridTemplateRows: \"15vh 15vh 15vh 15vh 15vh\"\r\n  }\r\n\r\n  var itemStyle = {\r\n    border:\"2px solid navy\",\r\n    backgroundColor:\"lightblue\",   \r\n  }\r\n\r\n  var itemStyleFixed = {\r\n    border:\"2px solid navy\",\r\n    backgroundColor:\"deeppink\", \r\n    color:\"white\"  ,\r\n    fontSize:\"7vh\"\r\n  }  \r\n\r\n  let itemFont = \"5vh\";\r\n\r\n  return(\r\n  \r\n      \r\n      <React.Fragment>\r\n         \r\n         <div className=\"TopMarginToDealWithNavBarAll CenterMe\" ref={mainDiv} >       \r\n                <div style={{ width:\"90%\", marginLeft:\"5%\", marginRight:\"5%\"}}>\r\n                    Click on the correct equations to move, down and right.<button className=\"buttonGeneral\" onClick={ () => goAgain()}>Go Again</button>\r\n                </div>\r\n               \r\n                <div style={containerStyle} >\r\n\r\n                  <div style={itemStyleFixed}>START</div>\r\n                  <div style={itemStyle}><MathOperationComponent number1= {row1[1].first} number2={row1[1].second} operator=\"+\" result={row1[1].result} size={itemFont} key={idkey}/></div>\r\n                  <div style={itemStyle}><MathOperationComponent number1= {row1[2].first} number2={row1[2].second} operator=\"+\" result={row1[2].result} size={itemFont} key={idkey}/></div>  \r\n                  <div style={itemStyle}><MathOperationComponent number1= {row1[3].first} number2={row1[3].second} operator=\"+\" result={row1[3].result} size={itemFont} key={idkey}/></div>\r\n                  <div style={itemStyle}><MathOperationComponent number1= {row1[4].first} number2={row1[4].second} operator=\"+\" result={row1[4].result} size={itemFont} key={idkey}/></div>\r\n                  \r\n\r\n                  <div style={itemStyle}><MathOperationComponent number1= {row2[0].first} number2={row2[0].second} operator=\"+\" result={row2[0].result} size={itemFont} key={idkey}/></div>   \r\n                  <div style={itemStyle}><MathOperationComponent number1= {row2[1].first} number2={row2[1].second} operator=\"+\" result={row2[1].result} size={itemFont} key={idkey}/></div>  \r\n                  <div style={itemStyle}><MathOperationComponent number1= {row2[2].first} number2={row2[2].second} operator=\"+\" result={row2[2].result} size={itemFont} key={idkey}/></div>  \r\n                  <div style={itemStyle}><MathOperationComponent number1= {row2[3].first} number2={row2[3].second} operator=\"+\" result={row2[3].result} size={itemFont} key={idkey}/></div>  \r\n                  <div style={itemStyle}><MathOperationComponent number1= {row2[4].first} number2={row2[4].second} operator=\"+\" result={row2[4].result} size={itemFont} key={idkey}/></div>\r\n                  \r\n\r\n                  <div style={itemStyle}><MathOperationComponent number1= {row3[0].first} number2={row3[0].second} operator=\"+\" result={row3[0].result} size={itemFont} key={idkey}/></div>   \r\n                  <div style={itemStyle}><MathOperationComponent number1= {row3[1].first} number2={row3[1].second} operator=\"+\" result={row3[1].result} size={itemFont} key={idkey}/></div>  \r\n                  <div style={itemStyle}><MathOperationComponent number1= {row3[2].first} number2={row3[2].second} operator=\"+\" result={row3[2].result} size={itemFont} key={idkey}/></div>  \r\n                  <div style={itemStyle}><MathOperationComponent number1= {row3[3].first} number2={row3[3].second} operator=\"+\" result={row3[3].result} size={itemFont} key={idkey}/></div>  \r\n                  <div style={itemStyle}><MathOperationComponent number1= {row3[4].first} number2={row3[4].second} operator=\"+\" result={row3[4].result} size={itemFont} key={idkey}/></div>\r\n                  \r\n\r\n                  <div style={itemStyle}><MathOperationComponent number1= {row4[0].first} number2={row4[0].second} operator=\"+\" result={row4[0].result} size={itemFont} key={idkey}/></div>   \r\n                  <div style={itemStyle}><MathOperationComponent number1= {row4[1].first} number2={row4[1].second} operator=\"+\" result={row4[1].result} size={itemFont} key={idkey}/></div>  \r\n                  <div style={itemStyle}><MathOperationComponent number1= {row4[2].first} number2={row4[2].second} operator=\"+\" result={row4[2].result} size={itemFont} key={idkey}/></div>  \r\n                  <div style={itemStyle}><MathOperationComponent number1= {row4[3].first} number2={row4[3].second} operator=\"+\" result={row4[3].result} size={itemFont} key={idkey}/></div>\r\n                  <div style={itemStyle}><MathOperationComponent number1= {row4[4].first} number2={row4[4].second} operator=\"+\" result={row4[4].result} size={itemFont} key={idkey}/></div>\r\n\r\n                  <div style={itemStyle}><MathOperationComponent number1= {row5[0].first} number2={row5[0].second} operator=\"+\" result={row5[0].result} size={itemFont} key={idkey}/></div>   \r\n                  <div style={itemStyle}><MathOperationComponent number1= {row5[1].first} number2={row5[1].second} operator=\"+\" result={row5[1].result} size={itemFont} key={idkey}/></div>  \r\n                  <div style={itemStyle}><MathOperationComponent number1= {row5[2].first} number2={row5[2].second} operator=\"+\" result={row5[2].result} size={itemFont} key={idkey}/></div>  \r\n                  <div style={itemStyle}><MathOperationComponent number1= {row5[3].first} number2={row5[3].second} operator=\"+\" result={row5[3].result} size={itemFont} key={idkey}/></div>  \r\n                  <div style={itemStyleFixed}>END</div>\r\n                                        \r\n                \r\n              </div>\r\n\r\n              \r\n            </div>        \r\n  \r\n      </React.Fragment>)\r\n  };  \r\n  \r\n  export default AdditionMaze;\r\n","import React from \"react\";\n\nconst CSSAnimations = () => (                  \n    \n    <React.Fragment>\n        <div className=\"TopMarginToDealWithNavBarAll\">\n            <div className=\"CenterMyBorder\">   \n\n                <h1>Transforms, transitions, animations</h1> \n                A <strong>transform</strong> is just changing the appearance of something.  A <strong>transition</strong> is a type of animation, \n                one that happens between just 2 states (start and an end).\n                For animations beyond this, we use what we call <strong>animations (with keyframes)</strong> \n                When the animation has to happen <strong>on load</strong>, even if it's a simple one, we need to use keyframes.  \n                This is just a summary to clarify the types. you can find some really cool animations in codepen:\n                 <a href=\"https://codepen.io/search/pens?q=css+animation\" target=\"_new\">https://codepen.io/search/pens?q=css+animation</a>\n\n                <br/><br/>\n\n                <h2><u>TRAMSFORMS</u></h2><br/>\n\n                    <h3>Transform - Rotate</h3>\n                \n                    Use with transform to rotate <strong> transform: rotate(15deg) </strong>or similar (you don't have to use px units)\n                \n                    <div style={ {margin: \"10px\", width:\"100px\", height:\"100px\", transform: \"rotate(15deg)\", backgroundColor: \"deeppink\" }}> Hello </div>\n\n                    <h3>Transform - translate</h3>\n                \n                    Use with transform reposition: <strong>  transform: translate(45px, 10px)</strong>or similar (you don't have to use px units)\n                \n                    <div style={ {margin: \"10px\", width:\"100px\", height:\"100px\", transform: \"translate(45px, 10px)\", backgroundColor: \"deeppink\" }}> Hello </div>\n\n                    <h3>Transform - scale</h3>\n                \n                    Use with transform to scale both axis or just X (will apply the same to both): <strong>  transform: scale(0.7, 0.5)</strong>or similar (you don't have to use px units)\n\n                    <div style={ {margin: \"10px\", width:\"100px\", height:\"100px\", transform: \"scale(0.7, 0.5)\", backgroundColor: \"deeppink\" }}> Hello </div>\n\n                    <h3>Transform - Skew</h3>\n                \n                    Use with transform to skew: <strong>   transform: skew(10deg, 15deg)</strong>or similar (you don't have to use px units)\n\n                    <div style={ {margin: \"10px\", width:\"100px\", height:\"100px\", transform: \"skew(10deg, 15deg\", backgroundColor: \"deeppink\" }}> Hello </div>\n\n                    <br/>\n\n                <h2><u>TRANSITIONS</u></h2><br/>\n\n                    These can be used when something happens, like when the user hovers over the element.  Set the transition in the element and it will do that\n                    when it changes to the hover state.<br/>\n\n                    <h3> transition: width 2s, height 2s; (Hover to see it)</h3> \n    \n                    <div className=\"transition1\"> Hello </div>\n\n                    <h3> transition: width 2s, height 2s; transition-delay:2s; (Hover to see it, but wait for the delay start)</h3> \n    \n                    <div className=\"transition2\"> Hello </div>\n\n\n                    <h3> transition: width 2s, height 2s; transition-duration:2s;  (Hover to see it)</h3> \n    \n                    <div className=\"transition3\"> Hello </div>\n\n                    <h3> transition: width 2s, height 2s; transition-timing-function:ease;  (Hover to see it)</h3> \n    \n                    Values for transition-timing-function: \n                    <ul>\n                        <li>ease (slow, fast, slow)</li>\n                        <li>linear (same speed all the way)</li>\n                        <li>ease-in (slow start)</li>\n                        <li>ease-out (slow end)</li>\n                        <li>ease-in-out (slow start and end)</li>\n                        <li>cubic-bezier(n,n,n,n) (define own values) </li>\n                    <br/></ul>   \n                    <div className=\"transition4\"> Hello </div> <br/>\n                \n                    we can combine the above in the matrix method, in the form: matrix(scaleX(),skewY(),skewX(),scaleY(),translateX(),translateY())\n                    There are similar transform methods for 3D transforms. Check w3schools. \n                \n                <br/><br/>\n\n                <h2><u>ANIMATIONS</u></h2><br/>\n\n                These happen when the page is loaded so refresh to see them again if the iteration count has been reached. <br/>\n\n                <h3>Color A to Color B</h3><br/>\n                set the keyframe:<br/>\n                @keyframes example1 {\"{\"} from {\"{\"} background-color: deeppink; {\"}\"} to {\"{\"} background-color: deepskyblue; {\"}}\"}<br/>\n                <br/>\n                Then use it in your element: <br/>\n                .classForElement {\"{\"} width: 100px; height: 10px; background-color: deeppink; animation-name: example1; animation-duration: 4s;animation-iteration-count: 5 } <br/>\n                <br/>\n                <div className=\"animation1\"> Hello </div> <br/>\n\n                <h3>various colors transitions at different intervals</h3><br/>\n                set the keyframe:<br/>\n                @keyframes example2 {\"{\"} 0% {\"{\"} background-color: deepskyblue; left: 0px; top: 0px; {\"}\"} 25% {\"{\"} \n                background-color: yellow; left: 50px; top: 0px; {\"}\"} 50% {\"{\"} background-color: blue; left: 75px; top: 0px; } \n                100% {\"{\"} background-color: green; left: 0px; top: 0px; {\"} }\"}                 <br/>\n                <br/>\n                Then use it in your element: <br/>\n                .classElement {\"{\"} width: 100px; height: 100px; background-color: deeppink; animation-name: example2; animation-duration: 8s; \n                position: relative; animation-delay: 2s; animation-iteration-count: 3; {\"}\"} <br/>\n                <br/>\n                <div className=\"animation2\"> Hello </div> <br/>\n\n                Could also set an animation-direction to one of (normal ,reverse , alternate ,alternate-reverse ). \n                Could also have animation-timing-function with values (ease , linear, ease-in, ease-out, ease-in-out, cubic-bezier(n,n,n,n)). \n                We can also have animation-fill-mode (see bellow) which sets the properties when the animation is not running (none, forwards, backwards, both).<br/>\n\n\n\n            </div>\n        </div>\n    </React.Fragment>\n)\n\nexport default CSSAnimations;\n","import React from \"react\";\n\n\nconst CSSPositioning = () => (                  \n    \n    <React.Fragment>\n        <div className=\"TopMarginToDealWithNavBarAll\">\n            <div className=\"CenterMyBorder\">   \n\n            {/* POSITION */}\n               Don't know if it's just me, but positioning things around always makes me spend more time than I should.  Let me try a summary with descriptions for \n               some concepts and images for others.\n               <br/><br/>\n\n               <strong style={{color:\"deeppink\"}}> <u>The position property:</u> </strong> With CSS we can set an element to have a positioning property, with values STATIC, RELATIVE,\n               ABSOLUTE, FIXED, STICKY.\n               <br/><br/>\n\n                <strong>STATIC (nothing to see)</strong> is the default position.  An element with this value will be positioned according to the normal flow, so nothing exciting here.\n\n                <br/><br/>\n                <strong>RELATIVE (to where I should be if I were static)</strong> will position an element <strong>relative to where it would be based on the normal flow</strong>.  To indicate the relativeness of the element,\n                we can use the top, bottom, left, and right properties (we don't need to set all).  So saying <strong>position: relative; left: 30px; </strong>will move the element\n                30px to the right (30px from the normal left position)\n\n                <br/><br/>\n                <strong>FIXED (right at this point in the viewport no matter what)</strong> will position the element <strong>relative to the viewport</strong>, always, even if the page is scrolled.  Use the same left, right, \n                top, bottom properties to set it up.\n\n                <br/><br/>\n                <strong>ABSOLUTE (where is my non static parent?)</strong> will position an element relative to the <strong>nearest positioned ancestor</strong>.  If \n                an absolute positioned element has no positioned ancestors, it uses the document body.  What is a positioned ancestor?  One that has the position property \n                set to anything other that STATIC.  If you use <strong>position: absolute;top: 80px; right: 0;</strong> you are saying, this\n                element is positioned relative to its closest ancestor which is not static, and it's positioned 80px south of that element, and aligned with \n                the end of that parent element.\n\n                <br/><br/>\n                <strong>STICKY (Oh no, I will not scroll out of view)</strong> will position the element based on the user's scroll position.  It is positioned relative until a given offset position is met in the viewport \n                <strong>position: sticky;  top: 0;</strong> will be wherever it's supposed to be (relative) until it gets to the top (top:0) and then it just sticks there\n                so it won't keep scrolling up.\n\n                <br/><br/>\n                <strong>Depth - </strong>If you want an element to be behind another one (like an image behind text), you can set it's z property : <strong>z-index: -1;</strong>  You also use \n                other numbers in the z-index if you have additional elements.\n\n                <br/><br/>\n                If there are contradicting properties, top wins over bottom, and left wins over right.\n               <br/><br/>\n\n\n                {/* FLEX CONTAINER */}\n               <strong style={{color:\"deeppink\"}}> <u>FLEX container (display) and its items:</u> </strong><br/><br/>\n                Here come some images for how to set the <strong>container of the items </strong>(when the container is flex, the items are flexible)<br/><br/>\n\n                <img src=\"/images/SoftwareNotes/display_flex_direction_1.png\" alt=\"CSS Positioning notes\" style={{width:\"99%\"}}></img>    \n                <img src=\"/images/SoftwareNotes/display_flex_direction__text_align_2.png\" alt=\"CSS Positioning notes\" style={{width:\"99%\"}}></img> \n                <img src=\"/images/SoftwareNotes/display_flex_direction__text_align_3.png\" alt=\"CSS Positioning notes\" style={{width:\"99%\"}}></img> \n                <img src=\"/images/SoftwareNotes/display_flex_direction_wrap_4.png\" alt=\"CSS Positioning notes\" style={{width:\"99%\"}}></img> \n                <img src=\"/images/SoftwareNotes/display_flex_justify_5.png\" alt=\"CSS Positioning notes\" style={{width:\"99%\"}}></img> \n                <img src=\"/images/SoftwareNotes/display_flex_align_items_6.png\" alt=\"CSS Positioning notes\" style={{width:\"99%\"}}></img> \n                <img src=\"/images/SoftwareNotes/display_flex_align_contents_7.png\" alt=\"CSS Positioning notes\" style={{width:\"99%\"}}></img> \n                \n\n                <br/><br/>\n                And here come some images for what the <strong>child elements</strong> can do.<br/><br/>\n                <img src=\"/images/SoftwareNotes/display_flex_items_order_8.png\" alt=\"CSS Positioning notes\" style={{width:\"99%\"}}></img> \n                <img src=\"/images/SoftwareNotes/display_flex_items_9.png\" alt=\"CSS Positioning notes\" style={{width:\"99%\"}}></img> \n                <img src=\"/images/SoftwareNotes/display_flex_items_flexgrow_10.png\" alt=\"CSS Positioning notes\" style={{width:\"99%\"}}></img> \n\n                {/* CSS GRID */}\n                <strong style={{color:\"deeppink\"}}> <u>CSS GRID:</u> </strong><br/><br/>\n                A grid an element (parent) with a bunch of other elements inside (items which are the children).  This containing parent \n                has to be a the type <strong>display: grid</strong> (or inline-grid)<br/>\n                The parent also has properties grid-template-columns: 40px 50px auto 50px 40px; and grid-template-rows: 50% 100px auto; to \n                determine the number of cols / rows and their width and height.  There are ways to set cols and rows more dynamically\n                so look for examples of what you need online.  Items (children) also have a few properties if you need to go beyond the basics.\n                A good explanation can be found <a target=\"_new\" href=\"https://css-tricks.com/snippets/css/complete-guide-grid/#:~:text=Animation%20%20%20%20Browser%20%20%20,not%20supported%20%E2%9D%8C%20%201%20more%20rows%20\">\n                    here</a>                \n\n\n\n            </div>\n        </div>\n    </React.Fragment>\n)\n\nexport default CSSPositioning;\n","import React  from \"react\";\n\nconst ReactNotes1 = () => (                  \n    \n    <React.Fragment>\n        <div className=\"TopMarginToDealWithNavBarAll\">\n            <div className=\"CenterMyBorder\">   \n\n               This assumes minimum familiarity with React.  It's just a bit of a summary of the basics.  A great place to test some React and see what happens\n               is <strong><a href=\"https://stackblitz.com/edit/react-ajunq2?file=index.js\" target=\"_new\">https://stackblitz.com/edit/react-ajunq2?file=index.js</a></strong>  I'll\n               add an index if this gets too long.\n               <br/><br/>\n               \n               <h1><u>How the app starts rolling:</u></h1>\n               <br/><br/>\n               You still need an <strong>index.html</strong> in your web app, which is where things will be put into.  You can set the viewport and meta etc, \n               as for a regular html file.  This HTML file should have <br/><br/>\n               <div className=\"CodeContainer\">\n               &emsp;{\"<div\"} id=\"root\" {\"></\"}div{\">\"}\n               </div>     \n               <br/><br/>\n               You will also have an <strong>index.js</strong> file.  This file can have <strong>Routing </strong>(coming later) and imports for components needed for the routing,\n               but at the very least it needs to have:\n               <div className=\"CodeContainer\">\n               &emsp; ReactDOM.render( WHATEVERWeWantToRender , document.getElementById('root'));\n               </div>     \n               If you don't have routing, the WHATEVER is usually <strong>{\"<\"}App{\"/>\"} </strong> or another main component.               \n               <br/><br/>\n\n               <h1><u>Components as classes or functions</u></h1>\n               You can create React components as <strong>classes or as functions</strong>.  You don't need to use the class form if \n               you don't need to keep state for that component.     An example of a function component would be:     \n               <div className=\"CodeContainer\">\n                    <strong>function</strong> HelloThere(props) {\"{\"} <br/>\n                    &emsp; return {\"<h1>\"}Hello There {\"</h1>\"};<br/>\n                    {\"}\"}<br/>\n                    export default HelloThere;\n               </div>\n                Now that we have the function above, we can import it and use it to be rendered.  Make sure it has the export default so just by importing the file React\n                 knows what to do (more later).  If the file were called <strong>Hello.js</strong> we would import it with \n                 <div className=\"CodeContainer\">\n                 &emsp;import Hello from './HelloOrWherever';\n                 </div>\n                 And then in the render of whatever component was using it we would just render it \n                 <div className=\"CodeContainer\">\n                    &emsp;render() {\"{\"}<br/>\n                    &emsp;&emsp;return (<br/>\n                    &emsp;&emsp;&emsp;   {\"<\"}div{\">\"}<br/>\n                    &emsp;&emsp;&emsp;&emsp; {\"<\"}Hello {\"/>\"}<br/>\n                    &emsp;&emsp;&emsp;{\"</\"}div{\">\"}\n                </div>                    \n                or in the ReactDOM.render itself\n                <div className=\"CodeContainer\">\n                    &emsp;{\"render(<Hello />, document.getElementById('root'));\"}\n                </div>\n                We could also have the same function this way:\n                <div className=\"CodeContainer\">\n                    &emsp;{\"const HelloThere = () => (  \"}<br/>\n                    &emsp;&emsp;    {\"<h1>Hello There you </h1>\"})\n                </div>\n                We could also have (props) instead of () if we are going to be getting any props.<br/><br/>\n                So how about if we were using the <strong>class way</strong> instead of the function way?  We shoulnd't in this case because there is no state, but if we were:\n                <div className=\"CodeContainer\">\n                    &emsp;{\"import React, {Component} from 'react';\"} <em>---- don't import only react, you also need Component </em><br/>\n                    &emsp;{\"class HelloThere extends Component {\"} <em>---- extend Component</em><br/>\n                    &emsp;&emsp;{\"   constructor(props){\"} <em>---- props is passed automatically, and you get a constructor</em><br/>\n                    &emsp;&emsp;&emsp;{\"      super(props);\"} <em>---- call super before you do other things in the constructor </em><br/>\n                    &emsp;&emsp;&emsp;{\"      //whatever we need to do here to set state if we are using it\"}<br/>\n                    &emsp;&emsp;{\"}\"}<br/><br/>\n                    &emsp;{\"render() {\"} <br/>\n                    &emsp;&emsp;{\"   return( \"}<br/>\n                    &emsp;&emsp;&emsp;{\"      <React.Fragment>\"}<br/>\n                    &emsp;&emsp;&emsp;&emsp;{\"         <h1>Hello There you </h1>\"}<br/>\n                    &emsp;&emsp;&emsp;{\"      </React.Fragment>\"}<br/>                    \n                    &emsp;&emsp;{\")\"}<br/>\n                    &emsp;{\"};\"} <br/>                   \n                    &emsp;{\"}\"}<br/>\n\n                    &emsp;export default HelloThere;\n                </div>\n                When creating components, we can have more than one component on the same file.  If that is the case, we can choose which component will be the \n                default one.  if we set a default component with export default whatever, when we import the file we can do it without needing to indicate\n                in curly braces.  Below we don't have a default.\n                <div className=\"CodeContainer\">\n                    &emsp;{\"class Component1 {}\" } <em>---- Some file that has more than one component</em><br/>\n                    &emsp;{\"class Component2 {}\" } <br/>\n                    <br/>\n                    &emsp; {\"export { Component1, Component2 }\"} <em>---- export both but there is no default</em><br/>\n                    &emsp; {\"import {Component1, Component2} from './components/componentsHere'\"} <em>import each component we need</em>\n                </div>\n                On this one we will have a default (we are setting component1 as the export default of the file), so see how the import is different.\n                <div className=\"CodeContainer\">\n                    &emsp; {\"import Component1ButICanRenameItAndKnowWhichOneBecauseItIsTheDefault, {Component2} from './components/componentsHere'\"} \n                </div>\n                <br/><br/>\n                <h1><u>State and Props</u></h1>\n                State is what you use to keep track of things (states) on a component.  Props are what you can pass from one component to another one, and this includes\n                a copy of the state.  Passing a state to another component doesn't give the second component access to change state.<br/>\n                If we need a component to have a state, we need to create it as a class (for now as far as these basic notes goes).<br/>\n                We can only set the state directly in the constructor of the component.  After that, we need to set it by calling SetState.\n                <div className=\"CodeContainer\">\n                    &emsp; {\"constructor() {\"}<br/>\n                    &emsp;&emsp;{\"super();\"} <br/>\n                    &emsp;&emsp;&emsp;{\"this.state = {\"}<br/>\n                    &emsp;&emsp;&emsp;&emsp;{\"name: 'React', name2:'So Cool '\"}<br/>\n                    &emsp;&emsp;{\"}};\"}<br/>\n                    &emsp;{\"}\"}<br/>\n                </div>\n\n                If somewhere else in the component we want to change the state because an onClick or whatever happened, we will do it with setState.  \n                The state may not change right away, it is async, so don't count on that on the rest of your code.  If there is something you \n                want to do AFTER the state has changed, use the callback function (second argument to setState)\n                <div className=\"CodeContainer\">\n                    &emsp; {\" this.setState( {name2: someVariableOrString}, this.someFunctionThatWillBeCalledWhenStateChanges);\"}  \n                </div>\n                to pass the state to another component, it will be passed as props to that component.\n                <div className=\"CodeContainer\">\n                    &emsp;{\"<Hello name={this.state.name} name2={this.state.name2} />  \"}<br/>\n                </div>\n                The component using it could have something as simple as this:\n                <div className=\"CodeContainer\">\n                 &emsp; {\"export default ( { name ,name2} ) => <h1>Hello {name} and {name2} !</h1>;\"}\n                </div>\n                Or it could be a function or class that takes props.\n                <div className=\"CodeContainer\">\n                    &emsp;{\"class Hello extends Component {        \"}<br/>\n                    &emsp; &emsp;{\"constructor(props)\"}<br/>\n                    &emsp; &emsp;{\" {\"}<br/>\n                    &emsp; &emsp; &emsp;{\"super(props);    \"}<br/>\n                    &emsp; &emsp; &emsp;...<br/>\n                </div>      \n                And then in Hello we can access the state values with props.name and props.name2  <br/>\n                We cannot change the state in the parent component from the child, but we can pass a function from the parent to the child, that the child\n                will call to have the parent change the state.  It would be something like this:<br/>\n                We have a component SomeComponent being used in the parent and pass to it a \n                <div className=\"CodeContainer\">\n                    &emsp; {\"<SomeComponent functionToCall= {this.thisFunctionUpdatesSomethingInTheParentAndIsInTheParent}/>\"}\n                </div>\n                The parent has that function in it and it takes an argument\n                <div className=\"CodeContainer\">\n                    &emsp;{\"thisFunctionUpdatesSomethingInTheParentAndIsInTheParent = (txt) => {  \"}<br/>\n                    &emsp;&emsp;{\"   We do something here  \"}\n                    &emsp;{\"}\"}\n                </div>\n                Then on the child component, we can have a click event that will call a function, which will call the function in the parent.\n                <div className=\"CodeContainer\">\n                    &emsp;{\"<button onClick={this.functionInChild}\"}<br/><br/>\n                    &emsp; {\"functionInChild = () => {                \"}<br/>\n                    &emsp;&emsp;{\" this.props.functionToCall(someValueWeNeedToPassBackToTheParent);\"}<br/>\n                    &emsp;{\"}\"}\n                </div>\n                When the state has changed, the component will render, but we can also call forceUpdate to make it render right away.  Calling forceUpdate before\n                the state has changed will not help.<br/>\n                We can take props in general with (props) or we can speficy the elements of props so we don't have to use props to access them in the <code className=\"\"></code>\n                <div className=\"CodeContainer\">\n                    &emsp; {\"const Hello = ( {name, name2}) => {\"}<br/>\n                    &emsp;&emsp;{\"return <h1>Hello {name} and {name2} !</h1>\"} <br/>\n                </div>\n                <div className=\"CodeContainer\">\n                    &emsp; {\"const Hello = (props) => {\"} <br/>\n                    &emsp;&emsp;{\"return <h1>Hello {props.name} and {props.name2} !</h1>\"} <br/>\n                </div>\n                If you need to change state and you need the previous state and/or props to do it, do it this way:\n                <div className=\"CodeContainer\">\n                    &emsp; {\"this.setState( (state,props) => (\"} <br/>\n                    &emsp;&emsp;{\"    {counting = state.counting + props.increment}\"} <br/>\n                    &emsp; {\"));\"}\n                    <br/>\n                    OR <br/>\n                    &emsp; {\"this.setState( function(state,props) {\"} <br/>\n                    &emsp;&emsp;{\" return {counting = state.counting + props.increment}}\"} <br/>\n                    &emsp; {\"));\"}\n                </div>\n                <br/><br/>\n                <h1><u>Props.children</u></h1>\n                this.props.children is passed to components automatically.\n                Easier seem with an example:\n                <div className=\"CodeContainer\">\n                    &emsp; {\"render() {\"}  <br/>\n                    &emsp; &emsp;{\"return (\"} <br/>\n                    &emsp; &emsp; &emsp;{\"<div>\"} <br/>\n                    &emsp; &emsp; &emsp; &emsp;{\"<Hello name={this.state.name} name2={this.state.name2}>\"} <br/>\n                    &emsp; &emsp; &emsp; &emsp; &emsp;{\"<h1>hello header</h1>\"} <em>----this will be the props.children of Hello</em><br/>\n                    &emsp; &emsp; &emsp; &emsp; &emsp;{\"<h2>hello header 2</h2>\"} <em>----this will be the props.children of Hello</em><br/>\n                    &emsp; &emsp; &emsp; &emsp;{\"</Hello>\"} <br/>\n                    <br/> <br/>\n                    &emsp; {\"const Hello = (props) => {\"}<br/>\n                    &emsp; &emsp;{\"return (   \"}<br/>\n                    &emsp; &emsp; &emsp;{\"<div> \"}<br/>\n                    &emsp; &emsp; &emsp; &emsp;{\"<h1>Hello {props.name} and {props.name2} !</h1>\"}<br/>\n                    &emsp; &emsp; &emsp; &emsp;{\"children:<br/>\"}<br/>\n                    &emsp; &emsp; &emsp; &emsp;{\"{props.children}\"} <em>----this will show all the children of Hello above (both h1 and h2)</em><br/>\n                    &emsp;&emsp;&emsp;{\"</div>\"}<br/>\n                    &emsp;&emsp;{\")\"}      <br/>              \n                </div>            \n\n                <br/><br/>\n                <h1><u>Binding Functions</u></h1>\n                When we create a function in react which is not an arrow function, we have to bind it so we don't get an error.  We do this in the constructor, and we \n                would do something like this:\n                <div className=\"CodeContainer\">\n                    &emsp; {\"this.handleSomething = this.handleSomething.bind(this);\"} <br/>\n                </div>\n                Using an arrow function instead saves us from having to remember to bind it.  However, if we have a lot going on, we may get into performance issues.\n                <div className=\"CodeContainer\">\n                    &emsp;{\"onClick = { (e) => this.deleteRow(id,e)}...\"} <br/>\n                    &emsp;{\"onClick = { this.deleteRow.bind(this,id)}...\"}\n                </div>\n\n                <br/><br/>\n                <h1><u>Some minor additions</u></h1>\n                If you want to force a component to be rerendered, even though given what's changed React doesn't think it needs to be rerendered, give it\n                a key and it will be rerendered if the key changes.\n                <div className=\"CodeContainer\">\n                    &emsp;{\"<Component key={this.state.selectedLetter}/>\"}\n                </div>\n                You can have a variable used to display something, so whatever is rendered depends on something else.  Have the variable between {} in the return,\n                set it to whatever you need somewhere else in the code.  This include styling.\n                \n            </div>\n        </div>\n    </React.Fragment>\n)\n\nexport default ReactNotes1;\n","import React, {Component} from \"react\";\r\n\r\nclass  ReadBackwards extends Component {\r\n  //add radiot buttons for other options since rss may stop working soon, since other rss don't authorize.  Maybe an API for twitter or news.\r\n  constructor(){\r\n    super();               \r\n    this.state = { url:\"https://rss.nytimes.com/services/xml/rss/nyt/HomePage.xml\",titleDesc:[] }        \r\n       \r\n    this.getRssFeed();    \r\n    }\r\n       \r\n    async getRssFeed(){         \r\n      let url = this.state.url;         \r\n      let response = await fetch(url);      \r\n      let xmlText = \"\";   \r\n      var xmlDoc = \"\"      \r\n                  \r\n      xmlText = await response.text();      \r\n      var parser = new DOMParser();\r\n      xmlDoc = parser.parseFromString(xmlText, \"text/xml\");                 \r\n      \r\n      let arrayOfNews = [];            \r\n      for (var i=0; i< 20; i++){    \r\n        let obj = {title:\"\", desc:\"\"};    \r\n        try{\r\n          obj.title = xmlDoc.getElementsByTagName(\"title\")[i].childNodes[0].nodeValue;\r\n          obj.desc = xmlDoc.getElementsByTagName(\"description\")[i].childNodes[0].nodeValue;          \r\n        }catch{          \r\n          obj.title = \"\";\r\n          obj.desc = \"\";\r\n        }\r\n        arrayOfNews.push(obj);\r\n      }            \r\n      this.setState( {titleDesc:arrayOfNews} )      \r\n    }\r\n   \r\n    render() {      \r\n      var revStyleTitle = {              \r\n        transform: \"scale(-1, 1)\",\r\n        color:\"deeppink\",\r\n        fontFamily:\"Times New Roman\",               \r\n        fontSize: \"50px\",\r\n        \r\n      };\r\n      var revStyleDesc = {        \r\n        transform: \"scale(-1, 1)\",\r\n        fontFamily:\"Arial\",            \r\n        fontSize: \"40px\",       \r\n      };\r\n      var revStyleOrig = {                \r\n        fontFamily:\"Times New Roman\",            \r\n        fontSize: \"15px\",       \r\n        color:\"green\"\r\n      };\r\n      return(        \r\n      <React.Fragment>\r\n         <div className=\"TopMarginToDealWithNavBarAll\">\r\n            <div className=\"CenterMyBorder\" >\r\n                <strong>Reading backwards is good for you!</strong><br/>\r\n                Direction is right to left and the letters are rotated. <br/> I chose the NYT feed because it works and I didn't want to call an API that needs a key,\r\n                which is pretty much all of them.  It this feed stops working then I'll think of something else.\r\n                <br/><br/>     \r\n                \r\n                <span style={revStyleOrig}>{this.state.url}</span>\r\n                {this.state.titleDesc.map( (obj, index) =>  \r\n                        <div key={index}>\r\n                          <div style={revStyleTitle}>{obj.title}</div>  \r\n                          <div style={revStyleOrig}>{obj.title}</div>          \r\n                          <div style={revStyleDesc}>{obj.desc}</div>\r\n                          <div style={revStyleOrig}>{obj.desc}</div>\r\n                          <hr/>\r\n                          <br/>\r\n                        </div>                \r\n                                          \r\n                )};                   \r\n            </div>\r\n        \r\n        </div>\r\n      </React.Fragment>)\r\n  };\r\n}\r\n\r\nexport default ReadBackwards;\r\n\r\n","import React, {Component} from \"react\";\r\n\r\nclass  RemoveDupPics extends Component {\r\n  \r\n  constructor(){\r\n                       \r\n    }           \r\n   \r\n    componentDidMount () {\r\n        window.scrollTo(0, 0)\r\n    }\r\n    render() {   \r\n        \r\n        const pathPic = process.env.REACT_APP_FOR_PATH_FOR_PICS;        \r\n      return(        \r\n      <React.Fragment>\r\n         <div className=\"TopMarginToDealWithNavBarAll\">\r\n            <div className=\"CenterMyBorder\" >\r\n                I got tired of seeing some of my pictures backed up in a million folders, so I decided to create a small C# tool to identify the duplicates.  Just adding \r\n                here.  Not super fast, but it got the job done. <br/>\r\n\r\n                <img src={pathPic + \"/images/softwareNotes/findduplicates.png\"} alt=\"find duplicates screenshot\"/><br/>\r\n\r\n                These are the parts of the code that were more interesting<br/>\r\n\r\n                To enter the folders to search I used a regular textbox and a regular button.  For both buttons, call another method:\r\n\r\n                <div className=\"CodeContainer\">\r\n                private void button1_Click(object sender, EventArgs e) {\"{\"} <br/> \r\n                    &emsp; this.buttonSelectClick(FolderOption.one);<br/>\r\n                {\"}\"}<br/><br/>\r\n                private void buttonSelectClick(FolderOption op)\r\n                {\"{\"}<br/>\r\n                &emsp;using (var fbd = new FolderBrowserDialog())<br/>\r\n                &emsp;{\"{\"}<br/>\r\n                &emsp;&emsp;DialogResult result = fbd.ShowDialog();<br/>\r\n                &emsp;&emsp;if (result == DialogResult.OK && !string.IsNullOrWhiteSpace(fbd.SelectedPath))<br/>\r\n                &emsp;&emsp;{\"{\"}<br/>\r\n                &emsp;&emsp;&emsp;if (op == FolderOption.one)<br/>\r\n                &emsp;&emsp;&emsp;{\"{\"}<br/>\r\n                &emsp;&emsp;&emsp;&emsp;this.textBox1.Text = fbd.SelectedPath;   <br/>\r\n                ...<br/>\r\n               </div>                    \r\n            \r\n                There are some checks in the code for data validation but nothing interesting there.  To display the duplicates pictures I used <strong>FlowLayoutPanels.</strong>\r\n                I cleared the contents before adding pictures to them.\r\n                <div className=\"CodeContainer\">\r\n                this.flowLayoutPanel3.Controls.Clear();\r\n                </div>\r\n                To find the list of files in a directory, I used this (the second argument being the type of file):\r\n                <div className=\"CodeContainer\">\r\n                Directory.GetFiles(path1, this.textBox3.Text)\r\n                </div>\r\n\r\n                I wanted to get the names of the duplicates on the same list, so created this method to find them.  The getImageForFile in the code below is \r\n                just doing: Bitmap image = new Bitmap(filename);\r\n\r\n                <div className=\"CodeContainer\">\r\n                private List{\"<DuplicatePicNames>\"} findDuplicatePics(string[] originalArray1, string[] originalArray2)<br/>\r\n                {\"{\"}<br/>\r\n                    &emsp;//use a progress bar to show that things are happening.<br/>\r\n                &emsp;this.progressBar1.Maximum = originalArray1.Count() * originalArray2.Count();<br/>\r\n                &emsp;this.progressBar1.Value = 1;<br/>\r\n                &emsp;this.progressBar1.Step = 1;<br/>\r\n                &emsp;foreach (string filenameMain in originalArray1)<br/>\r\n                &emsp;{\"{\"}<br/>\r\n                &emsp;&emsp;//use the using so memory doesn't run out<br/>\r\n                &emsp;&emsp;using (imageMain = getImageForFile(filenameMain) )<br/>\r\n                &emsp;&emsp;...//need to compare each filename in array 1 with each one in array2.<br/>\r\n                &emsp;&emsp;...//compare the sizes first (width and height) because if they are not the same you know the pics are not the same.<br/>\r\n                &emsp;&emsp;...//tried to use ImageComparer but was not lucky with that, so see how I compared the images below in the other section.<br/>\r\n                &emsp;&emsp;...//set an imagesAreDifferent boolean to true as soon as you know they are different.  If at the end of the comparison the images are not different\r\n                , add them to the new list.  They will be returned as part of the list by the method.\r\n                </div>\r\n\r\n                In the method above, the code that I used to compare the images (outside of comparing sizes) is this:\r\n\r\n                <div className=\"CodeContainer\">\r\n                    {\"for (int i = 0; i < imageMain.Width; i}\"}<br/>\r\n                    {\"{\"}<br/>\r\n                    &emsp;{\"for (int j = 0; j < imageMain.Height; j++)\"}<br/>\r\n                    &emsp;{\"{\"}<br/>\r\n                    &emsp;&emsp;imgMain_ref = imageMain.GetPixel(i, j).ToString();<br/>\r\n                    &emsp;&emsp;imgAux_ref = imageAux.GetPixel(i, j).ToString();<br/>                                    \r\n                    &emsp;&emsp;if (imgMain_ref != imgAux_ref)<br/>\r\n                    &emsp;&emsp;{\"{\"}<br/>\r\n                    &emsp;&emsp;&emsp;imageIsDifferent = true;<br/>\r\n                    &emsp;&emsp;&emsp;break;<br/>\r\n                    &emsp;&emsp;{\"}\"}<br/>\r\n                    &emsp;{\"}\"}<br/>\r\n                    {\"}\"}<br/>\r\n                </div>\r\n\r\n                Once you have the duplicate names in the list of duplicates, this is how you can put them in the screen.  Using the usings and creating a new tmp picture is \r\n                important so you don't get the memory to run out, and so you don't lock the pictures while you have them up since you need to go to the \r\n                original folders to delete them if needed.\r\n\r\n                <div className=\"CodeContainer\">\r\n                {\"...\"}<br/>\r\n                {\"foreach (DuplicatePicNames dup in duplicatesNamesList)\"}<br/>\r\n                {\"...\"}<br/>\r\n                &emsp;PictureBox pic = new PictureBox();<br/>\r\n                &emsp;using (tmp = new Bitmap(dup.nameInFolder1))<br/>\r\n                &emsp;&emsp;pic.Image = new Bitmap(tmp);<br/>\r\n                &emsp;pic.ClientSize = new Size(100, 100);  <br/>  \r\n                &emsp;pic.SizeMode = PictureBoxSizeMode.Zoom;<br/>\r\n                &emsp;pic.Name = dup.nameInFolder1;<br/>\r\n                &emsp;<strong>pic.Parent = this.flowLayoutPanel1;</strong><br/>\r\n                &emsp;pic = new PictureBox();<br/>\r\n                &emsp;using (tmp = new Bitmap(dup.nameInFolder2))<br/>\r\n                &emsp;&emsp;pic.Image = new Bitmap(tmp);<br/>\r\n                &emsp;pic.ClientSize = new Size(100, 100);    <br/>                       \r\n                &emsp;pic.SizeMode = PictureBoxSizeMode.Zoom;<br/>\r\n                &emsp;pic.Name = dup.nameInFolder2;<br/>\r\n                &emsp; <strong>pic.Parent = this.flowLayoutPanel3;</strong>\r\n                </div>\r\n\r\n                And that's it.  Not super cool, but it worked.  Comparing pictures is not very fast though, but this was faster than me doing it myself.\r\n            </div>\r\n        </div>\r\n      </React.Fragment>)\r\n  };\r\n}\r\n\r\nexport default RemoveDupPics;\r\n\r\n","import React from \"react\";\r\n\r\nconst Chinese =(props) => {\r\n\r\n    var styleCont = {\r\n        display:\"flex\",\r\n        flexDirection: \"row\",\r\n        textAlign: \"center\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent:\"center\",\r\n        alignItems: \"center\"  ,\r\n        marginTop:\"12vh\"\r\n    }\r\n    var styleSymbol = {\r\n        fontSize:\"4vw\",\r\n        color:\"deeppink\"\r\n    }    \r\n    var styleSymTrans = {\r\n        border:\"2px solid navy\",\r\n        margin:\"3px\",\r\n        padding:\"5px\"\r\n    }    \r\n    var symbolsArray =[{sym:\"中国\", trans:\"China\", read:\"Zhōngguó\"}, {sym:\"一\", trans:\"One\", read:\"Yī\"}, {sym:\"二\", trans:\"Two\", read:\"Èr\"},{sym:\"三\", trans:\"Three\", read:\"Sān\"},\r\n                        {sym:\"四\", trans:\"Four\", read:\"Sì\"}, {sym:\"五\", trans:\"Five\", read:\"Wǔ\"},{sym:\"六\", trans:\"Six\", read:\"Liù\"}, {sym:\"七\", trans:\"Seven\", read:\"Qī\"},\r\n                        {sym:\"八\", trans:\"Eight\", read:\"Bā\"}, {sym:\"九\", trans:\"Nine\", read:\"Jiǔ\"}, {sym:\"十\", trans:\"Ten\", read:\"Shí\"},\r\n                        {sym:\"人\", trans:\"person\", read:\"Rén\"}, {sym:\"夫\",trans:\"husband\",read:\"Fū\"}, {sym:\"入口\",trans:\"entrance\",read:\"Rùkǒu\"},\r\n                        {sym:\"出口\",trans:\"exit\",read:\"Chūkǒu\"}, {sym:\"出\",trans:\"out\",read:\"Chū\"}, {sym:\"火\", trans:\"fire\", read:\"Huǒ\" }, {sym:\"厕所\", trans:\"toilet\", read:\"Cèsuǒ\"},\r\n                        {sym:\"餐饮\", trans:\"food\", read:\"Cānyǐn\"}, {sym:\"警察\", trans:\"police\", read:\"Jǐngchá\"}, {sym:\"请\", trans:\"please\", read:\"Qǐng\"},\r\n                        {sym:\"你\", trans:\"you\", read:\"Nǐ\"}, {sym:\"名\", trans:\"name\", read:\"Míng\"}, {sym:\"是\", trans:\"yes\", read:\"Shì\"}, {sym:\"大\", trans:\"big/great\", read:\"Dà\"}\r\n    ];\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <div style={styleCont} className=\"TopMarginToDealWithNavBar\">   \r\n               \r\n                {symbolsArray.map( (item, index) =>   \r\n                    <div style={styleSymTrans} key={index}>                           \r\n                        <span  style={styleSymbol}>{item.sym}</span><br/>         \r\n                        <span style={{fontWeight:\"bold\"}}>{item.trans}</span>  <br/>  \r\n                        <hr/>\r\n                        <span>{item.read}</span>        \r\n                    </div>                  \r\n                )}\r\n            </div>\r\n        </React.Fragment>\r\n        )\r\n}\r\nexport default Chinese;\r\n","import React from \"react\";\r\nimport LandingPageCardComponent from \"./LandingPageCardComponent\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nfunction kindergartenMath () {\r\n               \r\n        window.scroll(0,0);\r\n        \r\n        return(\r\n    \r\n        <React.Fragment>            \r\n            \r\n            <div className=\"TopMarginToDealWithNavBarAll\">\r\n                <Container fluid style={{background:\"radial-gradient(deepskyblue, white)\" }}>\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <LandingPageCardComponent topic = \"/Counting\" imageSrc = \"/images/MainItemCardImages/Counting.svg\" borderColorClass= \"cardDivAll\"\r\n                                 text=\"Click up or down to form 2 digit numbers\"/>    \r\n                            </Col>\r\n                            <Col sm={6}>\r\n                                <LandingPageCardComponent topic = \"/PlusOnePlusZero\" imageSrc = \"/images/MainItemCardImages/PlusOnePlusZero.svg\" borderColorClass= \"cardDivAll\"\r\n                                text=\"Solve the additions\"/>     \r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <LandingPageCardComponent topic = \"/Subtraction\" imageSrc = \"/images/MainItemCardImages/Subtraction.svg\" borderColorClass= \"cardDivAll\"\r\n                                text=\"Solve the subtraction.  Use the number line if needed\"/>    \r\n                            </Col>\r\n                            <Col sm={6}>\r\n                                <LandingPageCardComponent topic = \"/NumberBonds\" imageSrc = \"/images/MainItemCardImages/NumberBonds.svg\" borderColorClass= \"cardDivAll\"\r\n                                text=\"How many do you need to make N?\"/>      \r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <LandingPageCardComponent topic = \"/PlusOrMinus\" imageSrc = \"/images/MainItemCardImages/PlusOrMinus.svg\" borderColorClass= \"cardDivAll\"\r\n                                text=\"Solve word problems\"/>   \r\n                            </Col>\r\n                            <Col sm={6}>\r\n                                <LandingPageCardComponent topic = \"/Sorting\" imageSrc = \"/images/MainItemCardImages/Sorting.svg\" borderColorClass= \"cardDivAll\"\r\n                                text=\"Sort, then check your answer\"/>      \r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <LandingPageCardComponent topic = \"/ModelingTens\" imageSrc = \"/images/MainItemCardImages/ModelingTens.svg\" borderColorClass= \"cardDivAll\"\r\n                                text=\"Modeling Tens and Ones\"/>          \r\n                            </Col>\r\n                            <Col sm={6}>\r\n                                <LandingPageCardComponent topic = \"/NextNumber\" imageSrc = \"/images/MainItemCardImages/NextNumber.svg\" borderColorClass= \"cardDivAll\"\r\n                                text=\"What number comes next? and +10?\"/>    \r\n                            </Col>\r\n                        </Row>\r\n                </Container>\r\n                                                                                          \r\n                    {/*the component already has the cardDiv class, send only the one that sets the color: cardDivAll, cardDivLang}  TODO use better names for the color class*/}                                                                                                                    \r\n\r\n                   \r\n                    {/*<LandingPageCardComponent topic = \"/greaterLessEqual\" imageSrc = \"/images/MainItemCardImages/GreaterLessEqual.svg\" borderColorClass= \"cardDivMath\"\r\n                    text=\"Click to shuffle for greater, less or equal and win\"/>  \r\n                    \r\n                    {*/}\r\n                                                                                                            \r\n                </div>               \r\n            <br/>\r\n        </React.Fragment>\r\n        )\r\n};\r\n\r\n\r\nexport default kindergartenMath;","import React from \"react\";\r\nimport LandingPageCardComponent from \"./LandingPageCardComponent\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col'\r\n\r\n\r\nfunction kindergartenLang () {\r\n               \r\n        window.scroll(0,0);\r\n        \r\n        return(\r\n    \r\n        <React.Fragment>            \r\n            \r\n            <div className=\"TopMarginToDealWithNavBarAll\">\r\n                    <Container fluid style={{background:\"radial-gradient(red, white)\" }}>\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <LandingPageCardComponent topic = \"/CanvasTrace\" imageSrc = \"/images/MainItemCardImages/CanvasTrace.svg\" borderColorClass= \"cardDivAll\"\r\n                                text=\"Enter your own text to trace\"/>     \r\n                            </Col>\r\n                            <Col sm={6}>\r\n                                <LandingPageCardComponent topic = \"/bdpq\" imageSrc = \"/images/MainItemCardImages/pdbq.svg\" borderColorClass= \"cardDivAll\" \r\n                                text=\"Get a word and identify its starting letter (b p q d)\"/>     \r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <LandingPageCardComponent topic = \"/bdpqCircles\" imageSrc = \"/images/MainItemCardImages/pdbqCircles.svg\" borderColorClass= \"cardDivAll\"\r\n                                text=\"Choose to find the p-b-d-q and find them\"/>      \r\n                            </Col>\r\n                            <Col sm={6}>\r\n                                <LandingPageCardComponent topic = \"/mnwCircles\" imageSrc = \"/images/MainItemCardImages/mnwCircles.svg\" borderColorClass= \"cardDivAll\"\r\n                                 text=\"Choose to find the m-n-w and find them\"/>     \r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <LandingPageCardComponent topic = \"/ThreeLetterWordSounds\" imageSrc = \"/images/MainItemCardImages/3LetterWordSounds.svg\" borderColorClass= \"cardDivAll\"\r\n                                text=\"Click square to get a letter in a 3 letter word and read\"/>   \r\n                            </Col>\r\n                            <Col sm={6}>\r\n                                <LandingPageCardComponent topic = \"/Prefixsuffix\" imageSrc = \"/images/MainItemCardImages/Prefixsuffix.svg\" borderColorClass= \"cardDivAll\"\r\n                                 text=\"See the root and add the prefix or suffix\"/>       \r\n                            </Col>\r\n                        </Row>\r\n                    </Container>               \r\n                </div>               \r\n            <br/>\r\n        </React.Fragment>\r\n        )\r\n};\r\n\r\n\r\nexport default kindergartenLang;","import React from \"react\";\r\nimport LandingPageCardComponent , {LandingPageCardComponentForHref} from \"./LandingPageCardComponent\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col'\r\n\r\n\r\nfunction PersonalInterestsSections () {\r\n            \r\n        window.scrollTo(0,0);\r\n        return(\r\n    \r\n        <React.Fragment>            \r\n            \r\n            <div className=\"TopMarginToDealWithNavBarAll\">\r\n                <div className=\"CenterMyBorder\" style={{border:\"0px\"}}>\r\n                    I am a software dev though not working at the moment.  Want to get back to work at some point because I really enjoy it.  \r\n                    Meanwhile I'm doing a few things here and there, some of them not programming related.\r\n                </div>\r\n                <Container fluid style={{background:\"radial-gradient(deeppink, white)\" }}>\r\n                    <Row>\r\n                        <Col sm={6}>\r\n                            <LandingPageCardComponentForHref href = \"https://www.amazon.com/dp/B092V2CRNF/ref=cm_sw_em_r_mt_dp_5VRHWY06VPRX9RT2QNZ2\" \r\n                                fullPath = {process.env.REACT_APP_FOR_PATH_FOR_PICS + \"/images/howdidyougetme.jpg\"} borderColorClass= \"cardDivAll\"                  \r\n                            text=\"I wrote about an Adoption story - bilingual (Amazon)\"/>  \r\n                        </Col>\r\n                        <Col sm={6}>\r\n                            <LandingPageCardComponentForHref href = \"https://www.amazon.com/dp/B08JF5KNK8/ref=cm_sw_em_r_mt_dp_KJKC4PN7CP3HR4Z33DJR\" \r\n                            fullPath = {process.env.REACT_APP_FOR_PATH_FOR_PICS + \"/images/jonandhismomtalkabout.jpg\"}borderColorClass= \"cardDivAll\"                  \r\n                            text=\"I wrote about a Kid and mom's talks (Amazon)\"/>  \r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col sm={6}>\r\n                            <LandingPageCardComponentForHref href = \"https://www.freecodecamp.org/espanol/news/author/gemma/\" fullPath = {process.env.REACT_APP_FOR_PATH_FOR_PICS + \"/images/pencils.jpg\"} \r\n                            borderColorClass= \"cardDivAll\"                  \r\n                                text=\"Translations of articles for freeCodeCamp\"/>  \r\n                        </Col>\r\n                        <Col sm={6}>\r\n                            <LandingPageCardComponentForHref href = \"https://gmfuster.medium.com/\" fullPath = {process.env.REACT_APP_FOR_PATH_FOR_PICS + \"/images/mediumLogo.png\"} \r\n                            borderColorClass= \"cardDivAll\"                  \r\n                                text=\"Some Medium articles\"/>  \r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col sm={6}>\r\n                            <LandingPageCardComponent topic = \"/ReadBackwards\" imageSrc = \"/images/MainItemCardImages/readBackwards.svg\" borderColorClass= \"cardDivAll\"                  \r\n                            text=\"Reading backwards is good exercise.\"/>   \r\n                        </Col>\r\n                        <Col sm={6}>\r\n                        \r\n                        </Col>\r\n                    </Row>\r\n                </Container>                                \r\n                \r\n            </div>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default PersonalInterestsSections;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Route, HashRouter as Router, Switch} from 'react-router-dom';\r\n\r\nimport './index.css';\r\n\r\nimport LandingPage from \"./LandingPage\";\r\nimport NavBar from \"./Components/NavBar.js\";\r\n\r\n\r\n//additional pages\r\nimport bdpq from \"./Views/KidsActivities/bdpq\";\r\nimport bdpqCircles from \"./Views/KidsActivities/bdpqCircles\";\r\nimport mnwCircles from \"./Views/KidsActivities/mnwCircles\";\r\nimport CanvasTrace from \"./Views/KidsActivities/CanvasTrace\";\r\nimport GreaterLessEqual from \"./Views/KidsActivities/greaterLessEqual\";\r\nimport NumberBonds from \"./Views/KidsActivities/NumberBonds\";\r\nimport FillSquares from \"./Views/KidsActivities/FillSquares\";\r\nimport PlusOrMinus from \"./Views/KidsActivities/PlusOrMinus\";\r\nimport Sorting from \"./Views/KidsActivities/SortingNoDnD\";\r\nimport Prefixsuffix from \"./Views/KidsActivities/Prefixsuffix\";\r\nimport ThreeLetterWordSounds from \"./Views/KidsActivities/3LetterWordSounds\";\r\nimport PlusOnePlusZero from \"./Views/KidsActivities/PlusOnePlusZero\";\r\nimport Subtraction from \"./Views/KidsActivities/Subtraction\";\r\nimport Counting from \"./Views/KidsActivities/Counting\";\r\nimport MinorPrintables from \"./Views/KidsActivities/minorPrintables\";\r\nimport ModelingTens from \"./Views/KidsActivities/ModelingTens\";\r\nimport NextNumber from \"./Views/KidsActivities/NextNumber\";\r\n\r\n\r\nimport SpinStarWarsCars from \"./Views/Games/SpinStarWarsCars\";\r\nimport SpinShapes from \"./Views/Games/SpinShapes\";\r\nimport MemoryCards from \"./Views/Games/MemoryCards\";\r\nimport AdditionMaze from \"./Views/Games/AdditionMaze\";\r\n//import Freeze from \"./Views/Games/Freeze\";\r\n\r\n\r\nimport CSSAnimations from \"./Views/SoftwareNotes/cssanimations\";\r\nimport CSSPositioning from \"./Views/SoftwareNotes/csspositioning\";\r\nimport ReactNotes1 from \"./Views/SoftwareNotes/reactnotes1\";\r\n\r\nimport ReadBackwards from \"./Views/PersonalInterests/ReadBackwards\";\r\nimport RemoveDupPics from \"./Views/PersonalInterests/RemoveDupPics\";\r\nimport Chinese from \"./Views/PersonalInterests/Chinese\";\r\n\r\nimport kindergartenMath from \"./Components/KindergartenMath\";\r\nimport kindergartenLang from \"./Components/KindergartenLang\";\r\nimport PersonalInterestsSection from \"./Components/PersonalInterestsSections\";\r\nimport GamesAndPDFs from './Components/GamesAndPDFs';\r\n\r\n\r\nconst routing = (\r\n    <React.Fragment>   \r\n        <div className=\"fragmentContainer\"> {/*use for some styling only*/}\r\n        \r\n                                  \r\n\r\n         <Router baseline=\"/\">\r\n            <div>\r\n                <NavBar/> \r\n                <Switch>\r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/\"} component={LandingPage}/>\r\n\r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/kindergartenMath\"} component={kindergartenMath}/>\r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/kindergartenLang\"} component={kindergartenLang}/>\r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/PersonalInterestsSection\"} component={PersonalInterestsSection}/>\r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/GamesAndPDFs\"} component={GamesAndPDFs}/>  \r\n\r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/bdpq\"} component={bdpq}/>\r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/bdpqCircles\"} component={bdpqCircles}/>\r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/mnwCircles\"} component={mnwCircles}/> \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/CanvasTrace\"} component={CanvasTrace}/>                      \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/GreaterLessEqual\"} component={GreaterLessEqual}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/threeLetterWordSounds\"} component={ThreeLetterWordSounds}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/PlusOnePlusZero\"} component={PlusOnePlusZero}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/Subtraction\"} component={Subtraction}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/Counting\"} component={Counting}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/NumberBonds\"} component={NumberBonds}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/FillSquares\"} component={FillSquares}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/PlusOrMinus\"} component={PlusOrMinus}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/Sorting\"} component={Sorting}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/ModelingTens\"} component={ModelingTens}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/Prefixsuffix\"} component={Prefixsuffix}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/NextNumber\"} component={NextNumber}/>  \r\n\r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/MinorPrintables\"} component={MinorPrintables}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/SpinStarWarsCars\"} component={SpinStarWarsCars}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/SpinShapes\"} component={SpinShapes}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/MemoryCards\"} component={MemoryCards}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/AdditionMaze\"} component={AdditionMaze}/>\r\n                    {/*<Route exact path = {process.env.REACT_APP_FOR_PATH + \"/Freeze\"} component={Freeze}/>  */}\r\n                    \r\n\r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/CSSAnimations\"} component={CSSAnimations}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/CSSPositioning\"} component={CSSPositioning}/>  \r\n                    <Route exact path ={process.env.REACT_APP_FOR_PATH + \"/ReactNotes1\"} component={ReactNotes1}/>  \r\n                    \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/ReadBackwards\"} component={ReadBackwards}/>                      \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/RemoveDupPics\"} component={RemoveDupPics}/>      \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/Chinese\"} component={Chinese}/>                  \r\n                    \r\n                </Switch>    \r\n\r\n                  \r\n            </div>\r\n        </Router> \r\n        \r\n        </div>   \r\n    </React.Fragment>\r\n    \r\n)\r\n\r\nReactDOM.render(           \r\n        routing ,      \r\n    document.getElementById('root'));\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}