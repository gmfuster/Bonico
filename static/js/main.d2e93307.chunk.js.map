{"version":3,"sources":["LandingPage.js","Components/MainImage.jsx","Components/DescriptionSections.jsx","Components/KidsSections.jsx","Components/PersonalInterestsSections.jsx","Components/Books.jsx","Components/NavBar.js","Views/KidsActivities/bdpq.jsx","Components/LetterCircle.component.jsx","Components/LetterCircleList.component.jsx","Views/KidsActivities/bdpqCircles.jsx","Views/KidsActivities/mnwCircles.jsx","Components/TextFieldWithButton.jsx","Views/KidsActivities/CanvasTrace.jsx","Components/ShuffleCardsAndShow.jsx","Views/KidsActivities/greaterLessEqual.jsx","Views/KidsActivities/3LetterWordSounds.jsx","Views/KidsActivities/BeginEndSounds.jsx","Views/KidsActivities/3LetterRhymes.jsx","Views/KidsActivities/PlusOnePlusZero.jsx","Views/KidsActivities/minorPrintables.jsx","Views/SoftwareNotes/cssanimations.jsx","Views/SoftwareNotes/csspositioning.jsx","Views/SoftwareNotes/reactnotes1.jsx","Views/PersonalInterests/ReadBackwards.jsx","index.js"],"names":["LandingPage","Component","Fragment","NavBar","Navbar","bg","variant","fixed","expand","Toggle","aria-controls","Collapse","id","Nav","className","Link","href","style","borderRight","borderLeft","border","padding","borderRadius","bdpq","generateRandomNumber","Math","floor","random","state","words","length","getAWordFromArray","refToCorrectImage","current","visibility","refToIncorrectImage","index","word","selectedWord","setState","clickLetter","l","React","createRef","title","onClick","this","src","ref","substr","LetterCircle","props","setColor","letter","targetLetter","backgroundColor","functionToCallBack","button","LetterCircleList","checkIfAllHaveBeenFound","numberOfLettersFound","numberPerLetter","alert","theList","newList","letterGroup","i","push","value","allDone","theListCopy","newItem","find","it","splice","color","map","circle","key","bdpqCircles","checkedLetter","s","selectedLetter","type","name","onChange","htmlFor","mnwCircles","forceUpdateNow","forceUpdate","TextFieldWithButton","sendTheText","functionToCall","refToInput","sendTheTextBlank","placeholder","textForInput","textForButton","CanvasTrace","canvasX","canvasY","touchX","touchY","handleResize","getCanvasPosition","refToCanvas","width","clientWidth","height","clientHeight","GetOffset","object","offset","x","offsetLeft","y","offsetTop","offsetParent","GetScrolled","scrolled","scrollLeft","scrollTop","tagName","toLowerCase","parentNode","getTouchPosition","e","canvas","touches","touch","pageX","pageY","drawDot","ctx","fillStyle","beginPath","fillRect","closePath","fill","updateCanvas","txt","textForCanvas","setCanvasText","getContext","clearRect","fonts","round","font","measureText","strokeText","canvasTouchStart","preventDefault","canvasTouchMove","printTheText","newWindow","window","open","linkF","document","createElement","rel","body","appendChild","sheet","innerHTML","sheet2","desc","p","brp","br","console","log","addEventListener","passive","ShuffleCardsAndShow","componentDidMount","refToDiv","animationEnded","roll","maxNumber","elementsForCard","animationAndDisplay","numberSelected","undefined","callbackFunction","cardStyle","background","myColor","fontFamily","fontSize","myFont","myWidth","myHeight","GreaterLessEqual","getNewResults","refs","childPlayer1","childPlayer2","childComparison","elementsForCardNumbersPlayers","textAlign","display","flexDirection","justifyContent","alignItems","marginRight","marginTop","marginLeft","ThreeLetterWordSounds","getLetter0","getLetter","getLetter1","getLetter2","getNextDifferentLetter","letterPositionInWord","currentLetter","newLetter","newIndex","foundDifferentLetter","currentRowIndex","letter0Index","letter1Index","letter2Index","arrayOfWordsAsLettersInterChange","letterNumber","nextLetter","letter0","letter1","letter2","scrollTo","cursor","item","BeginEndSounds","textDecoration","target","ThreeLetterRhymes","PlusOnePlusZero","setOption","optionString","elementsForWhatToAdd","elementsForWhatToAddTo","result","numberWeAddTo","numberBeingAdded","storeResultNumberWeAddTo","number","storeResultNumberBeingAdded","showResult","MinorPrintables","CSSAnimations","margin","transform","CSSPositioning","alt","ReactNotes1","ReadBackwards","url","titleDesc","getRssFeed","fetch","response","xmlText","xmlDoc","text","parser","DOMParser","parseFromString","arrayOfNews","obj","getElementsByTagName","childNodes","nodeValue","revStyleTitle","revStyleDesc","revStyleOrig","routing","exact","path","process","component","ReactDOM","render","getElementById"],"mappings":"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CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAChJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAChJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAChJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAChJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KACjI,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KACjI,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI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AAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAChJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAChJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAChJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAChJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAChJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAChJ,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,KAAO,CAAC,IAAI,IAAI,KAAM,CAAC,IAAI,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","file":"static/js/main.d2e93307.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport  MainImage from \"./Components/MainImage\";\r\nimport DescriptionSections from \"./Components/DescriptionSections\";\r\n\r\nimport KidsSections from \"./Components/KidsSections\";\r\nimport PersonalInterestsSections from \"./Components/PersonalInterestsSections\";\r\nimport Books from \"./Components/Books\";\r\n\r\n\r\n\r\nclass LandingPage extends Component {\r\n  \r\n  render() {\r\n    return(\r\n\r\n    <React.Fragment>\r\n        \r\n        TEST <br/>\r\n        TEST <br/>\r\n        TEST <br/>\r\n        TEST <br/>\r\n        TEST <br/>\r\n        TEST TEST <br/>\r\n        TEST <br/>\r\n                      \r\n      \r\n\r\n    </React.Fragment>)\r\n};\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, {Component} from \"react\";\r\nimport './MainImage.css';\r\n\r\nclass MainImage extends Component {       \r\n    render() {\r\n      return(\r\n        <React.Fragment>\r\n            <header className=\"picture TopMarginToDealWithNavBarImg\"/>  \r\n        </React.Fragment>\r\n      )\r\n    }\r\n}\r\nexport default MainImage;","import React, {Component} from \"react\";\r\nimport MainSections from \"./MainSections.css\";\r\n\r\nclass DescriptionSections extends Component {\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"DescriptionSectionText\">\r\n                    LEARNING IS AWESOME! <br/> Some activities require a touch screen and some contain a printable.  Most require an adult to help.\r\n                </div>\r\n            </React.Fragment>\r\n        )};\r\n}\r\n\r\nexport default DescriptionSections;","import React, {Component} from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n//import Container from 'react-bootstrap/Container';\r\n//import Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\nimport MainSections from \"./MainSections.css\";\r\n\r\n\r\nclass KidsSections extends Component {\r\n    render() {\r\n        return(\r\n    \r\n        <React.Fragment>            \r\n            \r\n            <div className=\"MainSectionContainer MainSectionContainerActivities TopMarginToDealWithNavBar\" id=\"KidsSection\">\r\n                {/*}\r\n                <div>\r\n                    <Link to=\"/LanguageChecklists\" className=\"CardTextLink\">\r\n                        <img src=\"/images/MainItemcardImages/checklists.svg\" className=\"MainSectionItemImage\" alt=\"Check readiness checklists\"></img>    \r\n                    </Link>\r\n                </div>\r\n                */}\r\n                <div>\r\n                    <Link to=\"/MinorPrintables\" className=\"CardTextLink\">                                                    \r\n                        <img src=\"/images/MainItemcardImages/MinorPrintables.svg\" className=\"MainSectionItemImage\" alt=\"Minor Printables\"></img>   \r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <Link to=\"/CanvasTrace\" className=\"CardTextLink\">\r\n                        <img src=\"/images/MainItemcardImages/CanvasTrace.svg\" className=\"MainSectionItemImage\" alt=\"trace on canvas\"></img>   \r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <Link to=\"/bdpq\" className=\"CardTextLink\">                                                    \r\n                        <img src=\"/images/MainItemcardImages/pdbq.svg\" className=\"MainSectionItemImage\" alt=\"P B Q D\"></img>   \r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <Link to=\"/bdpqCircles\" className=\"CardTextLink\">                                                    \r\n                        <img src=\"/images/MainItemcardImages/pdbqCircles.svg\" className=\"MainSectionItemImage\" alt=\"P B Q D Circles\"></img>   \r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <Link to=\"/mnwCircles\" className=\"CardTextLink\">                                                    \r\n                        <img src=\"/images/MainItemcardImages/mnwCircles.svg\" className=\"MainSectionItemImage\" alt=\"M N W Circles\"></img>   \r\n                    </Link>\r\n                </div>\r\n\r\n                <div>\r\n                    <Link to=\"/greaterLessEqual\" className=\"CardTextLink\">                                                    \r\n                        <img src=\"/images/MainItemcardImages/GreaterLessEqual.svg\" className=\"MainSectionItemImage\" alt=\"Greater Less Equal\"></img>   \r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <Link to=\"/ThreeLetterWordSounds\" className=\"CardTextLink\">                                                    \r\n                        <img src=\"/images/MainItemcardImages/3LetterWordSounds.svg\" className=\"MainSectionItemImage\" alt=\"3 letter word sounds\"></img>   \r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <Link to=\"/ThreeLetterRhymes\" className=\"CardTextLink\">                                                    \r\n                        <img src=\"/images/MainItemcardImages/3LetterRhyme.svg\" className=\"MainSectionItemImage\" alt=\"3 letter rhymes\"></img>   \r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <Link to=\"/BeginEndSounds\" className=\"CardTextLink\">                                                    \r\n                        <img src=\"/images/MainItemcardImages/BeginEndSounds.svg\" className=\"MainSectionItemImage\" alt=\"3 letter rhymes\"></img>   \r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <Link to=\"/PlusOnePlusZero\" className=\"CardTextLink\">                                                    \r\n                        <img src=\"/images/MainItemcardImages/PlusOnePlusZero.svg\" className=\"MainSectionItemImage\" alt=\"Plus One Plus Zero\"></img>   \r\n                    </Link>\r\n                </div>\r\n            </div>\r\n                     \r\n\r\n        </React.Fragment>\r\n        )};\r\n\r\n\r\n}\r\nexport default KidsSections;","import React, {Component} from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport MainSections from \"./MainSections.css\";\r\n\r\n//for grown ups - \r\nclass PersonalInterestsSections extends Component {\r\n    render() {\r\n        return(\r\n    \r\n        <React.Fragment>            \r\n\r\n            <div className=\"MainSectionContainer MainSectionContainerPersonalInterests TopMarginToDealWithNavBar\" id=\"PersonalInterestsSection\" >\r\n                <div>                    \r\n                    <a href=\"https://www.instagram.com/feedforpositivity/\" target=\"_new\" >\r\n                        <img src=\"/images/MainItemcardImages/feedforpositivity.png\" className=\"MainSectionItemImagePng\" alt=\"Read backwards\"></img>    \r\n                        </a>\r\n                </div>   \r\n                <div>\r\n                    <Link to=\"/ReadBackwards\" className=\"CardTextLink\">\r\n                        <img src=\"/images/MainItemcardImages/readBackwards.svg\" className=\"MainSectionItemImage\" alt=\"Read backwards\"></img>    \r\n                    </Link>\r\n                </div>                     \r\n            </div>      \r\n\r\n        </React.Fragment>\r\n        )};\r\n\r\n\r\n}\r\nexport default PersonalInterestsSections;","import React, {Component} from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport MainSections from \"./MainSections.css\";\r\n\r\nclass Books extends Component {\r\n    render() {\r\n        return(\r\n    \r\n        <React.Fragment>            \r\n            \r\n            <div className=\"MainSectionContainerBooks TopMarginToDealWithNavBar\" id=\"BooksSection\">                \r\n                <div>                                        \r\n                    <iframe type=\"text/html\" width=\"336\" height=\"550\" frameborder=\"0\"                      \r\n                    src=\"https://read.amazon.com/kp/card?asin=B08JH9GXJ9&preview=inline&linkCode=kpe&ref_=cm_sw_r_kb_dp_tKpFFbQZZHSP4\" ></iframe>                \r\n                </div>\r\n            </div>\r\n                     \r\n\r\n        </React.Fragment>\r\n        )};\r\n\r\n\r\n}\r\nexport default Books;","import React, {Component} from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass NavBar extends Component {   \r\n    render() {\r\n      return(\r\n        <React.Fragment>\r\n            <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\" expand=\"lg\" >\r\n                {/*<Navbar.Brand href=\"/\">\r\n                    <img\r\n                        alt=\"\"\r\n                        src=\"/Images/jdrawing.svg\"\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        className=\"rounded-circle d-inline-block align-top\"\r\n                    />{' '}  \r\n                    TODO            \r\n      </Navbar.Brand>*/}\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">                    \r\n                        <Nav.Link href=\"/\" style={{borderRight:\"solid 2px var(--main-ButtonTextColor-color)\", borderLeft:\"solid 2px var(--main-ButtonTextColor-color)\"}}>Home</Nav.Link>\r\n                        <Nav.Link href=\"/#KidsSection\" style={{borderRight:\"solid 2px var(--main-ButtonTextColor-color)\", borderLeft:\"solid 2px var(--main-ButtonTextColor-color)\"}}>Kids Activities</Nav.Link>                       \r\n                        {/*<Nav.Link href=\"/#SofwareDevSection\" style={{borderRight:\"solid 2px var(--main-ButtonTextColor-color)\", borderLeft:\"solid 2px var(--main-ButtonTextColor-color)\"}}>Software Dev. Notes</Nav.Link>  */}\r\n                        <Nav.Link href=\"/#PersonalInterestsSection\" style={{borderRight:\"solid 2px var(--main-ButtonTextColor-color)\", borderLeft:\"solid 2px var(--main-ButtonTextColor-color)\"}}>For Grown Ups</Nav.Link>\r\n                        <Nav.Link href=\"/#BooksSection\"><span style={{border:\"solid 2px var(--main-ButtonTextColor-color)\", padding:\"2px\", borderRadius:\"5px\"}}>Books</span></Nav.Link>                        \r\n                    </Nav>\r\n                </Navbar.Collapse>                \r\n            </Navbar>\r\n      </React.Fragment>)\r\n\r\n  };\r\n  }\r\n  \r\n  export default NavBar;","import React, {Component} from \"react\";\r\n\r\nclass bdpq extends Component {\r\n    \r\n  constructor(){\r\n    super();    \r\n    this.state = { selectedWord:\"dog\", \r\n                    words : [\"dog\", \"pig\", \"pot\", \"dice\", \"dad\", \"dean\", \"done\", \"dare\", \"dunes\", \"pay\", \"put\", \"pie\", \"plant\", \"boy\", \"ball\", \"bed\", \"big\", \"queen\",\r\n                    \"quiet\", \"question\", \"double\", \"distance\", \"delay\", \"dinner\", \"doer\", \"digital\", \"demo\", \"diamond\", \"decide\", \"document\", \"desert\",\r\n                    \"put\", \"prison\", \"purse\", \"protest\", \"private\", \"puppy\", \"pondering\", \"peptide\", \"primal\", \"profession\", \"pirate\", \"post\", \"prototype\",\r\n                    \"bribe\", \"baby\", \"bottle\", \"battle\", \"binary\", \"best\", \"boost\", \"bilingual\", \"border\", \"quest\", \"quarantine\", \"quarter\"]};    \r\n    this.refToCorrectImage = React.createRef();   \r\n    this.refToIncorrectImage = React.createRef();       \r\n    }\r\n  \r\n    generateRandomNumber = () => {\r\n      return Math.floor(Math.random() * this.state.words.length);      \r\n    }\r\n    getAWordFromArray = () => {\r\n\r\n      this.refToCorrectImage.current.style.visibility=\"hidden\" \r\n      this.refToIncorrectImage.current.style.visibility=\"hidden\" \r\n        var index = this.generateRandomNumber();\r\n        var word = this.state.words[index];                \r\n        if (word == this.state.selectedWord)\r\n        {\r\n          word = (index < this.state.words.length - 1)? this.state.words[index+1] : this.state.words[0];          \r\n        }\r\n        this.setState({selectedWord:word});        \r\n    }\r\n\r\n    clickLetter = (l) => {\r\n      var correctLetter = this.state.selectedWord[0];\r\n      if (correctLetter == l){\r\n        this.refToCorrectImage.current.style.visibility=\"visible\"  \r\n        this.refToIncorrectImage.current.style.visibility=\"hidden\"  \r\n      }\r\n      else{\r\n        this.refToCorrectImage.current.style.visibility=\"hidden\"  \r\n        this.refToIncorrectImage.current.style.visibility=\"visible\"  \r\n      }\r\n    }\r\n\r\n    render() {\r\n      return(\r\n  \r\n      <React.Fragment>\r\n         <div className=\"TopMarginToDealWithNavBarAll\">\r\n            <div className=\"CenterMe\">\r\n\r\n              <button title=\"Get Word\" onClick={this.getAWordFromArray} className=\"buttonGeneral\">Get Word</button><br/>\r\n              <br/>Choose the letter that matches the beginning of the word shown.<br/>\r\n              <img src=\"../images/Language/correct.svg\" className=\"pbdqImages\" ref={this.refToCorrectImage} style={{visibility: 'hidden'}} /> \r\n              {/*<button className=\"pbdqButton\"><img src=\"../images/Language/P.svg\" onClick={() => this.clickLetter(\"p\")} className=\"pbdqImages\"></img></button>*/}\r\n              <button className=\"pbdqButton\" onClick={() => this.clickLetter(\"p\")} >p</button>\r\n              <button className=\"pbdqButton\" onClick={() => this.clickLetter(\"b\")} >b</button>\r\n              <button className=\"pbdqButton\" onClick={() => this.clickLetter(\"q\")} >q</button>\r\n              <button className=\"pbdqButton\" onClick={() => this.clickLetter(\"d\")} >d</button>\r\n              {/*}\r\n              <button className=\"pbdqButton\"><img src=\"../images/Language/b.svg\" onClick={() => this.clickLetter(\"b\")} className=\"pbdqImages\"></img></button>\r\n              <button className=\"pbdqButton\"><img src=\"../images/Language/q.svg\" onClick={() => this.clickLetter(\"q\")} className=\"pbdqImages\"></img></button>\r\n              <button className=\"pbdqButton\"><img src=\"../images/Language/d.svg\" onClick={() => this.clickLetter(\"d\")} className=\"pbdqImages\"></img></button>\r\n            */}\r\n              <img src=\"../images/Language/incorrect.svg\" className=\"pbdqImages\" ref={this.refToIncorrectImage} style={{visibility:'hidden'}}/> \r\n              <br/>               \r\n              <label className=\"correctLetterLabel\">{this.state.selectedWord[0]}</label><label className=\"LabelBDPQ\">{this.state.selectedWord.substr(1,this.state.selectedWord.length-1)}</label>\r\n            </div>\r\n        \r\n        </div>\r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default bdpq;","import React, {Component} from \"react\";\r\nimport LanguagePagesCSS from '../Views/KidsActivities/KidsPages.css'\r\n\r\nclass LetterCircle extends Component {     \r\n    \r\n    constructor(props){   \r\n        super(props);               \r\n        this.state = {backgroundColor:\"w\"};                \r\n    }\r\n    \r\n\r\n    setColor = () => {            \r\n        //(this.props.letter == this.props.targetLetter)? this.setState({backgroundColor:\"g\"}) : this.setState({backgroundColor:\"r\"}); \r\n        if (this.props.letter == this.props.targetLetter)\r\n        {\r\n            this.setState({backgroundColor:\"g\"})\r\n            this.props.functionToCallBack();\r\n        }\r\n        else{\r\n            this.setState({backgroundColor:\"r\"}); \r\n        }\r\n    }\r\n    \r\n    render() {\r\n        \r\n        let button = \"\";\r\n        switch (this.state.backgroundColor) {\r\n            case 'w':\r\n                button = <div className= \"circleWhite\" onClick={this.setColor}  >{this.props.letter}</div>;\r\n                break;\r\n            case 'g':\r\n                button = <div className= \"circleGreen\" onClick={this.setColor}  >{this.props.letter}</div>;\r\n                break;\r\n            case 'r':\r\n                button = <div className= \"circleRed\" onClick={this.setColor}  >{this.props.letter}</div>;\r\n                break;\r\n            default:\r\n                button = <div className= \"circleWhite\" onClick={this.setColor}  >{this.props.letter}</div>;\r\n        }\r\n    \r\n        return(\r\n        <React.Fragment>            \r\n            {button}            \r\n        </React.Fragment>\r\n        )\r\n    };\r\n}\r\n\r\nexport default LetterCircle;","import React, {Component} from \"react\";\r\nimport LetterCircle from \"./LetterCircle.component\";\r\n\r\nclass LetterCircleList extends Component {     \r\n     /*TODO change so we can show message when they have all been found*/   \r\n    constructor(props){     \r\n        super(props);        \r\n        this.state = {theList:[], newList:[], numberPerLetter:5};\r\n        this.numberOfLettersFound = 0;\r\n                \r\n        if (this.props.targetLetter == \"undefined\" || this.props.targetLetter == null || this.props.targetLetter == \"\")\r\n            return;\r\n        //todo add check for letterGroup being undefined and set default for it        \r\n        if (this.props.letterGroup == \"bdpq\"){\r\n            for (var i=0; i<this.state.numberPerLetter; i++){\r\n                this.state.theList.push({id:i, value:\"b\"})\r\n            }\r\n            for (var i=this.state.numberPerLetter; i< (this.state.numberPerLetter * 2); i++){\r\n                this.state.theList.push({id:i, value:\"d\"})\r\n            }\r\n            for (var i=this.state.numberPerLetter * 2; i<this.state.numberPerLetter * 3; i++){\r\n                this.state.theList.push({id:i, value:\"q\"})\r\n            }\r\n            for (var i=this.state.numberPerLetter * 3; i<this.state.numberPerLetter *4; i++){\r\n                this.state.theList.push({id:i, value:\"p\"})\r\n            }\r\n        }else if (this.props.letterGroup == \"mnw\"){\r\n            for (var i=0; i<this.state.numberPerLetter; i++){\r\n                this.state.theList.push({id:i, value:\"M\"})\r\n            }\r\n            for (var i=this.state.numberPerLetter; i<this.state.numberPerLetter * 2; i++){\r\n                this.state.theList.push({id:i, value:\"N\"})\r\n            }\r\n            for (var i=this.state.numberPerLetter * 2; i<this.state.numberPerLetter * 3; i++){\r\n                this.state.theList.push({id:i, value:\"W\"})\r\n            }\r\n        }\r\n               \r\n        let allDone = false;\r\n        let theListCopy = [...this.state.theList];\r\n        while (!allDone && theListCopy.length > 0 ){\r\n            var index = this.generateRandomNumber(theListCopy.length);\r\n            //var newItem =  {id:index, value:this.state.theList[index]};\r\n            var newItem = {...theListCopy[index]};\r\n            //don't use include because we are not comparing the item, but the contents - fix this, when removing we reget the indexes so it won't end\r\n            if (!this.state.newList.find(it => it.id == newItem.id && it.value == newItem.value)){\r\n                this.state.newList.push(newItem);  \r\n                theListCopy.splice(index, 1)              ;\r\n            }\r\n            else{\r\n                if (this.state.theList.length == this.state.newList.length){\r\n                    allDone = true;\r\n                }\r\n            }\r\n        }\r\n        \r\n        /*this.state.newList = this.state.theList.map( function newArray(item , index)  {\r\n            var newItem = {id:index, value:item};\r\n            return newItem;\r\n          });                */\r\n    }\r\n    \r\n    //TODO add a something to indicate when all, 5 or whatever have been found\r\n    generateRandomNumber = (length) => {\r\n        return Math.floor(Math.random() * length);      \r\n    }\r\n    \r\n    checkIfAllHaveBeenFound = () => {\r\n\r\n        this.numberOfLettersFound++;\r\n      \r\n        if (this.numberOfLettersFound == this.state.numberPerLetter){\r\n            alert(\"AWESOME, YOU FOUND THEM ALL!\");//change this to a nicer notice\r\n        }\r\n    }\r\n    render() {        \r\n        return(            \r\n        <React.Fragment>         \r\n            Click on one of the letters and find the <strong style={ {color:\"deeppink\"}}>{this.state.numberPerLetter} </strong>letters that match the selected letter. <br/>\r\n            <div className=\"myContentsAreGrid1\">                \r\n                {this.state.newList.map( (circle, index) =>                  \r\n                        <LetterCircle key={circle.id} letter={circle.value} targetLetter={this.props.targetLetter} functionToCallBack = {this.checkIfAllHaveBeenFound}/>                   \r\n                )}                                                                \r\n            </div>\r\n        </React.Fragment>\r\n        )\r\n    };\r\n}\r\n\r\nexport default LetterCircleList;","import React, {Component} from \"react\";\r\nimport LetterCircleList from \"../../Components/LetterCircleList.component\";\r\n\r\nclass bdpqCircles extends Component {\r\n    \r\n  constructor(){\r\n    super();     \r\n    this.state = {selectedLetter:\"\"}      ;\r\n    }\r\n  \r\n    generateRandomNumber = () => {\r\n      return Math.floor(Math.random() * this.state.words.length);      \r\n    }\r\n    \r\n    checkedLetter = (s) => {      \r\n      //this.setState({selectedLetter:s}, () => {this.forceUpdateNow()});           \r\n      this.setState({selectedLetter:s});           \r\n    }    \r\n\r\n\r\n    render() {\r\n      return(\r\n  \r\n      <React.Fragment>\r\n         <div className=\"TopMarginToDealWithNavBarAll\">\r\n            <div className=\"CenterMe\">\r\n\r\n            <div className=\"radio-toolbar\">          \r\n                    <input type=\"radio\" id=\"b\" name=\"letter\" value=\"b\" onChange = { () => this.checkedLetter(\"b\")}/>\r\n                    <label htmlFor=\"b\">b</label>\r\n\r\n                    <input type=\"radio\" id=\"p\" name=\"letter\" value=\"p\" onChange = { () => this.checkedLetter(\"p\")}/>\r\n                    <label htmlFor=\"p\">p</label>\r\n\r\n                    <input type=\"radio\" id=\"d\" name=\"letter\" value=\"d\" onChange = { () => this.checkedLetter(\"d\")}/>\r\n                    <label htmlFor=\"d\">d</label> \r\n\r\n                    <input type=\"radio\" id=\"q\" name=\"letter\" value=\"q\" onChange = { () => this.checkedLetter(\"q\")}/>\r\n                    <label htmlFor=\"q\">q</label> \r\n                </div>\r\n\r\n                <LetterCircleList targetLetter = {this.state.selectedLetter} key={this.state.selectedLetter} letterGroup=\"bdpq\"/> {/*give a key so it calls constructor also on rerendering*/}             \r\n            </div>\r\n        \r\n        </div>\r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default bdpqCircles;","import React, {Component} from \"react\";\r\nimport LetterCircleList from \"../../Components/LetterCircleList.component\";\r\nimport LanguagePagesCSS from '../KidsActivities/KidsPages.css'\r\n\r\nclass mnwCircles extends Component {\r\n    \r\n  constructor(){\r\n    super();     \r\n    this.state = {selectedLetter:\"\"}      ;\r\n    }\r\n  \r\n    generateRandomNumber = () => {\r\n      return Math.floor(Math.random() * this.state.words.length);      \r\n    }\r\n    \r\n    checkedLetter = (s) => {      \r\n      this.setState({selectedLetter:s}, this.forceUpdateNow);           \r\n    }\r\n\r\n    forceUpdateNow(){\r\n      this.forceUpdate();\r\n    }\r\n    \r\n\r\n    render() {\r\n      return(\r\n  \r\n      <React.Fragment>\r\n         <div className=\"TopMarginToDealWithNavBarAll\">\r\n            <div className=\"CenterMe\">\r\n\r\n            <div className=\"radio-toolbar\">          \r\n                    <input type=\"radio\" id=\"M\" name=\"letter\" value=\"M\" onChange = { () => this.checkedLetter(\"M\")}/>\r\n                    <label htmlFor=\"M\">M</label>\r\n\r\n                    <input type=\"radio\" id=\"N\" name=\"letter\" value=\"N\" onChange = { () => this.checkedLetter(\"N\")}/>\r\n                    <label htmlFor=\"N\">N</label>\r\n\r\n                    <input type=\"radio\" id=\"W\" name=\"letter\" value=\"W\" onChange = { () => this.checkedLetter(\"W\")}/>\r\n                    <label htmlFor=\"W\">W</label>                    \r\n                </div>\r\n\r\n                <LetterCircleList targetLetter = {this.state.selectedLetter} key={this.state.selectedLetter} letterGroup=\"mnw\"/>    {/*give a key so it calls constructor also on rerendering*/}             \r\n            </div>\r\n        \r\n        </div>\r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default mnwCircles;","import React,  {Component}  from 'react';\r\n\r\nclass TextFieldWithButton extends Component {        \r\n    constructor(props)\r\n    {\r\n        super(props);    \r\n        this.refToInput = React.createRef();    \r\n    }\r\n\r\n    sendTheText = () => {                \r\n        this.props.functionToCall(this.refToInput.current.value);\r\n    }\r\n    sendTheTextBlank = () => {    \r\n        this.refToInput.current.value = \"\";            \r\n        this.props.functionToCall(\"\");\r\n    }\r\n\r\n    render() {\r\n      return(\r\n  \r\n      <React.Fragment>\r\n         \r\n            <input type=\"search\" placeholder={this.props.textForInput} className=\"inputText\" ref={this.refToInput}/>\r\n            <button onClick={this.sendTheText} className=\"buttonGeneral\">{this.props.textForButton}</button>\r\n            <button onClick={this.sendTheTextBlank} className=\"buttonGeneral\">Reset</button>\r\n\r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default TextFieldWithButton;","import React, {Component} from \"react\";\r\nimport TextFieldWithButton from \"../../Components/TextFieldWithButton\";\r\n\r\nclass CanvasTrace extends Component {\r\n        \r\n    canvasX = 0;\r\n    canvasY = 0;\r\n    touchX=0;\r\n    touchY=0;\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {textForCanvas : \"\"};\r\n        this.refToCanvas = React.createRef();          \r\n        window.addEventListener('resize', this.handleResize);\r\n    }\r\n    componentDidMount(){\r\n        this.getCanvasPosition();\r\n        //need to reset this to get the accurate touch points\r\n        this.refToCanvas.current.width = this.refToCanvas.current.clientWidth;\r\n        this.refToCanvas.current.height = this.refToCanvas.current.clientHeight;    \r\n        this.refToCanvas.current.addEventListener('touchstart', this.canvasTouchStart, {passive:false})    ;\r\n        this.refToCanvas.current.addEventListener('touchmove', this.canvasTouchMove, {passive:false})    ;\r\n    }\r\n          \r\n    handleResize = () => {        \r\n        this.getCanvasPosition();\r\n        //need to reset this to get the accurate touch points\r\n        //changing the following resets the canvas contents\r\n        this.refToCanvas.current.width = this.refToCanvas.current.clientWidth;\r\n        this.refToCanvas.current.height = this.refToCanvas.current.clientHeight;        \r\n    }\r\n    //make sure there is no scrolling or can't use the canvas\r\n\r\n    /*POSITIONING START*/\r\n    GetOffset = (object, offset) => {\r\n        \r\n        if (!object)\r\n            return;\r\n        offset.x += object.offsetLeft;\r\n        offset.y += object.offsetTop;\r\n                \r\n        this.GetOffset(object.offsetParent, offset);\r\n    }\r\n    GetScrolled = (object, scrolled) => {\r\n        if (!object)\r\n            return;\r\n        scrolled.x += object.scrollLeft;\r\n        scrolled.y += object.scrollTop;\r\n        \r\n        if (object.tagName.toLowerCase() !== \"html\") {\r\n            this.GetScrolled(object.parentNode, scrolled);\r\n        }        \r\n    }\r\n    getCanvasPosition = () => {    \r\n        \r\n        if (this.refToCanvas != null && this.refToCanvas.current != null)    \r\n        {            \r\n            var offset = { x: 0, y: 0 };            \r\n            this.GetOffset(this.refToCanvas.current, offset);\r\n        \r\n            var scrolled = { x: 0, y: 0 };            \r\n            this.GetScrolled(this.refToCanvas.current.parentNode, scrolled);            \r\n        \r\n            this.canvasX = offset.x - scrolled.x ;                        \r\n            this.canvasY = offset.y - scrolled.y ;            \r\n        }\r\n    }\r\n    getTouchPosition = (e, canvas) => {\r\n        \r\n        if (!e)\r\n            return;\r\n    \r\n        if (e.touches) {    \r\n            if (e.touches.length === 1) {                        \r\n                var touch = e.touches[0];\r\n                this.touchX = touch.pageX - this.canvasX;\r\n                this.touchY = touch.pageY - this.canvasY;                  \r\n            }    \r\n        }\r\n    }\r\n    drawDot = (ctx) => {\r\n            \r\n        ctx.fillStyle = \"red\";\r\n        ctx.beginPath();            \r\n        ctx.fillRect(this.touchX,this.touchY, 10, 10);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    \r\n    } \r\n    /*POSITIONING END*/\r\n\r\n    /*UPDATE CANVAS START*/\r\n    updateCanvas = (txt) => {                   \r\n        this.setState( {textForCanvas: txt}, this.setCanvasText);  \r\n    }\r\n\r\n    setCanvasText = () => {        \r\n                \r\n        var ctx = this.refToCanvas.current.getContext(\"2d\");                 \r\n        ctx.clearRect(0, 0, this.refToCanvas.current.width, this.refToCanvas.current.height);                \r\n        //set size to biggest possible that will fit\r\n        //using ratio of 150c/110f=> c => 150/110 => 1.36 => 0.73 ==> just a bit smaller\r\n        var fonts = this.refToCanvas.current.height * 0.63;//default size\r\n        //var fonts = this.refToCanvas.current.width * 0.40;        \r\n        fonts = Math.round(fonts);        \r\n        ctx.font = `${fonts}px Arial`;         \r\n        // lower the font size until the text fits the canvas\r\n        while(ctx.measureText(this.state.textForCanvas).width>this.refToCanvas.current.width){\r\n            fonts--;\r\n            ctx.font=`${fonts}px Arial`; \r\n        }      \r\n        //once size is reduced to fit, make a bit smaller so it's not all the way to the edge\r\n        fonts = fonts -10;\r\n        ctx.font=`${fonts}px Arial`; \r\n        ctx.strokeText(this.state.textForCanvas, 50 , fonts); //50 so J and similar are not cut off.\r\n                \r\n    }\r\n    /*UPDATE CANVAS END*/\r\n\r\n    /*LISTENER EVENTS START*/\r\n    canvasTouchStart = (e) =>{            \r\n                \r\n        var ctx = this.refToCanvas.current.getContext(\"2d\");            \r\n        this.getTouchPosition(e, this.refToCanvas.current);               \r\n        this.drawDot(ctx);                \r\n        e.preventDefault();\r\n    }\r\n    canvasTouchMove = (e) => {\r\n        \r\n        var ctx = this.refToCanvas.current.getContext(\"2d\");            \r\n        //todo reorganize the code so I don't have to get the canvas and ctx each time\r\n        this.getTouchPosition(e, this.refToCanvas.current);      \r\n        this.drawDot(ctx, this.touchX, this.touchY, 12);        \r\n        e.preventDefault();         \r\n    }\r\n    /*LISTENER EVENTS END*/\r\n\r\n\r\n    printTheText=() =>{                          \r\n\r\n        if (this.state.textForCanvas.length == 0 ){\r\n            alert(\"Enter something in the canvas to print it\");//make nicer pop up\r\n            return;\r\n        }          \r\n        try {\r\n            //let doc = document.implementation.createHTMLDocument(\"New Document\");\r\n            \r\n            var newWindow = window.open();\r\n            \r\n            var linkF = newWindow.document.createElement(\"link\");\r\n            linkF.href = \"https://fonts.googleapis.com/css2?family=Raleway+Dots&display=swap\";\r\n            linkF.rel = \"stylesheet\";\r\n            newWindow.document.body.appendChild(linkF);\r\n\r\n            var sheet = newWindow.document.createElement(\"style\");\r\n            //sheet.innerHTML = \"p {color:lightblue; text-decoration: underline overline ; font-size: 45px; margin:15px; width:100vw}\";\r\n            sheet.innerHTML = \"p {color:gray;  font-size: 50px; margin:15px; width:100vw; border-top-style: solid; border-bottom-style:solid; color-adjust: exact; font-family: 'Raleway Dots'}\";\r\n            newWindow.document.body.appendChild(sheet);\r\n\r\n            var sheet2 = newWindow.document.createElement(\"style\");\r\n            //sheet.innerHTML = \"p {color:lightblue; text-decoration: underline overline ; font-size: 45px; margin:15px; width:100vw}\";\r\n            sheet2.innerHTML = \"span {color:deeppink;  font-size: 25px; margin:15px; width:100vw;  color-adjust: exact;}\";\r\n            newWindow.document.body.appendChild(sheet2);\r\n            \r\n            var desc = newWindow.document.createElement(\"span\");            \r\n            desc.innerHTML = \"Print this page from your browser.\";\r\n            newWindow.document.body.appendChild(desc);\r\n\r\n            var br = newWindow.document.createElement(\"br\");                        \r\n            newWindow.document.body.appendChild(br);            \r\n            \r\n            \r\n\r\n            var p, brp;\r\n            for (var i = 0; i<8; i++){\r\n                p = newWindow.document.createElement(\"p\"); \r\n                p.innerHTML = this.state.textForCanvas;\r\n                newWindow.document.body.appendChild(p);    \r\n                brp = newWindow.document.createElement(\"br\");                        \r\n                newWindow.document.body.appendChild(brp);\r\n            }\r\n            \r\n\r\n           // body.innerHTML = '<p style=\"color:lightblue,text-decoration: line-through underline overline;\">' + this.state.textForCanvas + \"</p>\";\r\n\r\n        } catch(e) {\r\n            console.log(e);\r\n        }        \r\n    \r\n    }\r\n\r\n    render() {\r\n      return(\r\n  \r\n        \r\n      <React.Fragment>\r\n         \r\n         <div className=\"TopMarginToDealWithNavBarAll CenterMe\">            \r\n            Use your finger.  Resizing will clear the contents. (Canvas has no scrolling).  Enter your text and click the button to put it on the canvas. <br/> \r\n            <TextFieldWithButton textForInput = \"Enter you text\" textForButton=\"Move to canvas!\" functionToCall= {this.updateCanvas}/>\r\n            <button className=\"buttonPrintable\" onClick={this.printTheText}>Printable</button>\r\n            \r\n            <canvas className =\"traceLetterCanvas\"  \r\n                    ref={this.refToCanvas}                     \r\n                     />                \r\n            \r\n            \r\n        </div>\r\n  \r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default CanvasTrace;\r\n","import React, {Component} from \"react\";\r\nimport CSSAnimation from '../Views/KidsActivities/KidsPages.css'\r\n\r\nclass ShuffleCardsAndShow extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);        \r\n        this.refToDiv = React.createRef();   \r\n        this.state = {value:\"?\"}        \r\n        this.numberSelected = null;\r\n    } \r\n  \r\n    componentDidMount = () => {\r\n        this.refToDiv.current.addEventListener('animationend', this.animationEnded) ; \r\n    }\r\n    generateRandomNumber = (length) => {\r\n        return Math.floor(Math.random() * length);      \r\n    }\r\n\r\n   roll= () => {                                                                \r\n        var maxNumber = this.props.elementsForCard.length;\r\n        this.animationAndDisplay(maxNumber);        \r\n   }    \r\n\r\n   animationAndDisplay = (maxNumber) => {\r\n\r\n       this.numberSelected = this.generateRandomNumber(maxNumber);        \r\n       this.setState( {value:\"?\"});    \r\n       if (this.refToDiv.current != undefined)   {\r\n        this.refToDiv.current.className = \"cardsAnimation\";              \r\n       }\r\n   }\r\n   animationEnded = () => {\r\n        this.setState( {value:this.props.elementsForCard[this.numberSelected]});\r\n        this.refToDiv.current.className = null;   \r\n        if (this.props.callbackFunction != undefined) {\r\n            this.props.callbackFunction(this.props.elementsForCard[this.numberSelected]);        \r\n        }\r\n   }\r\n\r\n\r\n    render() {      \r\n          var cardStyle = {                          \r\n            background:this.props.myColor,\r\n            fontFamily:\"Times New Roman\",   \r\n            fontSize:this.props.myFont,\r\n            width: this.props.myWidth,            \r\n            height:this.props.myHeight \r\n          };\r\n      return(  \r\n            \r\n      <React.Fragment>                                                                      \r\n           <div style={cardStyle}>\r\n                <div ref={this.refToDiv}>{this.state.value}</div>\r\n            </div>        \r\n  \r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default ShuffleCardsAndShow;\r\n","import React, {Component} from \"react\";\r\nimport ShuffleCardsAndShow from \"../../Components/ShuffleCardsAndShow\";\r\n\r\nclass GreaterLessEqual extends Component {\r\n\r\n    constructor()\r\n    {\r\n        super();                \r\n        this.elementsForCard = [\"<\", \">\", \" = \"]  ;\r\n        this.elementsForCardNumbersPlayers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]  ;        \r\n    }     \r\n\r\n    getNewResults = () => {        \r\n                \r\n        this.refs.childPlayer1.roll();\r\n        this.refs.childPlayer2.roll();\r\n        this.refs.childComparison.roll();\r\n                \r\n    }\r\n    /*UPDATE CANVAS END*/    \r\n\r\n\r\n    render() {\r\n        var cardStyles = {\r\n            width:\"100%\",            \r\n            textAlign: \"center\",\r\n            display:\"flex\",\r\n            flexDirection:\"row\",\r\n            justifyContent:\"center\",\r\n            fontSize:\"3vw\",            \r\n            alignItems:\"flex-start\"\r\n        }\r\n      return(\r\n  \r\n      \r\n      <React.Fragment>\r\n         \r\n         <div className=\"TopMarginToDealWithNavBarAll CenterMe\">            \r\n            <button className= \"buttonGeneral\" onClick={this.getNewResults}>Show Numbers</button>   <br/><br/>\r\n            Player 1 and Player 2 get a number, whoever has the number that satisfies what the center card says wins.  If the center card says \r\n            equal, both players win if they both have the same number.  \r\n            <br/><br/>\r\n            <div style={cardStyles}>                \r\n                <div style={{border:\"solid navy 2px\",  marginRight:20, marginTop:120}}>        \r\n                    PLAYER 1 <br/>\r\n                    <ShuffleCardsAndShow  ref=\"childPlayer1\"\r\n                        elementsForCard = {this.elementsForCardNumbersPlayers} myWidth=\"20vw\" myHeight = \"30vh\" myFont=\"10vw\" myColor=\"lightblue\"\r\n                    />  \r\n                </div>\r\n\r\n                <div>\r\n                    SATISFY THIS! <br/>\r\n                    <ShuffleCardsAndShow  ref=\"childComparison\"\r\n                    elementsForCard = {this.elementsForCard}     myWidth=\"20vw\" myHeight = \"25vh\" myFont=\"10vw\" myColor=\"lightpink\"\r\n                 />   \r\n                </div>                \r\n                <div style={{border:\"solid navy 2px\", marginLeft:20, marginTop:120} }>                \r\n                    PLAYER 2<br/>\r\n                    <ShuffleCardsAndShow  ref=\"childPlayer2\"\r\n                        elementsForCard = {this.elementsForCardNumbersPlayers}     myWidth=\"20vw\" myHeight = \"30vh\" myFont=\"10vw\" myColor=\"lightblue\"\r\n                    />  \r\n                </div>        \r\n            </div>       \r\n            \r\n            \r\n        </div>\r\n  \r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default GreaterLessEqual;\r\n","import React, {Component} from \"react\";\r\nimport ShuffleCardsAndShow from \"../../Components/ShuffleCardsAndShow\";\r\n\r\nclass ThreeLetterWordSounds extends Component {\r\n    \r\n    constructor(){\r\n        super();            \r\n        this.state = { letter0:\"\", letter1:\"\", letter2:\"\"}  ;\r\n        this.letter0Index=0;  \r\n        this.letter1Index=0;  \r\n        this.letter2Index=0;        \r\n\r\n        this.arrayOfWordsAsLettersInterChange =  [ [\"B\",\"E\",\"D\"], [\"B\", \"A\", \"N\"] , [\"B\",\"E\",\"G\"], [\"B\",\"E\",\"T\"], [\"B\",\"O\",\"X\"], [\"C\",\"A\",\"P\"], [\"D\",\"I\",\"D\"],  \r\n        [\"F\",\"A\",\"N\"], [\"F\",\"O\",\"R\"], [\"F\",\"U\",\"N\"], [\"G\",\"U\",\"M\"], [\"H\",\"A\",\"M\"], [\"H\",\"I\",\"M\"], [\"H\",\"O\",\"P\"], [\"J\",\"O\",\"G\"], [\"L\",\"E\",\"T\"], [\"L\",\"O\",\"G\"], \r\n        [\"M\",\"A\",\"C\"], [\"M\",\"A\",\"N\"], [\"M\",\"E\",\"N\"], [\"N\",\"A\",\"P\"], [\"P\",\"A\",\"D\"], [\"P\",\"A\",\"N\"], [\"P\",\"E\",\"N\"], [\"P\",\"E\",\"T\"], [\"P\",\"I\",\"C\"], [\"P\",\"I\",\"N\"], \r\n        [\"P\",\"O\",\"P\"], [\"R\",\"O\",\"T\"], [\"R\",\"U\",\"N\"], [\"S\",\"A\",\"G\"], [\"S\",\"A\",\"T\"], [\"S\",\"I\",\"P\"], [\"S\",\"I\",\"T\"], [\"S\",\"U\",\"N\"], [\"T\",\"A\",\"N\"], [\"Y\",\"E\",\"S\"] , \r\n        [\"Y\",\"E\",\"T\"], [\"W\",\"I\",\"G\"], [\"W\",\"E\",\"T\"], [\"W\",\"E\",\"B\"], [\"W\",\"A\",\"S\"], [\"V\",\"E\",\"T\"], [\"T\",\"U\",\"B\"], [\"T\",\"O\",\"P\"], [\"T\",\"A\",\"X\"], [\"T\",\"A\",\"P\"], \r\n        [\"T\",\"A\",\"G\"], [\"S\",\"O\",\"N\"], [\"S\",\"I\",\"X\"], [\"S\",\"E\",\"T\"], [\"S\",\"E\",\"C\"], [\"S\",\"A\",\"D\"], [\"R\",\"E\",\"D\"], [\"R\",\"A\",\"T\"], [\"R\",\"A\",\"M\"], \r\n        [\"P\",\"O\",\"T\"], [\"P\",\"O\",\"D\"], [\"P\",\"A\",\"T\"], [\"P\",\"A\",\"L\"], [\"N\",\"E\",\"T\"], [\"M\",\"I\",\"X\"], [\"M\",\"E\",\"T\"], [\"M\",\"E\",\"D\"], [\"M\",\"A\",\"T\"], \r\n        [\"M\",\"A\",\"P\"], [\"M\",\"A\",\"D\"], [\"L\",\"O\",\"T\"], [\"L\",\"I\",\"P\"], [\"K\",\"I\",\"D\"], [\"J\",\"O\",\"B\"], [\"H\",\"O\",\"T\"], [\"H\",\"I\",\"P\"], [\"H\",\"A\",\"S\"], [\"G\",\"O\",\"D\"], \r\n        [\"F\",\"O\",\"X\"], [\"F\",\"I\",\"X\"], [\"F\",\"A\",\"R\"], [\"D\",\"O\",\"C\"], [\"C\",\"A\",\"R\"],  [\"B\",\"A\",\"D\"],  \r\n        [\"B\",\"A\",\"G\"], [\"B\",\"A\",\"T\"], [\"B\",\"I\",\"G\"], [\"B\",\"O\",\"B\"], [\"B\",\"U\",\"T\"], [\"C\",\"A\",\"B\"], [\"B\",\"I\",\"T\"], \r\n        [\"C\",\"A\",\"N\"], [\"C\",\"A\",\"T\"], [\"C\",\"O\",\"D\"], [\"C\",\"U\",\"B\"], [\"C\",\"U\",\"P\"], [\"D\",\"A\",\"D\"], [\"D\",\"O\",\"G\"], [\"D\",\"I\",\"G\"], [\"D\",\"O\",\"T\"], \r\n        [\"F\",\"A\",\"T\"], [\"F\",\"E\",\"D\"], [\"F\",\"O\",\"G\"], [\"G\",\"A\",\"S\"], [\"G\",\"O\", \"T\"], [\"H\",\"A\",\"D\"], [\"H\",\"A\",\"T\"], [\"H\",\"E\",\"N\"], [\"H\",\"I\",\"D\"], \r\n        [\"H\",\"I\",\"S\"], [\"H\",\"U\",\"G\"], [\"J\",\"A\",\"R\"], [\"J\",\"E\",\"T\"], [\"L\",\"I\",\"D\"], [\"L\",\"O\",\"W\"], [\"M\",\"A\",\"X\"], [\"M\",\"O\",\"M\"], [\"N\",\"O\",\"D\"],  [\"N\",\"O\",\"T\"], \r\n        [\"P\",\"I\",\"G\"], [\"P\",\"U\",\"P\"], [\"R\",\"U\",\"B\"], [\"S\",\"U\",\"M\"], [\"T\",\"O\",\"N\"], [\"V\",\"A\",\"N\"], [\"W\",\"I\",\"N\"], [\"W\",\"O\",\"N\"] ];       \r\n    }        \r\n\r\n    componentDidMount () {\r\n        window.scrollTo(0, 0)\r\n    }\r\n    \r\n    getLetter0 = () => {\r\n        this.getLetter(0);\r\n    }\r\n    getLetter1 = () => {\r\n        this.getLetter(1);\r\n    }\r\n    getLetter2 = () => {\r\n        this.getLetter(2);\r\n    }\r\n\r\n    getNextDifferentLetter = (letterPositionInWord) => {\r\n                \r\n        let currentLetter = \"\";     \r\n        let newLetter = \"\";  \r\n        let newIndex = 0; \r\n        let foundDifferentLetter =  false;        \r\n        let currentRowIndex = null;\r\n        \r\n        switch(letterPositionInWord){\r\n            case 0:\r\n                currentRowIndex = this.letter0Index;\r\n                break;\r\n            case 1:\r\n                currentRowIndex = this.letter1Index;\r\n                break;\r\n            case 2:                \r\n                currentRowIndex = this.letter2Index;\r\n                break;\r\n        }\r\n\r\n        currentLetter =  this.arrayOfWordsAsLettersInterChange[currentRowIndex][letterPositionInWord];\r\n        while (!foundDifferentLetter){\r\n            (currentRowIndex == this.arrayOfWordsAsLettersInterChange.length -1 )? newIndex =0 : newIndex = currentRowIndex++; \r\n            newLetter =  this.arrayOfWordsAsLettersInterChange[newIndex][letterPositionInWord];\r\n            if (newLetter != currentLetter){\r\n                foundDifferentLetter = true;\r\n            }\r\n        }  \r\n\r\n        switch(letterPositionInWord){\r\n            case 0:\r\n                this.letter0Index = newIndex;\r\n                break;\r\n            case 1:\r\n                this.letter1Index = newIndex;\r\n                break;\r\n            case 2:                \r\n                this.letter2Index = newIndex;\r\n                break;\r\n        }        \r\n        \r\n        return newLetter;\r\n    }\r\n\r\n    getLetter = (letterNumber) => {                                        \r\n\r\n        let nextLetter = \"\";        \r\n        switch(letterNumber){\r\n            case 0:\r\n                {      \r\n                    nextLetter = this.getNextDifferentLetter(0);\r\n                    this.setState({letter0:nextLetter });                                             ;                                      \r\n                    break;\r\n                }\r\n            case 1:\r\n                {                   \r\n                    nextLetter = this.getNextDifferentLetter(1);\r\n                    this.setState({letter1:nextLetter });                                             ;                                      \r\n                    break;\r\n                }\r\n            case 2:\r\n                {                   \r\n                    nextLetter = this.getNextDifferentLetter(2);\r\n                    this.setState({letter2:nextLetter });                                             ;                                      \r\n                    break;\r\n                }\r\n        }\r\n                \r\n    }\r\n\r\n    render() {\r\n\r\n        var arrayOfWordsAsLetters  = [ [\"B\",\"E\",\"D\"], [\"B\", \"A\", \"N\"] , [\"B\",\"E\",\"G\"], [\"B\",\"E\",\"T\"], [\"B\",\"O\",\"X\"], [\"C\",\"A\",\"P\"], [\"D\",\"I\",\"D\"], [\"E\",\"G\",\"G\"], \r\n        [\"F\",\"A\",\"N\"], [\"F\",\"O\",\"R\"], [\"F\",\"U\",\"N\"], [\"G\",\"U\",\"M\"], [\"H\",\"A\",\"M\"], [\"H\",\"I\",\"M\"], [\"H\",\"O\",\"P\"], [\"J\",\"O\",\"G\"], [\"L\",\"E\",\"T\"], [\"L\",\"O\",\"G\"], \r\n        [\"M\",\"A\",\"C\"], [\"M\",\"A\",\"N\"], [\"M\",\"E\",\"N\"], [\"N\",\"A\",\"P\"], [\"P\",\"A\",\"D\"], [\"P\",\"A\",\"N\"], [\"P\",\"E\",\"N\"], [\"P\",\"E\",\"T\"], [\"P\",\"I\",\"C\"], [\"P\",\"I\",\"N\"], \r\n        [\"P\",\"O\",\"P\"], [\"R\",\"O\",\"T\"], [\"R\",\"U\",\"N\"], [\"S\",\"A\",\"G\"], [\"S\",\"A\",\"T\"], [\"S\",\"I\",\"P\"], [\"S\",\"I\",\"T\"], [\"S\",\"U\",\"N\"], [\"T\",\"A\",\"N\"], [\"Y\",\"E\",\"S\"] , \r\n        [\"Y\",\"E\",\"T\"], [\"W\",\"I\",\"G\"], [\"W\",\"E\",\"T\"], [\"W\",\"E\",\"B\"], [\"W\",\"A\",\"S\"], [\"V\",\"E\",\"T\"], [\"T\",\"U\",\"B\"], [\"T\",\"O\",\"P\"], [\"T\",\"A\",\"X\"], [\"T\",\"A\",\"P\"], \r\n        [\"T\",\"A\",\"G\"], [\"S\",\"P\",\"A\"], [\"S\",\"O\",\"N\"], [\"S\",\"I\",\"X\"], [\"S\",\"E\",\"T\"], [\"S\",\"E\",\"C\"], [\"S\",\"A\",\"D\"], [\"R\",\"E\",\"D\"], [\"R\",\"A\",\"T\"], [\"R\",\"A\",\"M\"], \r\n        [\"P\",\"O\",\"T\"], [\"P\",\"O\",\"D\"], [\"P\",\"A\",\"T\"], [\"P\",\"A\",\"L\"], [\"O\",\"D\",\"D\"], [\"N\",\"E\",\"T\"], [\"M\",\"I\",\"X\"], [\"M\",\"E\",\"T\"], [\"M\",\"E\",\"D\"], [\"M\",\"A\",\"T\"], \r\n        [\"M\",\"A\",\"P\"], [\"M\",\"A\",\"D\"], [\"L\",\"O\",\"T\"], [\"L\",\"I\",\"P\"], [\"K\",\"I\",\"D\"], [\"J\",\"O\",\"B\"], [\"H\",\"O\",\"T\"], [\"H\",\"I\",\"P\"], [\"H\",\"A\",\"S\"], [\"G\",\"O\",\"D\"], \r\n        [\"F\",\"O\",\"X\"], [\"F\",\"I\",\"X\"], [\"F\",\"A\",\"R\"], [\"D\",\"O\",\"C\"], [\"C\",\"O\",\"W\"], [\"C\",\"A\",\"R\"],  [\"B\",\"A\",\"D\"], [\"A\",\"R\",\"M\"], [\"A\",\"R\",\"C\"], [\"A\",\"R\",\"T\"], \r\n        [\"A\",\"P\",\"P\"], [\"A\",\"R\",\"E\"], [\"A\",\"R\",\"T\"], [\"B\",\"A\",\"G\"], [\"B\",\"A\",\"T\"], [\"B\",\"I\",\"G\"], [\"B\",\"O\",\"B\"], [\"B\",\"U\",\"T\"], [\"C\",\"A\",\"B\"], [\"B\",\"I\",\"T\"], \r\n        [\"C\",\"A\",\"N\"], [\"C\",\"A\",\"T\"], [\"C\",\"O\",\"D\"], [\"C\",\"O\",\"W\"], [\"C\",\"U\",\"B\"], [\"C\",\"U\",\"P\"], [\"D\",\"A\",\"D\"], [\"D\",\"O\",\"G\"], [\"D\",\"I\",\"G\"], [\"D\",\"O\",\"T\"], \r\n        [\"E\",\"N\",\"D\"], [\"F\",\"A\",\"T\"], [\"F\",\"E\",\"D\"], [\"F\",\"O\",\"G\"], [\"G\",\"A\",\"S\"], [\"G\",\"O\", \"T\"], [\"H\",\"A\",\"D\"], [\"H\",\"A\",\"T\"], [\"H\",\"E\",\"N\"], [\"H\",\"I\",\"D\"], \r\n        [\"H\",\"I\",\"S\"], [\"H\",\"U\",\"G\"], [\"J\",\"A\",\"R\"], [\"J\",\"E\",\"T\"], [\"L\",\"I\",\"D\"], [\"L\",\"O\",\"W\"], [\"M\",\"A\",\"X\"], [\"M\",\"O\",\"M\"], [\"N\",\"O\",\"D\"],  [\"N\",\"O\",\"T\"], \r\n        [\"P\",\"I\",\"G\"], [\"P\",\"U\",\"P\"], [\"R\",\"U\",\"B\"], [\"S\",\"U\",\"M\"], [\"T\",\"O\",\"N\"], [\"V\",\"A\",\"N\"], [\"W\",\"I\",\"N\"], [\"W\",\"O\",\"N\"] ];                                \r\n\r\n        var cardStyles = {\r\n            width:\"100%\",            \r\n            textAlign: \"center\",\r\n            display:\"flex\",\r\n            flexDirection:\"row\",\r\n            justifyContent:\"center\",\r\n            fontSize:\"3vw\",            \r\n            alignItems:\"flex-start\",            \r\n        }\r\n\r\n      return(\r\n  \r\n        \r\n        \r\n      <React.Fragment>\r\n         <div className=\"TopMarginToDealWithNavBarAll\">\r\n            <div className=\"CenterMe\">\r\n                Scroll down to to see a list of words you can copy paste print.<br/><br/>\r\n                Click on a square to uncover a new letter.  It is recommended to try to make the sounds of the last 2 letters first, then add the first sound to it.<br/><br/>\r\n\r\n                <div style={cardStyles}>                \r\n                    <div style={{  background:\"lightpink\", width: \"15vw\", border: \"outset 5px black\", height:\"25vh\", cursor:\"pointer\" }} onClick={this.getLetter0}>\r\n                    <span style={{ fontSize:\"10vw\" }}>{this.state.letter0}</span>                 \r\n                    </div>   \r\n                    <div style={{ background:\"lightblue\", width: \"15vw\", border: \"outset 5px black\", height:\"25vh\", cursor:\"pointer\" }} onClick={this.getLetter1}>\r\n                    <span style={{ fontSize:\"10vw\" }}>{this.state.letter1}</span>                 \r\n                    </div>   \r\n                    <div style={{ background:\"lightblue\", width: \"15vw\", border: \"outset 5px black\", height:\"25vh\", cursor:\"pointer\" }} onClick={this.getLetter2}>\r\n                    <span style={{ fontSize:\"10vw\" }}>{this.state.letter2}</span>                 \r\n                    </div>                              \r\n                   \r\n                </div>   \r\n\r\n                <br/><br/>\r\n                <br/><br/>                                                             \r\n                \r\n                {/*use map, not foreach, map gets a new object that we show}*/}\r\n                {arrayOfWordsAsLetters.map( (item, index) =>\r\n                                   \r\n                    <div>\r\n                        <span className=\"letterCardsForReadingWorkds\"> {item[1]}</span>\r\n                        <span  className=\"letterCardsForReadingWorkds\">{item[2]}</span>\r\n                        <span  style={{color:\"navy\", fontSize:\"20vh\"}}>-</span>\r\n                        <span className=\"letterCardsForReadingWorkds\" style={{background:\"lightpink\"}}>{item[0]}</span>\r\n                        <span  className=\"letterCardsForReadingWorkds\">{item[1]}</span>\r\n                        <span  className=\"letterCardsForReadingWorkds\" >{item[2]}</span> \r\n                        <hr style={{height:\"5px\", backgroundColor:\"navy\" }}></hr>\r\n                    </div>                        \r\n                    \r\n                    \r\n                )}\r\n                \r\n\r\n                \r\n            </div>        \r\n        </div>\r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default ThreeLetterWordSounds;","import React from \"react\";\r\n\r\nfunction BeginEndSounds () {\r\n             \r\n\r\n    \r\n      return(        \r\n        \r\n      <React.Fragment>\r\n         <div className=\"TopMarginToDealWithNavBarAll\">\r\n\r\n         <br/>\r\n\r\n            <div className=\"CenterMe\">\r\n\r\n                <div className=\"CenterMyBorder\">\r\n                    <br/>\r\n                    This page is just a PDF to work on beginning and end sounds.  Open it to see the instructions.  You can go to the READ activity to try to read some words from the letter sounds.                \r\n                    <br/>    <br/>                      \r\n                </div>\r\n                <br/>\r\n                <div style={{textAlign:\"center\"}}>\r\n                    <a className=\"buttonPrintable\" style={{textDecoration:\"none\"}} href=\"startandendsounds.pdf\" target=\"_new\">OPEN IT!</a>\r\n                </div>\r\n                \r\n\r\n                \r\n            </div>        \r\n        </div>\r\n      </React.Fragment>)\r\n  };  \r\n  \r\n  export default BeginEndSounds;","import React from \"react\";\r\n\r\nfunction ThreeLetterRhymes () {\r\n             \r\n\r\n    \r\n      return(        \r\n        \r\n      <React.Fragment>\r\n         <div className=\"TopMarginToDealWithNavBarAll\">\r\n\r\n         <br/>\r\n\r\n            <div className=\"CenterMe\">\r\n\r\n                <div className=\"CenterMyBorder\">\r\n                    <br/>\r\n                    Open the PDF and print it, laminate it if possible, cut the cards, and play.\r\n                    <br/>\r\n                    You choose how to play.  We give some cards to each player and then uncover one from a stack and see who has a card that rhymes with it.  \r\n                    <br/>    <br/>                      \r\n                </div>\r\n                <br/>\r\n                <div style={{textAlign:\"center\"}}>\r\n                    <a className=\"buttonPrintable\" style={{textDecoration:\"none\"}} href=\"rhymes.pdf\" target=\"_new\">OPEN IT!</a>\r\n                </div>\r\n                \r\n\r\n                \r\n            </div>        \r\n        </div>\r\n      </React.Fragment>)\r\n  };  \r\n  \r\n  export default ThreeLetterRhymes;","import React, {Component} from \"react\";\r\nimport ShuffleCardsAndShow from \"../../Components/ShuffleCardsAndShow\";\r\n\r\nclass PlusOnePlusZero extends Component {\r\n\r\n    constructor()\r\n    {\r\n        super();   \r\n        //default is  1 or 0                         \r\n        this.state = { result:\"?\", elementsForWhatToAdd:[0,1], elementsForWhatToAddTo: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] }\r\n        //this.elementsForWhatToAdd = [0, 1] ;\r\n        //this.elementsNumber = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]  ;        \r\n\r\n        this.numberWeAddTo = 0;\r\n        this.numberBeingAdded = 0;\r\n        \r\n        //\r\n    }     \r\n\r\n    setOption = (optionString) => {\r\n        if (optionString == \"any\"){\r\n            this.setState({elementsForWhatToAdd:[1,2,3,4,5,6,7,8,9, 10], elementsForWhatToAddTo:[1,2,3,4,5,6,7,8,9, 10]});            \r\n        }else{\r\n            this.setState({elementsForWhatToAdd:[1,0], elementsForWhatToAddTo : [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]});            \r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    getNewResults = () => {        \r\n        this.setState({result: \"?\"}); \r\n        this.refs.numberWeAddTo.roll();\r\n        this.refs.numberBeingAdded.roll();                        \r\n    }    \r\n\r\n    storeResultNumberWeAddTo = (number) => {\r\n        this.numberWeAddTo = number;    \r\n    }\r\n    storeResultNumberBeingAdded = (number) => {\r\n        this.numberBeingAdded = number;\r\n    }\r\n\r\n    showResult = () => {\r\n        this.setState({result: this.numberBeingAdded + this.numberWeAddTo});\r\n    }\r\n\r\n    render() {\r\n        var cardStyles = {\r\n            width:\"100%\",            \r\n            textAlign: \"center\",\r\n            display:\"flex\",\r\n            flexDirection:\"row\",\r\n            justifyContent:\"center\",\r\n            fontSize:\"3vw\",            \r\n            alignItems:\"flex-start\"\r\n        }\r\n      return(\r\n  \r\n      \r\n      <React.Fragment>\r\n         \r\n         <div className=\"TopMarginToDealWithNavBarAll CenterMe\"> \r\n            Choose  whether you want to add only 1 or 0 to a number or any numbers 1-10 (Default is 0 or 1).<br/>\r\n            Click the button to get your numbers.<br/>\r\n            Guess the result and click on the last square to see if you were right.<br/><br/>\r\n            {/*todo set the default so it doesn't go back to it after first round*/}\r\n            <div className=\"radio-toolbar\">    \r\n            <input type=\"radio\" id=\"1or0\" name=\"option\" value=\"1or0\" onChange = { () => this.setOption(\"1pr0\")}/>\r\n            <label htmlFor=\"1or0\">Add 1 or 0 to Number</label>\r\n\r\n            <input type=\"radio\" id=\"any\" name=\"option\" value=\"any\" onChange = { () => this.setOption(\"any\")}/>\r\n            <label htmlFor=\"any\">Add any Numbers 1-10</label>\r\n            </div>\r\n            <button className= \"buttonGeneral\" onClick={this.getNewResults}>Get Numbers!</button>   <br/><br/>\r\n            \r\n            <br/><br/>\r\n            <div style={cardStyles}>                \r\n                <div >                            \r\n                    <ShuffleCardsAndShow  ref=\"numberWeAddTo\"\r\n                        elementsForCard = {this.state.elementsForWhatToAddTo} myWidth=\"15vw\" myHeight = \"25vh\" myFont=\"10vw\" myColor=\"lightblue\" callbackFunction= {this.storeResultNumberWeAddTo}\r\n                    />  \r\n                </div>\r\n                <div style={{  width: \"15vw\" , height:\"25vh\"}}>\r\n                   <span style={{ fontSize:\"10vw\" }}>+</span>                 \r\n                </div>                \r\n                <div >                                   \r\n                    <ShuffleCardsAndShow  ref=\"numberBeingAdded\"\r\n                        elementsForCard = {this.state.elementsForWhatToAdd} myWidth=\"15vw\" myHeight = \"25vh\" myFont=\"10vw\" myColor=\"lightblue\" callbackFunction= {this.storeResultNumberBeingAdded}\r\n                    />  \r\n                </div>  \r\n                <div style={{  width: \"10vw\", height:\"25vh\" }}>\r\n                   <span style={{ fontSize:\"10vw\" }}>=</span>                 \r\n                </div>      \r\n                <div style={{  width: \"15vw\", border: \"outset 5px black\", height:\"25vh\", cursor:\"pointer\" }} onClick={this.showResult}>\r\n                   <span style={{ fontSize:\"10vw\" }}>{this.state.result}</span>                 \r\n                </div>   \r\n            </div>       \r\n            \r\n            \r\n        </div>\r\n  \r\n      </React.Fragment>)\r\n  };\r\n  }\r\n  \r\n  export default PlusOnePlusZero;\r\n","import React from \"react\";\r\n\r\nfunction MinorPrintables () {\r\n             \r\n\r\n    \r\n      return(        \r\n        \r\n      <React.Fragment>\r\n         <div className=\"TopMarginToDealWithNavBarAll\">\r\n\r\n         <br/>\r\n\r\n            <div className=\"myContentsAreGrid1\">\r\n                \r\n                <br/>\r\n                <div style={{textAlign:\"center\"}}>\r\n                    <a className=\"buttonPrintable\" style={{textDecoration:\"none\"}} href=\"authorvsillustrator.pdf\" target=\"_new\">Author vs Illustrator!</a>\r\n                </div>\r\n\r\n                <br/><br/>\r\n                <div style={{textAlign:\"center\"}}>\r\n                    <a className=\"buttonPrintable\" style={{textDecoration:\"none\"}} href=\"patterns.pdf\" target=\"_new\">Patterns!</a>\r\n                </div>\r\n                \r\n\r\n                \r\n            </div>        \r\n        </div>\r\n      </React.Fragment>)\r\n  };  \r\n  \r\n  export default MinorPrintables;","import React from \"react\";\nimport animationscss from \"../SoftwareNotes/animations.css\";\n\nconst CSSAnimations = () => (                  \n    \n    <React.Fragment>\n        <div className=\"TopMarginToDealWithNavBarAll\">\n            <div className=\"CenterMyBorder\">   \n\n                <h1>Transforms, transitions, animations</h1> \n                A <strong>transform</strong> is just changing the appearance of something.  A <strong>transition</strong> is a type of animation, \n                one that happens between just 2 states (start and an end).\n                For animations beyond this, we use what we call <strong>animations (with keyframes)</strong> \n                When the animation has to happen <strong>on load</strong>, even if it's a simple one, we need to use keyframes.  \n                This is just a summary to clarify the types. you can find some really cool animations in codepen:\n                 <a href=\"https://codepen.io/search/pens?q=css+animation\" target=\"_new\">https://codepen.io/search/pens?q=css+animation</a>\n\n                <br/><br/>\n\n                <h2><u>TRAMSFORMS</u></h2><br/>\n\n                    <h3>Transform - Rotate</h3>\n                \n                    Use with transform to rotate <strong> transform: rotate(15deg) </strong>or similar (you don't have to use px units)\n                \n                    <div style={ {margin: \"10px\", width:\"100px\", height:\"100px\", transform: \"rotate(15deg)\", backgroundColor: \"deeppink\" }}> Hello </div>\n\n                    <h3>Transform - translate</h3>\n                \n                    Use with transform reposition: <strong>  transform: translate(45px, 10px)</strong>or similar (you don't have to use px units)\n                \n                    <div style={ {margin: \"10px\", width:\"100px\", height:\"100px\", transform: \"translate(45px, 10px)\", backgroundColor: \"deeppink\" }}> Hello </div>\n\n                    <h3>Transform - scale</h3>\n                \n                    Use with transform to scale both axis or just X (will apply the same to both): <strong>  transform: scale(0.7, 0.5)</strong>or similar (you don't have to use px units)\n\n                    <div style={ {margin: \"10px\", width:\"100px\", height:\"100px\", transform: \"scale(0.7, 0.5)\", backgroundColor: \"deeppink\" }}> Hello </div>\n\n                    <h3>Transform - Skew</h3>\n                \n                    Use with transform to skew: <strong>   transform: skew(10deg, 15deg)</strong>or similar (you don't have to use px units)\n\n                    <div style={ {margin: \"10px\", width:\"100px\", height:\"100px\", transform: \"skew(10deg, 15deg\", backgroundColor: \"deeppink\" }}> Hello </div>\n\n                    <br/>\n\n                <h2><u>TRANSITIONS</u></h2><br/>\n\n                    These can be used when something happens, like when the user hovers over the element.  Set the transition in the element and it will do that\n                    when it changes to the hover state.<br/>\n\n                    <h3> transition: width 2s, height 2s; (Hover to see it)</h3> \n    \n                    <div className=\"transition1\"> Hello </div>\n\n                    <h3> transition: width 2s, height 2s; transition-delay:2s; (Hover to see it, but wait for the delay start)</h3> \n    \n                    <div className=\"transition2\"> Hello </div>\n\n\n                    <h3> transition: width 2s, height 2s; transition-duration:2s;  (Hover to see it)</h3> \n    \n                    <div className=\"transition3\"> Hello </div>\n\n                    <h3> transition: width 2s, height 2s; transition-timing-function:ease;  (Hover to see it)</h3> \n    \n                    Values for transition-timing-function: \n                    <ul>\n                        <li>ease (slow, fast, slow)</li>\n                        <li>linear (same speed all the way)</li>\n                        <li>ease-in (slow start)</li>\n                        <li>ease-out (slow end)</li>\n                        <li>ease-in-out (slow start and end)</li>\n                        <li>cubic-bezier(n,n,n,n) (define own values) </li>\n                    <br/></ul>   \n                    <div className=\"transition4\"> Hello </div> <br/>\n                \n                    we can combine the above in the matrix method, in the form: matrix(scaleX(),skewY(),skewX(),scaleY(),translateX(),translateY())\n                    There are similar transform methods for 3D transforms. Check w3schools. \n                \n                <br/><br/>\n\n                <h2><u>ANIMATIONS</u></h2><br/>\n\n                These happen when the page is loaded so refresh to see them again if the iteration count has been reached. <br/>\n\n                <h3>Color A to Color B</h3><br/>\n                set the keyframe:<br/>\n                @keyframes example1 {\"{\"} from {\"{\"} background-color: deeppink; {\"}\"} to {\"{\"} background-color: deepskyblue; {\"}}\"}<br/>\n                <br/>\n                Then use it in your element: <br/>\n                .classForElement {\"{\"} width: 100px; height: 10px; background-color: deeppink; animation-name: example1; animation-duration: 4s;animation-iteration-count: 5 } <br/>\n                <br/>\n                <div className=\"animation1\"> Hello </div> <br/>\n\n                <h3>various colors transitions at different intervals</h3><br/>\n                set the keyframe:<br/>\n                @keyframes example2 {\"{\"} 0% {\"{\"} background-color: deepskyblue; left: 0px; top: 0px; {\"}\"} 25% {\"{\"} \n                background-color: yellow; left: 50px; top: 0px; {\"}\"} 50% {\"{\"} background-color: blue; left: 75px; top: 0px; } \n                100% {\"{\"} background-color: green; left: 0px; top: 0px; {\"} }\"}                 <br/>\n                <br/>\n                Then use it in your element: <br/>\n                .classElement {\"{\"} width: 100px; height: 100px; background-color: deeppink; animation-name: example2; animation-duration: 8s; \n                position: relative; animation-delay: 2s; animation-iteration-count: 3; {\"}\"} <br/>\n                <br/>\n                <div className=\"animation2\"> Hello </div> <br/>\n\n                Could also set an animation-direction to one of (normal ,reverse , alternate ,alternate-reverse ). \n                Could also have animation-timing-function with values (ease , linear, ease-in, ease-out, ease-in-out, cubic-bezier(n,n,n,n)). \n                We can also have animation-fill-mode (see bellow) which sets the properties when the animation is not running (none, forwards, backwards, both).<br/>\n\n\n\n            </div>\n        </div>\n    </React.Fragment>\n)\n\nexport default CSSAnimations;\n","import React from \"react\";\nimport animationscss from \"../SoftwareNotes/animations.css\";\n\nconst CSSPositioning = () => (                  \n    \n    <React.Fragment>\n        <div className=\"TopMarginToDealWithNavBarAll\">\n            <div className=\"CenterMyBorder\">   \n\n            {/* POSITION */}\n               Don't know if it's just me, but positioning things around always makes me spend more time than I should.  Let me try a summary with descriptions for \n               some concepts and images for others.\n               <br/><br/>\n\n               <strong style={{color:\"deeppink\"}}> <u>The position property:</u> </strong> With CSS we can set an element to have a positioning property, with values STATIC, RELATIVE,\n               ABSOLUTE, FIXED, STICKY.\n               <br/><br/>\n\n                <strong>STATIC (nothing to see)</strong> is the default position.  An element with this value will be positioned according to the normal flow, so nothing exciting here.\n\n                <br/><br/>\n                <strong>RELATIVE (to where I should be if I were static)</strong> will position an element <strong>relative to where it would be based on the normal flow</strong>.  To indicate the relativeness of the element,\n                we can use the top, bottom, left, and right properties (we don't need to set all).  So saying <strong>position: relative; left: 30px; </strong>will move the element\n                30px to the right (30px from the normal left position)\n\n                <br/><br/>\n                <strong>FIXED (right at this point in the viewport no matter what)</strong> will position the element <strong>relative to the viewport</strong>, always, even if the page is scrolled.  Use the same left, right, \n                top, bottom properties to set it up.\n\n                <br/><br/>\n                <strong>ABSOLUTE (where is my non static parent?)</strong> will position an element relative to the <strong>nearest positioned ancestor</strong>.  If \n                an absolute positioned element has no positioned ancestors, it uses the document body.  What is a positioned ancestor?  One that has the position property \n                set to anything other that STATIC.  If you use <strong>position: absolute;top: 80px; right: 0;</strong> you are saying, this\n                element is positioned relative to its closest ancestor which is not static, and it's positioned 80px south of that element, and aligned with \n                the end of that parent element.\n\n                <br/><br/>\n                <strong>STICKY (Oh no, I will not scroll out of view)</strong> will position the element based on the user's scroll position.  It is positioned relative until a given offset position is met in the viewport \n                <strong>position: sticky;  top: 0;</strong> will be wherever it's supposed to be (relative) until it gets to the top (top:0) and then it just sticks there\n                so it won't keep scrolling up.\n\n                <br/><br/>\n                <strong>Depth - </strong>If you want an element to be behind another one (like an image behind text), you can set it's z property : <strong>z-index: -1;</strong>  You also use \n                other numbers in the z-index if you have additional elements.\n\n                <br/><br/>\n                If there are contradicting properties, top wins over bottom, and left wins over right.\n               <br/><br/>\n\n\n                {/* FLEX CONTAINER */}\n               <strong style={{color:\"deeppink\"}}> <u>FLEX container (display) and its items:</u> </strong><br/><br/>\n                Here come some images for how to set the <strong>container of the items </strong>(when the container is flex, the items are flexible)<br/><br/>\n\n                <img src=\"/images/SoftwareNotes/display_flex_direction_1.png\" alt=\"CSS Positioning notes\" style={{width:\"99%\"}}></img>    \n                <img src=\"/images/SoftwareNotes/display_flex_direction__text_align_2.png\" alt=\"CSS Positioning notes\" style={{width:\"99%\"}}></img> \n                <img src=\"/images/SoftwareNotes/display_flex_direction__text_align_3.png\" alt=\"CSS Positioning notes\" style={{width:\"99%\"}}></img> \n                <img src=\"/images/SoftwareNotes/display_flex_direction_wrap_4.png\" alt=\"CSS Positioning notes\" style={{width:\"99%\"}}></img> \n                <img src=\"/images/SoftwareNotes/display_flex_justify_5.png\" alt=\"CSS Positioning notes\" style={{width:\"99%\"}}></img> \n                <img src=\"/images/SoftwareNotes/display_flex_align_items_6.png\" alt=\"CSS Positioning notes\" style={{width:\"99%\"}}></img> \n                <img src=\"/images/SoftwareNotes/display_flex_align_contents_7.png\" alt=\"CSS Positioning notes\" style={{width:\"99%\"}}></img> \n                \n\n                <br/><br/>\n                And here come some images for what the <strong>child elements</strong> can do.<br/><br/>\n                <img src=\"/images/SoftwareNotes/display_flex_items_order_8.png\" alt=\"CSS Positioning notes\" style={{width:\"99%\"}}></img> \n                <img src=\"/images/SoftwareNotes/display_flex_items_9.png\" alt=\"CSS Positioning notes\" style={{width:\"99%\"}}></img> \n                <img src=\"/images/SoftwareNotes/display_flex_items_flexgrow_10.png\" alt=\"CSS Positioning notes\" style={{width:\"99%\"}}></img> \n\n                {/* CSS GRID */}\n                <strong style={{color:\"deeppink\"}}> <u>CSS GRID:</u> </strong><br/><br/>\n                A grid an element (parent) with a bunch of other elements inside (items which are the children).  This containing parent \n                has to be a the type <strong>display: grid</strong> (or inline-grid)<br/>\n                The parent also has properties grid-template-columns: 40px 50px auto 50px 40px; and grid-template-rows: 50% 100px auto; to \n                determine the number of cols / rows and their width and height.  There are ways to set cols and rows more dynamically\n                so look for examples of what you need online.  Items (children) also have a few properties if you need to go beyond the basics.\n                A good explanation can be found <a target=\"_new\" href=\"https://css-tricks.com/snippets/css/complete-guide-grid/#:~:text=Animation%20%20%20%20Browser%20%20%20,not%20supported%20%E2%9D%8C%20%201%20more%20rows%20\">\n                    here</a>                \n\n\n\n            </div>\n        </div>\n    </React.Fragment>\n)\n\nexport default CSSPositioning;\n","import React  from \"react\";\n\nconst ReactNotes1 = () => (                  \n    \n    <React.Fragment>\n        <div className=\"TopMarginToDealWithNavBarAll\">\n            <div className=\"CenterMyBorder\">   \n\n               This assumes minimum familiarity with React.  It's just a bit of a summary of the basics.  A great place to test some React and see what happens\n               is <strong><a href=\"https://stackblitz.com/edit/react-ajunq2?file=index.js\" target=\"_new\">https://stackblitz.com/edit/react-ajunq2?file=index.js</a></strong>  I'll\n               add an index if this gets too long.\n               <br/><br/>\n               \n               <h1><u>How the app starts rolling:</u></h1>\n               <br/><br/>\n               You still need an <strong>index.html</strong> in your web app, which is where things will be put into.  You can set the viewport and meta etc, \n               as for a regular html file.  This HTML file should have <br/><br/>\n               <div className=\"CodeContainer\">\n               &emsp;{\"<div\"} id=\"root\" {\"></\"}div{\">\"}\n               </div>     \n               <br/><br/>\n               You will also have an <strong>index.js</strong> file.  This file can have <strong>Routing </strong>(coming later) and imports for components needed for the routing,\n               but at the very least it needs to have:\n               <div className=\"CodeContainer\">\n               &emsp; ReactDOM.render( WHATEVERWeWantToRender , document.getElementById('root'));\n               </div>     \n               If you don't have routing, the WHATEVER is usually <strong>{\"<\"}App{\"/>\"} </strong> or another main component.               \n               <br/><br/>\n\n               <h1><u>Components as classes or functions</u></h1>\n               You can create React components as <strong>classes or as functions</strong>.  You don't need to use the class form if \n               you don't need to keep state for that component.     An example of a function component would be:     \n               <div className=\"CodeContainer\">\n                    <strong>function</strong> HelloThere(props) {\"{\"} <br/>\n                    &emsp; return {\"<h1>\"}Hello There {\"</h1>\"};<br/>\n                    {\"}\"}<br/>\n                    export default HelloThere;\n               </div>\n                Now that we have the function above, we can import it and use it to be rendered.  Make sure it has the export default so just by importing the file React\n                 knows what to do (more later).  If the file were called <strong>Hello.js</strong> we would import it with \n                 <div className=\"CodeContainer\">\n                 &emsp;import Hello from './HelloOrWherever';\n                 </div>\n                 And then in the render of whatever component was using it we would just render it \n                 <div className=\"CodeContainer\">\n                    &emsp;render() {\"{\"}<br/>\n                    &emsp;&emsp;return (<br/>\n                    &emsp;&emsp;&emsp;   {\"<\"}div{\">\"}<br/>\n                    &emsp;&emsp;&emsp;&emsp; {\"<\"}Hello {\"/>\"}<br/>\n                    &emsp;&emsp;&emsp;{\"</\"}div{\">\"}\n                </div>                    \n                or in the ReactDOM.render itself\n                <div className=\"CodeContainer\">\n                    &emsp;{\"render(<Hello />, document.getElementById('root'));\"}\n                </div>\n                We could also have the same function this way:\n                <div className=\"CodeContainer\">\n                    &emsp;{\"const HelloThere = () => (  \"}<br/>\n                    &emsp;&emsp;    {\"<h1>Hello There you </h1>\"})\n                </div>\n                We could also have (props) instead of () if we are going to be getting any props.<br/><br/>\n                So how about if we were using the <strong>class way</strong> instead of the function way?  We shoulnd't in this case because there is no state, but if we were:\n                <div className=\"CodeContainer\">\n                    &emsp;{\"import React, {Component} from 'react';\"} <em>---- don't import only react, you also need Component </em><br/>\n                    &emsp;{\"class HelloThere extends Component {\"} <em>---- extend Component</em><br/>\n                    &emsp;&emsp;{\"   constructor(props){\"} <em>---- props is passed automatically, and you get a constructor</em><br/>\n                    &emsp;&emsp;&emsp;{\"      super(props);\"} <em>---- call super before you do other things in the constructor </em><br/>\n                    &emsp;&emsp;&emsp;{\"      //whatever we need to do here to set state if we are using it\"}<br/>\n                    &emsp;&emsp;{\"}\"}<br/><br/>\n                    &emsp;{\"render() {\"} <br/>\n                    &emsp;&emsp;{\"   return( \"}<br/>\n                    &emsp;&emsp;&emsp;{\"      <React.Fragment>\"}<br/>\n                    &emsp;&emsp;&emsp;&emsp;{\"         <h1>Hello There you </h1>\"}<br/>\n                    &emsp;&emsp;&emsp;{\"      </React.Fragment>\"}<br/>                    \n                    &emsp;&emsp;{\")\"}<br/>\n                    &emsp;{\"};\"} <br/>                   \n                    &emsp;{\"}\"}<br/>\n\n                    &emsp;export default HelloThere;\n                </div>\n                When creating components, we can have more than one component on the same file.  If that is the case, we can choose which component will be the \n                default one.  if we set a default component with export default whatever, when we import the file we can do it without needing to indicate\n                in curly braces.  Below we don't have a default.\n                <div className=\"CodeContainer\">\n                    &emsp;{\"class Component1 {}\" } <em>---- Some file that has more than one component</em><br/>\n                    &emsp;{\"class Component2 {}\" } <br/>\n                    <br/>\n                    &emsp; {\"export { Component1, Component2 }\"} <em>---- export both but there is no default</em><br/>\n                    &emsp; {\"import {Component1, Component2} from './components/componentsHere'\"} <em>import each component we need</em>\n                </div>\n                On this one we will have a default (we are setting component1 as the export default of the file), so see how the import is different.\n                <div className=\"CodeContainer\">\n                    &emsp; {\"import Component1ButICanRenameItAndKnowWhichOneBecauseItIsTheDefault, {Component2} from './components/componentsHere'\"} \n                </div>\n                <br/><br/>\n                <h1><u>State and Props</u></h1>\n                State is what you use to keep track of things (states) on a component.  Props are what you can pass from one component to another one, and this includes\n                a copy of the state.  Passing a state to another component doesn't give the second component access to change state.<br/>\n                If we need a component to have a state, we need to create it as a class (for now as far as these basic notes goes).<br/>\n                We can only set the state directly in the constructor of the component.  After that, we need to set it by calling SetState.\n                <div className=\"CodeContainer\">\n                    &emsp; {\"constructor() {\"}<br/>\n                    &emsp;&emsp;{\"super();\"} <br/>\n                    &emsp;&emsp;&emsp;{\"this.state = {\"}<br/>\n                    &emsp;&emsp;&emsp;&emsp;{\"name: 'React', name2:'So Cool '\"}<br/>\n                    &emsp;&emsp;{\"}};\"}<br/>\n                    &emsp;{\"}\"}<br/>\n                </div>\n\n                If somewhere else in the component we want to change the state because an onClick or whatever happened, we will do it with setState.  \n                The state may not change right away, it is async, so don't count on that on the rest of your code.  If there is something you \n                want to do AFTER the state has changed, use the callback function (second argument to setState)\n                <div className=\"CodeContainer\">\n                    &emsp; {\" this.setState( {name2: someVariableOrString}, this.someFunctionThatWillBeCalledWhenStateChanges);\"}  \n                </div>\n                to pass the state to another component, it will be passed as props to that component.\n                <div className=\"CodeContainer\">\n                    &emsp;{\"<Hello name={this.state.name} name2={this.state.name2} />  \"}<br/>\n                </div>\n                The component using it could have something as simple as this:\n                <div className=\"CodeContainer\">\n                 &emsp; {\"export default ( { name ,name2} ) => <h1>Hello {name} and {name2} !</h1>;\"}\n                </div>\n                Or it could be a function or class that takes props.\n                <div className=\"CodeContainer\">\n                    &emsp;{\"class Hello extends Component {        \"}<br/>\n                    &emsp; &emsp;{\"constructor(props)\"}<br/>\n                    &emsp; &emsp;{\" {\"}<br/>\n                    &emsp; &emsp; &emsp;{\"super(props);    \"}<br/>\n                    &emsp; &emsp; &emsp;...<br/>\n                </div>      \n                And then in Hello we can access the state values with props.name and props.name2  <br/>\n                We cannot change the state in the parent component from the child, but we can pass a function from the parent to the child, that the child\n                will call to have the parent change the state.  It would be something like this:<br/>\n                We have a component SomeComponent being used in the parent and pass to it a \n                <div className=\"CodeContainer\">\n                    &emsp; {\"<SomeComponent functionToCall= {this.thisFunctionUpdatesSomethingInTheParentAndIsInTheParent}/>\"}\n                </div>\n                The parent has that function in it and it takes an argument\n                <div className=\"CodeContainer\">\n                    &emsp;{\"thisFunctionUpdatesSomethingInTheParentAndIsInTheParent = (txt) => {  \"}<br/>\n                    &emsp;&emsp;{\"   We do something here  \"}\n                    &emsp;{\"}\"}\n                </div>\n                Then on the child component, we can have a click event that will call a function, which will call the function in the parent.\n                <div className=\"CodeContainer\">\n                    &emsp;{\"<button onClick={this.functionInChild}\"}<br/><br/>\n                    &emsp; {\"functionInChild = () => {                \"}<br/>\n                    &emsp;&emsp;{\" this.props.functionToCall(someValueWeNeedToPassBackToTheParent);\"}<br/>\n                    &emsp;{\"}\"}\n                </div>\n                When the state has changed, the component will render, but we can also call forceUpdate to make it render right away.  Calling forceUpdate before\n                the state has changed will not help.<br/>\n                We can take props in general with (props) or we can speficy the elements of props so we don't have to use props to access them in the <code className=\"\"></code>\n                <div className=\"CodeContainer\">\n                    &emsp; {\"const Hello = ( {name, name2}) => {\"}<br/>\n                    &emsp;&emsp;{\"return <h1>Hello {name} and {name2} !</h1>\"} <br/>\n                </div>\n                <div className=\"CodeContainer\">\n                    &emsp; {\"const Hello = (props) => {\"} <br/>\n                    &emsp;&emsp;{\"return <h1>Hello {props.name} and {props.name2} !</h1>\"} <br/>\n                </div>\n                If you need to change state and you need the previous state and/or props to do it, do it this way:\n                <div className=\"CodeContainer\">\n                    &emsp; {\"this.setState( (state,props) => (\"} <br/>\n                    &emsp;&emsp;{\"    {counting = state.counting + props.increment}\"} <br/>\n                    &emsp; {\"));\"}\n                    <br/>\n                    OR <br/>\n                    &emsp; {\"this.setState( function(state,props) {\"} <br/>\n                    &emsp;&emsp;{\" return {counting = state.counting + props.increment}}\"} <br/>\n                    &emsp; {\"));\"}\n                </div>\n                <br/><br/>\n                <h1><u>Props.children</u></h1>\n                this.props.children is passed to components automatically.\n                Easier seem with an example:\n                <div className=\"CodeContainer\">\n                    &emsp; {\"render() {\"}  <br/>\n                    &emsp; &emsp;{\"return (\"} <br/>\n                    &emsp; &emsp; &emsp;{\"<div>\"} <br/>\n                    &emsp; &emsp; &emsp; &emsp;{\"<Hello name={this.state.name} name2={this.state.name2}>\"} <br/>\n                    &emsp; &emsp; &emsp; &emsp; &emsp;{\"<h1>hello header</h1>\"} <em>----this will be the props.children of Hello</em><br/>\n                    &emsp; &emsp; &emsp; &emsp; &emsp;{\"<h2>hello header 2</h2>\"} <em>----this will be the props.children of Hello</em><br/>\n                    &emsp; &emsp; &emsp; &emsp;{\"</Hello>\"} <br/>\n                    <br/> <br/>\n                    &emsp; {\"const Hello = (props) => {\"}<br/>\n                    &emsp; &emsp;{\"return (   \"}<br/>\n                    &emsp; &emsp; &emsp;{\"<div> \"}<br/>\n                    &emsp; &emsp; &emsp; &emsp;{\"<h1>Hello {props.name} and {props.name2} !</h1>\"}<br/>\n                    &emsp; &emsp; &emsp; &emsp;{\"children:<br/>\"}<br/>\n                    &emsp; &emsp; &emsp; &emsp;{\"{props.children}\"} <em>----this will show all the children of Hello above (both h1 and h2)</em><br/>\n                    &emsp;&emsp;&emsp;{\"</div>\"}<br/>\n                    &emsp;&emsp;{\")\"}      <br/>              \n                </div>            \n\n                <br/><br/>\n                <h1><u>Binding Functions</u></h1>\n                When we create a function in react which is not an arrow function, we have to bind it so we don't get an error.  We do this in the constructor, and we \n                would do something like this:\n                <div className=\"CodeContainer\">\n                    &emsp; {\"this.handleSomething = this.handleSomething.bind(this);\"} <br/>\n                </div>\n                Using an arrow function instead saves us from having to remember to bind it.  However, if we have a lot going on, we may get into performance issues.\n                <div className=\"CodeContainer\">\n                    &emsp;{\"onClick = { (e) => this.deleteRow(id,e)}...\"} <br/>\n                    &emsp;{\"onClick = { this.deleteRow.bind(this,id)}...\"}\n                </div>\n\n                <br/><br/>\n                <h1><u>Some minor additions</u></h1>\n                If you want to force a component to be rerendered, even though given what's changed React doesn't think it needs to be rerendered, give it\n                a key and it will be rerendered if the key changes.\n                <div className=\"CodeContainer\">\n                    &emsp;{\"<Component key={this.state.selectedLetter}/>\"}\n                </div>\n                You can have a variable used to display something, so whatever is rendered depends on something else.  Have the variable between {} in the return,\n                set it to whatever you need somewhere else in the code.  This include styling.\n                \n            </div>\n        </div>\n    </React.Fragment>\n)\n\nexport default ReactNotes1;\n","import React, {Component} from \"react\";\r\n\r\nclass  ReadBackwards extends Component {\r\n  //add radiot buttons for other options since rss may stop working soon, since other rss don't authorize.  Maybe an API for twitter or news.\r\n  constructor(){\r\n    super();               \r\n    this.state = { url:\"https://rss.nytimes.com/services/xml/rss/nyt/HomePage.xml\",titleDesc:[] }        \r\n       \r\n    this.getRssFeed();    \r\n    }\r\n       \r\n    async getRssFeed(){         \r\n      let url = this.state.url;         \r\n      let response = await fetch(url);      \r\n      let xmlText = \"\";   \r\n      var xmlDoc = \"\"      \r\n                  \r\n      xmlText = await response.text();      \r\n      var parser = new DOMParser();\r\n      var xmlDoc = parser.parseFromString(xmlText, \"text/xml\");                 \r\n      \r\n      let arrayOfNews = [];            \r\n      for (var i=0; i< 20; i++){    \r\n        let obj = {title:\"\", desc:\"\"};    \r\n        try{\r\n          obj.title = xmlDoc.getElementsByTagName(\"title\")[i].childNodes[0].nodeValue;\r\n          obj.desc = xmlDoc.getElementsByTagName(\"description\")[i].childNodes[0].nodeValue;          \r\n        }catch{          \r\n          obj.title = \"\";\r\n          obj.desc = \"\";\r\n        }\r\n        arrayOfNews.push(obj);\r\n      }            \r\n      this.setState( {titleDesc:arrayOfNews} )      \r\n    }\r\n   \r\n    render() {      \r\n      var revStyleTitle = {              \r\n        transform: \"scale(-1, 1)\",\r\n        color:\"deeppink\",\r\n        fontFamily:\"Times New Roman\",               \r\n        fontSize: \"50px\",\r\n        \r\n      };\r\n      var revStyleDesc = {        \r\n        transform: \"scale(-1, 1)\",\r\n        fontFamily:\"Arial\",            \r\n        fontSize: \"40px\",       \r\n      };\r\n      var revStyleOrig = {                \r\n        fontFamily:\"Times New Roman\",            \r\n        fontSize: \"15px\",       \r\n        color:\"green\"\r\n      };\r\n      return(        \r\n      <React.Fragment>\r\n         <div className=\"TopMarginToDealWithNavBarAll\">\r\n            <div className=\"CenterMyBorder\" >\r\n                <strong>Reading backwards is good for you!</strong><br/>\r\n                Direction is right to left and the letters are rotated. <br/> I chose the NYT feed because it works and I didn't want to call an API that needs a key,\r\n                which is pretty much all of them.  It this feed stops working then I'll think of something else.\r\n                <br/><br/>     \r\n                \r\n                <span style={revStyleOrig}>{this.state.url}</span>\r\n                {this.state.titleDesc.map( (obj, index) =>  \r\n                        <div key={index}>\r\n                          <div style={revStyleTitle}>{obj.title}</div>  \r\n                          <div style={revStyleOrig}>{obj.title}</div>          \r\n                          <div style={revStyleDesc}>{obj.desc}</div>\r\n                          <div style={revStyleOrig}>{obj.desc}</div>\r\n                          <hr/>\r\n                          <br/>\r\n                        </div>                \r\n                                          \r\n                )};                   \r\n            </div>\r\n        \r\n        </div>\r\n      </React.Fragment>)\r\n  };\r\n}\r\n\r\nexport default ReadBackwards;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Route, BrowserRouter as Router, Switch} from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport './Views/KidsActivities/KidsPages.css';\r\n\r\nimport LandingPage from \"./LandingPage\";\r\nimport NavBar from \"./Components/NavBar.js\";\r\n\r\n\r\n//additional pages\r\nimport bdpq from \"./Views/KidsActivities/bdpq\";\r\nimport bdpqCircles from \"./Views/KidsActivities/bdpqCircles\";\r\nimport mnwCircles from \"./Views/KidsActivities/mnwCircles\";\r\nimport CanvasTrace from \"./Views/KidsActivities/CanvasTrace\";\r\nimport GreaterLessEqual from \"./Views/KidsActivities/greaterLessEqual\";\r\nimport ThreeLetterWordSounds from \"./Views/KidsActivities/3LetterWordSounds\";\r\nimport BeginEndSounds from \"./Views/KidsActivities/BeginEndSounds\";\r\nimport ThreeLetterRhymes from \"./Views/KidsActivities/3LetterRhymes\";\r\nimport PlusOnePlusZero from \"./Views/KidsActivities/PlusOnePlusZero\";\r\nimport MinorPrintables from \"./Views/KidsActivities/minorPrintables\";\r\n\r\nimport CSSAnimations from \"./Views/SoftwareNotes/cssanimations\";\r\nimport CSSPositioning from \"./Views/SoftwareNotes/csspositioning\";\r\nimport ReactNotes1 from \"./Views/SoftwareNotes/reactnotes1\";\r\nimport ReadBackwards from \"./Views/PersonalInterests/ReadBackwards\";\r\n\r\n\r\n/*change to common page for all circle letters if adding any more*/\r\n\r\nconst routing = (\r\n    <React.Fragment>   \r\n        <div className=\"fragmentContainer\"> {/*use for some styling only*/}\r\n        \r\n        <NavBar/>                           \r\n\r\n         <Router>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/\"} component={LandingPage}/>\r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/bdpq\"} component={bdpq}/>\r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/bdpqCircles\"} component={bdpqCircles}/>\r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/mnwCircles\"} component={mnwCircles}/> \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/CanvasTrace\"} component={CanvasTrace}/>                      \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/GreaterLessEqual\"} component={GreaterLessEqual}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/threeLetterWordSounds\"} component={ThreeLetterWordSounds}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/threeLetterRhymes\"} component={ThreeLetterRhymes}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/BeginEndSounds\"} component={BeginEndSounds}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/PlusOnePlusZero\"} component={PlusOnePlusZero}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/MinorPrintables\"} component={MinorPrintables}/>  \r\n\r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/CSSAnimations\"} component={CSSAnimations}/>  \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/CSSPositioning\"} component={CSSPositioning}/>  \r\n                    <Route exact path ={process.env.REACT_APP_FOR_PATH + \"/ReactNotes1\"} component={ReactNotes1}/>  \r\n                    \r\n                    <Route exact path = {process.env.REACT_APP_FOR_PATH + \"/ReadBackwards\"} component={ReadBackwards}/>                      \r\n                    \r\n                </Switch>              \r\n            </div>\r\n        </Router> \r\n        \r\n        </div>   \r\n    </React.Fragment>\r\n    \r\n)\r\n\r\n\r\n\r\nReactDOM.render(           \r\n        routing ,      \r\n    document.getElementById('root'));\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}